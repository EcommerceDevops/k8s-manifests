Adding repo linkerd-edge https://helm.linkerd.io/edge
"linkerd-edge" has been added to your repositories

Adding repo linkerd https://helm.linkerd.io/stable
"linkerd" has been added to your repositories

Adding repo chaos-mesh https://charts.chaos-mesh.org
"chaos-mesh" has been added to your repositories


hook[prepare] logs | namespace/default annotated
hook[prepare] logs | 
Building dependency release=zipkin, chart=charts/zipkin
Templating release=linkerd-crds, chart=linkerd-edge/linkerd-crds
---
# Source: linkerd-crds/templates/gateway.networking.k8s.io_grpcroutes.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/2997
    gateway.networking.k8s.io/bundle-version: v1.1.1
    gateway.networking.k8s.io/channel: experimental
    linkerd.io/created-by: linkerd/helm %!s(<nil>)
    helm.sh/resource-policy: keep
  labels:
    helm.sh/chart: linkerd-crds-2025.5.4
    linkerd.io/control-plane-ns: linkerd
  creationTimestamp: null
  name: grpcroutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: GRPCRoute
    listKind: GRPCRouteList
    plural: grpcroutes
    singular: grpcroute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.hostnames
      name: Hostnames
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          GRPCRoute provides a way to route gRPC requests. This includes the capability
          to match requests by hostname, gRPC service, gRPC method, or HTTP/2 header.
          Filters can be used to specify additional processing steps. Backends specify
          where matching requests will be routed.


          GRPCRoute falls under extended support within the Gateway API. Within the
          following specification, the word "MUST" indicates that an implementation
          supporting GRPCRoute must conform to the indicated requirement, but an
          implementation not supporting this route type need not follow the requirement
          unless explicitly indicated.


          Implementations supporting `GRPCRoute` with the `HTTPS` `ProtocolType` MUST
          accept HTTP/2 connections without an initial upgrade from HTTP/1.1, i.e. via
          ALPN. If the implementation does not support this, then it MUST set the
          "Accepted" condition to "False" for the affected listener with a reason of
          "UnsupportedProtocol".  Implementations MAY also accept HTTP/2 connections
          with an upgrade from HTTP/1.


          Implementations supporting `GRPCRoute` with the `HTTP` `ProtocolType` MUST
          support HTTP/2 over cleartext TCP (h2c,
          https://www.rfc-editor.org/rfc/rfc7540#section-3.1) without an initial
          upgrade from HTTP/1.1, i.e. with prior knowledge
          (https://www.rfc-editor.org/rfc/rfc7540#section-3.4). If the implementation
          does not support this, then it MUST set the "Accepted" condition to "False"
          for the affected listener with a reason of "UnsupportedProtocol".
          Implementations MAY also accept HTTP/2 connections with an upgrade from
          HTTP/1, i.e. without prior knowledge.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of GRPCRoute.
            properties:
              hostnames:
                description: |-
                  Hostnames defines a set of hostnames to match against the GRPC
                  Host header to select a GRPCRoute to process the request. This matches
                  the RFC 1123 definition of a hostname with 2 notable exceptions:


                  1. IPs are not allowed.
                  2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                     label MUST appear by itself as the first label.


                  If a hostname is specified by both the Listener and GRPCRoute, there
                  MUST be at least one intersecting hostname for the GRPCRoute to be
                  attached to the Listener. For example:


                  * A Listener with `test.example.com` as the hostname matches GRPCRoutes
                    that have either not specified any hostnames, or have specified at
                    least one of `test.example.com` or `*.example.com`.
                  * A Listener with `*.example.com` as the hostname matches GRPCRoutes
                    that have either not specified any hostnames or have specified at least
                    one hostname that matches the Listener hostname. For example,
                    `test.example.com` and `*.example.com` would both match. On the other
                    hand, `example.com` and `test.example.net` would not match.


                  Hostnames that are prefixed with a wildcard label (`*.`) are interpreted
                  as a suffix match. That means that a match for `*.example.com` would match
                  both `test.example.com`, and `foo.test.example.com`, but not `example.com`.


                  If both the Listener and GRPCRoute have specified hostnames, any
                  GRPCRoute hostnames that do not match the Listener hostname MUST be
                  ignored. For example, if a Listener specified `*.example.com`, and the
                  GRPCRoute specified `test.example.com` and `test.example.net`,
                  `test.example.net` MUST NOT be considered for a match.


                  If both the Listener and GRPCRoute have specified hostnames, and none
                  match with the criteria above, then the GRPCRoute MUST NOT be accepted by
                  the implementation. The implementation MUST raise an 'Accepted' Condition
                  with a status of `False` in the corresponding RouteParentStatus.


                  If a Route (A) of type HTTPRoute or GRPCRoute is attached to a
                  Listener and that listener already has another Route (B) of the other
                  type attached and the intersection of the hostnames of A and B is
                  non-empty, then the implementation MUST accept exactly one of these two
                  routes, determined by the following criteria, in order:


                  * The oldest Route based on creation timestamp.
                  * The Route appearing first in alphabetical order by
                    "{namespace}/{name}".


                  The rejected Route MUST raise an 'Accepted' condition with a status of
                  'False' in the corresponding RouteParentStatus.


                  Support: Core
                items:
                  description: |-
                    Hostname is the fully qualified domain name of a network host. This matches
                    the RFC 1123 definition of a hostname with 2 notable exceptions:


                     1. IPs are not allowed.
                     2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                        label must appear by itself as the first label.


                    Hostname can be "precise" which is a domain name without the terminating
                    dot of a network host (e.g. "foo.example.com") or "wildcard", which is a
                    domain name prefixed with a single wildcard label (e.g. `*.example.com`).


                    Note that as per RFC1035 and RFC1123, a *label* must consist of lower case
                    alphanumeric characters or '-', and must start and end with an alphanumeric
                    character. No other punctuation is allowed.
                  maxLength: 253
                  minLength: 1
                  pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                maxItems: 16
                type: array
              parentRefs:
                description: |+
                  ParentRefs references the resources (usually Gateways) that a Route wants
                  to be attached to. Note that the referenced parent resource needs to
                  allow this for the attachment to be complete. For Gateways, that means
                  the Gateway needs to allow attachment from Routes of this kind and
                  namespace. For Services, that means the Service must either be in the same
                  namespace for a "producer" route, or the mesh implementation must support
                  and allow "consumer" routes for the referenced Service. ReferenceGrant is
                  not applicable for governing ParentRefs to Services - it is not possible to
                  create a "producer" route for a Service in a different namespace from the
                  Route.


                  There are two kinds of parent resources with "Core" support:


                  * Gateway (Gateway conformance profile)
                  * Service (Mesh conformance profile, ClusterIP Services only)


                  This API may be extended in the future to support additional kinds of parent
                  resources.


                  ParentRefs must be _distinct_. This means either that:


                  * They select different objects.  If this is the case, then parentRef
                    entries are distinct. In terms of fields, this means that the
                    multi-part key defined by `group`, `kind`, `namespace`, and `name` must
                    be unique across all parentRef entries in the Route.
                  * They do not select different objects, but for each optional field used,
                    each ParentRef that selects the same object must set the same set of
                    optional fields to different values. If one ParentRef sets a
                    combination of optional fields, all must set the same combination.


                  Some examples:


                  * If one ParentRef sets `sectionName`, all ParentRefs referencing the
                    same object must also set `sectionName`.
                  * If one ParentRef sets `port`, all ParentRefs referencing the same
                    object must also set `port`.
                  * If one ParentRef sets `sectionName` and `port`, all ParentRefs
                    referencing the same object must also set `sectionName` and `port`.


                  It is possible to separately reference multiple distinct objects that may
                  be collapsed by an implementation. For example, some implementations may
                  choose to merge compatible Gateway Listeners together. If that is the
                  case, the list of routes attached to those resources should also be
                  merged.


                  Note that for ParentRefs that cross namespace boundaries, there are specific
                  rules. Cross-namespace references are only valid if they are explicitly
                  allowed by something in the namespace they are referring to. For example,
                  Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                  generic way to enable other kinds of cross-namespace reference.



                  ParentRefs from a Route to a Service in the same namespace are "producer"
                  routes, which apply default routing rules to inbound connections from
                  any namespace to the Service.


                  ParentRefs from a Route to a Service in a different namespace are
                  "consumer" routes, and these routing rules are only applied to outbound
                  connections originating from the same namespace as the Route, for which
                  the intended destination of the connections are a Service targeted as a
                  ParentRef of the Route.






                items:
                  description: |-
                    ParentReference identifies an API object (usually a Gateway) that can be considered
                    a parent of this resource (usually a route). There are two kinds of parent resources
                    with "Core" support:


                    * Gateway (Gateway conformance profile)
                    * Service (Mesh conformance profile, ClusterIP Services only)


                    This API may be extended in the future to support additional kinds of parent
                    resources.


                    The API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid.
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: |-
                        Group is the group of the referent.
                        When unspecified, "gateway.networking.k8s.io" is inferred.
                        To set the core API group (such as for a "Service" kind referent),
                        Group must be explicitly set to "" (empty string).


                        Support: Core
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: |-
                        Kind is kind of the referent.


                        There are two kinds of parent resources with "Core" support:


                        * Gateway (Gateway conformance profile)
                        * Service (Mesh conformance profile, ClusterIP Services only)


                        Support for other resources is Implementation-Specific.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: |-
                        Name is the name of the referent.


                        Support: Core
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referent. When unspecified, this refers
                        to the local namespace of the Route.


                        Note that there are specific rules for ParentRefs which cross namespace
                        boundaries. Cross-namespace references are only valid if they are explicitly
                        allowed by something in the namespace they are referring to. For example:
                        Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                        generic way to enable any other kind of cross-namespace reference.



                        ParentRefs from a Route to a Service in the same namespace are "producer"
                        routes, which apply default routing rules to inbound connections from
                        any namespace to the Service.


                        ParentRefs from a Route to a Service in a different namespace are
                        "consumer" routes, and these routing rules are only applied to outbound
                        connections originating from the same namespace as the Route, for which
                        the intended destination of the connections are a Service targeted as a
                        ParentRef of the Route.



                        Support: Core
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: |-
                        Port is the network port this Route targets. It can be interpreted
                        differently based on the type of parent resource.


                        When the parent resource is a Gateway, this targets all listeners
                        listening on the specified port that also support this kind of Route(and
                        select this Route). It's not recommended to set `Port` unless the
                        networking behaviors specified in a Route must apply to a specific port
                        as opposed to a listener(s) whose port(s) may be changed. When both Port
                        and SectionName are specified, the name and port of the selected listener
                        must match both specified values.



                        When the parent resource is a Service, this targets a specific port in the
                        Service spec. When both Port (experimental) and SectionName are specified,
                        the name and port of the selected port must match both specified values.



                        Implementations MAY choose to support other parent resources.
                        Implementations supporting other types of parent resources MUST clearly
                        document how/if Port is interpreted.


                        For the purpose of status, an attachment is considered successful as
                        long as the parent resource accepts it partially. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route,
                        the Route MUST be considered detached from the Gateway.


                        Support: Extended
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: |-
                        SectionName is the name of a section within the target resource. In the
                        following resources, SectionName is interpreted as the following:


                        * Gateway: Listener name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.
                        * Service: Port name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.


                        Implementations MAY choose to support attaching Routes to other resources.
                        If that is the case, they MUST clearly document how SectionName is
                        interpreted.


                        When unspecified (empty string), this will reference the entire resource.
                        For the purpose of status, an attachment is considered successful if at
                        least one section in the parent resource accepts it. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                        the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route, the
                        Route MUST be considered detached from the Gateway.


                        Support: Core
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
                x-kubernetes-validations:
                - message: sectionName or port must be specified when parentRefs includes
                    2 or more references to the same parent
                  rule: 'self.all(p1, self.all(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '''') && (!has(p2.__namespace__) || p2.__namespace__
                    == '''')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__)) ? ((!has(p1.sectionName)
                    || p1.sectionName == '''') == (!has(p2.sectionName) || p2.sectionName
                    == '''') && (!has(p1.port) || p1.port == 0) == (!has(p2.port)
                    || p2.port == 0)): true))'
                - message: sectionName or port must be unique when parentRefs includes
                    2 or more references to the same parent
                  rule: self.all(p1, self.exists_one(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__
                    == '')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__ )) && (((!has(p1.sectionName)
                    || p1.sectionName == '') && (!has(p2.sectionName) || p2.sectionName
                    == '')) || ( has(p1.sectionName) && has(p2.sectionName) && p1.sectionName
                    == p2.sectionName)) && (((!has(p1.port) || p1.port == 0) && (!has(p2.port)
                    || p2.port == 0)) || (has(p1.port) && has(p2.port) && p1.port
                    == p2.port))))
              rules:
                description: Rules are a list of GRPC matchers, filters and actions.
                items:
                  description: |-
                    GRPCRouteRule defines the semantics for matching a gRPC request based on
                    conditions (matches), processing it (filters), and forwarding the request to
                    an API object (backendRefs).
                  properties:
                    backendRefs:
                      description: |-
                        BackendRefs defines the backend(s) where matching requests should be
                        sent.


                        Failure behavior here depends on how many BackendRefs are specified and
                        how many are invalid.


                        If *all* entries in BackendRefs are invalid, and there are also no filters
                        specified in this route rule, *all* traffic which matches this rule MUST
                        receive an `UNAVAILABLE` status.


                        See the GRPCBackendRef definition for the rules about what makes a single
                        GRPCBackendRef invalid.


                        When a GRPCBackendRef is invalid, `UNAVAILABLE` statuses MUST be returned for
                        requests that would have otherwise been routed to an invalid backend. If
                        multiple backends are specified, and some are invalid, the proportion of
                        requests that would otherwise have been routed to an invalid backend
                        MUST receive an `UNAVAILABLE` status.


                        For example, if two backends are specified with equal weights, and one is
                        invalid, 50 percent of traffic MUST receive an `UNAVAILABLE` status.
                        Implementations may choose how that 50 percent is determined.


                        Support: Core for Kubernetes Service


                        Support: Implementation-specific for any other resource


                        Support for weight: Core
                      items:
                        description: |-
                          GRPCBackendRef defines how a GRPCRoute forwards a gRPC request.


                          Note that when a namespace different than the local namespace is specified, a
                          ReferenceGrant object is required in the referent namespace to allow that
                          namespace's owner to accept the reference. See the ReferenceGrant
                          documentation for details.


                          <gateway:experimental:description>


                          When the BackendRef points to a Kubernetes Service, implementations SHOULD
                          honor the appProtocol field if it is set for the target Service Port.


                          Implementations supporting appProtocol SHOULD recognize the Kubernetes
                          Standard Application Protocols defined in KEP-3726.


                          If a Service appProtocol isn't specified, an implementation MAY infer the
                          backend protocol through its own means. Implementations MAY infer the
                          protocol from the Route type referring to the backend Service.


                          If a Route is not able to send traffic to the backend using the specified
                          protocol then the backend is considered invalid. Implementations MUST set the
                          "ResolvedRefs" condition to "False" with the "UnsupportedProtocol" reason.


                          </gateway:experimental:description>
                        properties:
                          filters:
                            description: |-
                              Filters defined at this level MUST be executed if and only if the
                              request is being forwarded to the backend defined here.


                              Support: Implementation-specific (For broader support of filters, use the
                              Filters field in GRPCRouteRule.)
                            items:
                              description: |-
                                GRPCRouteFilter defines processing steps that must be completed during the
                                request or response lifecycle. GRPCRouteFilters are meant as an extension
                                point to express processing that may be done in Gateway implementations. Some
                                examples include request or response modification, implementing
                                authentication strategies, rate-limiting, and traffic shaping. API
                                guarantee/conformance is defined based on the type of the filter.
                              properties:
                                extensionRef:
                                  description: |-
                                    ExtensionRef is an optional, implementation-specific extension to the
                                    "filter" behavior.  For example, resource "myroutefilter" in group
                                    "networking.example.net"). ExtensionRef MUST NOT be used for core and
                                    extended filters.


                                    Support: Implementation-specific


                                    This filter can be used multiple times within the same rule.
                                  properties:
                                    group:
                                      description: |-
                                        Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                        When unspecified or empty string, core API group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      description: Kind is kind of the referent. For
                                        example "HTTPRoute" or "Service".
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                  required:
                                  - group
                                  - kind
                                  - name
                                  type: object
                                requestHeaderModifier:
                                  description: |-
                                    RequestHeaderModifier defines a schema for a filter that modifies request
                                    headers.


                                    Support: Core
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz


                                        Config:
                                          remove: ["my-header1", "my-header3"]


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                requestMirror:
                                  description: |-
                                    RequestMirror defines a schema for a filter that mirrors requests.
                                    Requests are sent to the specified destination, but responses from
                                    that destination are ignored.


                                    This filter can be used multiple times within the same rule. Note that
                                    not all implementations will be able to support mirroring to multiple
                                    backends.


                                    Support: Extended
                                  properties:
                                    backendRef:
                                      description: |-
                                        BackendRef references a resource where mirrored requests are sent.


                                        Mirrored requests must be sent only to a single destination endpoint
                                        within this BackendRef, irrespective of how many endpoints are present
                                        within this BackendRef.


                                        If the referent cannot be found, this BackendRef is invalid and must be
                                        dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                        condition on the Route status is set to `status: False` and not configure
                                        this backend in the underlying implementation.


                                        If there is a cross-namespace reference to an *existing* object
                                        that is not allowed by a ReferenceGrant, the controller must ensure the
                                        "ResolvedRefs"  condition on the Route is set to `status: False`,
                                        with the "RefNotPermitted" reason and not configure this backend in the
                                        underlying implementation.


                                        In either error case, the Message of the `ResolvedRefs` Condition
                                        should be used to provide more detail about the problem.


                                        Support: Extended for Kubernetes Service


                                        Support: Implementation-specific for any other resource
                                      properties:
                                        group:
                                          default: ""
                                          description: |-
                                            Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                            When unspecified or empty string, core API group is inferred.
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        kind:
                                          default: Service
                                          description: |-
                                            Kind is the Kubernetes resource kind of the referent. For example
                                            "Service".


                                            Defaults to "Service" when not specified.


                                            ExternalName services can refer to CNAME DNS records that may live
                                            outside of the cluster and as such are difficult to reason about in
                                            terms of conformance. They also may not be safe to forward to (see
                                            CVE-2021-25740 for more information). Implementations SHOULD NOT
                                            support ExternalName Services.


                                            Support: Core (Services with a type other than ExternalName)


                                            Support: Implementation-specific (Services with type ExternalName)
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                          type: string
                                        name:
                                          description: Name is the name of the referent.
                                          maxLength: 253
                                          minLength: 1
                                          type: string
                                        namespace:
                                          description: |-
                                            Namespace is the namespace of the backend. When unspecified, the local
                                            namespace is inferred.


                                            Note that when a namespace different than the local namespace is specified,
                                            a ReferenceGrant object is required in the referent namespace to allow that
                                            namespace's owner to accept the reference. See the ReferenceGrant
                                            documentation for details.


                                            Support: Core
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                        port:
                                          description: |-
                                            Port specifies the destination port number to use for this resource.
                                            Port is required when the referent is a Kubernetes Service. In this
                                            case, the port number is the service port number, not the target port.
                                            For other resources, destination port might be derived from the referent
                                            resource or this field.
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                      required:
                                      - name
                                      type: object
                                      x-kubernetes-validations:
                                      - message: Must have port for Service reference
                                        rule: '(size(self.group) == 0 && self.kind
                                          == ''Service'') ? has(self.port) : true'
                                  required:
                                  - backendRef
                                  type: object
                                responseHeaderModifier:
                                  description: |-
                                    ResponseHeaderModifier defines a schema for a filter that modifies response
                                    headers.


                                    Support: Extended
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz


                                        Config:
                                          remove: ["my-header1", "my-header3"]


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                type:
                                  description: |+
                                    Type identifies the type of filter to apply. As with other API fields,
                                    types are classified into three conformance levels:


                                    - Core: Filter types and their corresponding configuration defined by
                                      "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                      implementations supporting GRPCRoute MUST support core filters.


                                    - Extended: Filter types and their corresponding configuration defined by
                                      "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                      are encouraged to support extended filters.


                                    - Implementation-specific: Filters that are defined and supported by specific vendors.
                                      In the future, filters showing convergence in behavior across multiple
                                      implementations will be considered for inclusion in extended or core
                                      conformance levels. Filter-specific configuration for such filters
                                      is specified using the ExtensionRef field. `Type` MUST be set to
                                      "ExtensionRef" for custom filters.


                                    Implementers are encouraged to define custom implementation types to
                                    extend the core API with implementation-specific behavior.


                                    If a reference to a custom filter type cannot be resolved, the filter
                                    MUST NOT be skipped. Instead, requests that would have been processed by
                                    that filter MUST receive a HTTP error response.


                                  enum:
                                  - ResponseHeaderModifier
                                  - RequestHeaderModifier
                                  - RequestMirror
                                  - ExtensionRef
                                  type: string
                              required:
                              - type
                              type: object
                              x-kubernetes-validations:
                              - message: filter.requestHeaderModifier must be nil
                                  if the filter.type is not RequestHeaderModifier
                                rule: '!(has(self.requestHeaderModifier) && self.type
                                  != ''RequestHeaderModifier'')'
                              - message: filter.requestHeaderModifier must be specified
                                  for RequestHeaderModifier filter.type
                                rule: '!(!has(self.requestHeaderModifier) && self.type
                                  == ''RequestHeaderModifier'')'
                              - message: filter.responseHeaderModifier must be nil
                                  if the filter.type is not ResponseHeaderModifier
                                rule: '!(has(self.responseHeaderModifier) && self.type
                                  != ''ResponseHeaderModifier'')'
                              - message: filter.responseHeaderModifier must be specified
                                  for ResponseHeaderModifier filter.type
                                rule: '!(!has(self.responseHeaderModifier) && self.type
                                  == ''ResponseHeaderModifier'')'
                              - message: filter.requestMirror must be nil if the filter.type
                                  is not RequestMirror
                                rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                              - message: filter.requestMirror must be specified for
                                  RequestMirror filter.type
                                rule: '!(!has(self.requestMirror) && self.type ==
                                  ''RequestMirror'')'
                              - message: filter.extensionRef must be nil if the filter.type
                                  is not ExtensionRef
                                rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                              - message: filter.extensionRef must be specified for
                                  ExtensionRef filter.type
                                rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                            maxItems: 16
                            type: array
                            x-kubernetes-validations:
                            - message: RequestHeaderModifier filter cannot be repeated
                              rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                                <= 1
                            - message: ResponseHeaderModifier filter cannot be repeated
                              rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                                <= 1
                          group:
                            default: ""
                            description: |-
                              Group is the group of the referent. For example, "gateway.networking.k8s.io".
                              When unspecified or empty string, core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: |-
                              Kind is the Kubernetes resource kind of the referent. For example
                              "Service".


                              Defaults to "Service" when not specified.


                              ExternalName services can refer to CNAME DNS records that may live
                              outside of the cluster and as such are difficult to reason about in
                              terms of conformance. They also may not be safe to forward to (see
                              CVE-2021-25740 for more information). Implementations SHOULD NOT
                              support ExternalName Services.


                              Support: Core (Services with a type other than ExternalName)


                              Support: Implementation-specific (Services with type ExternalName)
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: |-
                              Namespace is the namespace of the backend. When unspecified, the local
                              namespace is inferred.


                              Note that when a namespace different than the local namespace is specified,
                              a ReferenceGrant object is required in the referent namespace to allow that
                              namespace's owner to accept the reference. See the ReferenceGrant
                              documentation for details.


                              Support: Core
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: |-
                              Port specifies the destination port number to use for this resource.
                              Port is required when the referent is a Kubernetes Service. In this
                              case, the port number is the service port number, not the target port.
                              For other resources, destination port might be derived from the referent
                              resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: |-
                              Weight specifies the proportion of requests forwarded to the referenced
                              backend. This is computed as weight/(sum of all weights in this
                              BackendRefs list). For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision an
                              implementation supports. Weight is not a percentage and the sum of
                              weights does not need to equal 100.


                              If only one backend is specified and it has a weight greater than 0, 100%
                              of the traffic is forwarded to that backend. If weight is set to 0, no
                              traffic should be forwarded for this entry. If unspecified, weight
                              defaults to 1.


                              Support for this field varies based on the context where used.
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                        x-kubernetes-validations:
                        - message: Must have port for Service reference
                          rule: '(size(self.group) == 0 && self.kind == ''Service'')
                            ? has(self.port) : true'
                      maxItems: 16
                      type: array
                    filters:
                      description: |-
                        Filters define the filters that are applied to requests that match
                        this rule.


                        The effects of ordering of multiple behaviors are currently unspecified.
                        This can change in the future based on feedback during the alpha stage.


                        Conformance-levels at this level are defined based on the type of filter:


                        - ALL core filters MUST be supported by all implementations that support
                          GRPCRoute.
                        - Implementers are encouraged to support extended filters.
                        - Implementation-specific custom filters have no API guarantees across
                          implementations.


                        Specifying the same filter multiple times is not supported unless explicitly
                        indicated in the filter.


                        If an implementation can not support a combination of filters, it must clearly
                        document that limitation. In cases where incompatible or unsupported
                        filters are specified and cause the `Accepted` condition to be set to status
                        `False`, implementations may use the `IncompatibleFilters` reason to specify
                        this configuration error.


                        Support: Core
                      items:
                        description: |-
                          GRPCRouteFilter defines processing steps that must be completed during the
                          request or response lifecycle. GRPCRouteFilters are meant as an extension
                          point to express processing that may be done in Gateway implementations. Some
                          examples include request or response modification, implementing
                          authentication strategies, rate-limiting, and traffic shaping. API
                          guarantee/conformance is defined based on the type of the filter.
                        properties:
                          extensionRef:
                            description: |-
                              ExtensionRef is an optional, implementation-specific extension to the
                              "filter" behavior.  For example, resource "myroutefilter" in group
                              "networking.example.net"). ExtensionRef MUST NOT be used for core and
                              extended filters.


                              Support: Implementation-specific


                              This filter can be used multiple times within the same rule.
                            properties:
                              group:
                                description: |-
                                  Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                  When unspecified or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: Kind is kind of the referent. For example
                                  "HTTPRoute" or "Service".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                            required:
                            - group
                            - kind
                            - name
                            type: object
                          requestHeaderModifier:
                            description: |-
                              RequestHeaderModifier defines a schema for a filter that modifies request
                              headers.


                              Support: Core
                            properties:
                              add:
                                description: |-
                                  Add adds the given header(s) (name, value) to the request
                                  before the action. It appends to any existing values associated
                                  with the header name.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    add:
                                    - name: "my-header"
                                      value: "bar,baz"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: foo,bar,baz
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: |-
                                  Remove the given header(s) from the HTTP request before the action. The
                                  value of Remove is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see
                                  https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header1: foo
                                    my-header2: bar
                                    my-header3: baz


                                  Config:
                                    remove: ["my-header1", "my-header3"]


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header2: bar
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                                x-kubernetes-list-type: set
                              set:
                                description: |-
                                  Set overwrites the request with the given header (name, value)
                                  before the action.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    set:
                                    - name: "my-header"
                                      value: "bar"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: bar
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          requestMirror:
                            description: |-
                              RequestMirror defines a schema for a filter that mirrors requests.
                              Requests are sent to the specified destination, but responses from
                              that destination are ignored.


                              This filter can be used multiple times within the same rule. Note that
                              not all implementations will be able to support mirroring to multiple
                              backends.


                              Support: Extended
                            properties:
                              backendRef:
                                description: |-
                                  BackendRef references a resource where mirrored requests are sent.


                                  Mirrored requests must be sent only to a single destination endpoint
                                  within this BackendRef, irrespective of how many endpoints are present
                                  within this BackendRef.


                                  If the referent cannot be found, this BackendRef is invalid and must be
                                  dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                  condition on the Route status is set to `status: False` and not configure
                                  this backend in the underlying implementation.


                                  If there is a cross-namespace reference to an *existing* object
                                  that is not allowed by a ReferenceGrant, the controller must ensure the
                                  "ResolvedRefs"  condition on the Route is set to `status: False`,
                                  with the "RefNotPermitted" reason and not configure this backend in the
                                  underlying implementation.


                                  In either error case, the Message of the `ResolvedRefs` Condition
                                  should be used to provide more detail about the problem.


                                  Support: Extended for Kubernetes Service


                                  Support: Implementation-specific for any other resource
                                properties:
                                  group:
                                    default: ""
                                    description: |-
                                      Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                      When unspecified or empty string, core API group is inferred.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    default: Service
                                    description: |-
                                      Kind is the Kubernetes resource kind of the referent. For example
                                      "Service".


                                      Defaults to "Service" when not specified.


                                      ExternalName services can refer to CNAME DNS records that may live
                                      outside of the cluster and as such are difficult to reason about in
                                      terms of conformance. They also may not be safe to forward to (see
                                      CVE-2021-25740 for more information). Implementations SHOULD NOT
                                      support ExternalName Services.


                                      Support: Core (Services with a type other than ExternalName)


                                      Support: Implementation-specific (Services with type ExternalName)
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace of the backend. When unspecified, the local
                                      namespace is inferred.


                                      Note that when a namespace different than the local namespace is specified,
                                      a ReferenceGrant object is required in the referent namespace to allow that
                                      namespace's owner to accept the reference. See the ReferenceGrant
                                      documentation for details.


                                      Support: Core
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  port:
                                    description: |-
                                      Port specifies the destination port number to use for this resource.
                                      Port is required when the referent is a Kubernetes Service. In this
                                      case, the port number is the service port number, not the target port.
                                      For other resources, destination port might be derived from the referent
                                      resource or this field.
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                required:
                                - name
                                type: object
                                x-kubernetes-validations:
                                - message: Must have port for Service reference
                                  rule: '(size(self.group) == 0 && self.kind == ''Service'')
                                    ? has(self.port) : true'
                            required:
                            - backendRef
                            type: object
                          responseHeaderModifier:
                            description: |-
                              ResponseHeaderModifier defines a schema for a filter that modifies response
                              headers.


                              Support: Extended
                            properties:
                              add:
                                description: |-
                                  Add adds the given header(s) (name, value) to the request
                                  before the action. It appends to any existing values associated
                                  with the header name.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    add:
                                    - name: "my-header"
                                      value: "bar,baz"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: foo,bar,baz
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: |-
                                  Remove the given header(s) from the HTTP request before the action. The
                                  value of Remove is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see
                                  https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header1: foo
                                    my-header2: bar
                                    my-header3: baz


                                  Config:
                                    remove: ["my-header1", "my-header3"]


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header2: bar
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                                x-kubernetes-list-type: set
                              set:
                                description: |-
                                  Set overwrites the request with the given header (name, value)
                                  before the action.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    set:
                                    - name: "my-header"
                                      value: "bar"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: bar
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          type:
                            description: |+
                              Type identifies the type of filter to apply. As with other API fields,
                              types are classified into three conformance levels:


                              - Core: Filter types and their corresponding configuration defined by
                                "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                implementations supporting GRPCRoute MUST support core filters.


                              - Extended: Filter types and their corresponding configuration defined by
                                "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                are encouraged to support extended filters.


                              - Implementation-specific: Filters that are defined and supported by specific vendors.
                                In the future, filters showing convergence in behavior across multiple
                                implementations will be considered for inclusion in extended or core
                                conformance levels. Filter-specific configuration for such filters
                                is specified using the ExtensionRef field. `Type` MUST be set to
                                "ExtensionRef" for custom filters.


                              Implementers are encouraged to define custom implementation types to
                              extend the core API with implementation-specific behavior.


                              If a reference to a custom filter type cannot be resolved, the filter
                              MUST NOT be skipped. Instead, requests that would have been processed by
                              that filter MUST receive a HTTP error response.


                            enum:
                            - ResponseHeaderModifier
                            - RequestHeaderModifier
                            - RequestMirror
                            - ExtensionRef
                            type: string
                        required:
                        - type
                        type: object
                        x-kubernetes-validations:
                        - message: filter.requestHeaderModifier must be nil if the
                            filter.type is not RequestHeaderModifier
                          rule: '!(has(self.requestHeaderModifier) && self.type !=
                            ''RequestHeaderModifier'')'
                        - message: filter.requestHeaderModifier must be specified
                            for RequestHeaderModifier filter.type
                          rule: '!(!has(self.requestHeaderModifier) && self.type ==
                            ''RequestHeaderModifier'')'
                        - message: filter.responseHeaderModifier must be nil if the
                            filter.type is not ResponseHeaderModifier
                          rule: '!(has(self.responseHeaderModifier) && self.type !=
                            ''ResponseHeaderModifier'')'
                        - message: filter.responseHeaderModifier must be specified
                            for ResponseHeaderModifier filter.type
                          rule: '!(!has(self.responseHeaderModifier) && self.type
                            == ''ResponseHeaderModifier'')'
                        - message: filter.requestMirror must be nil if the filter.type
                            is not RequestMirror
                          rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                        - message: filter.requestMirror must be specified for RequestMirror
                            filter.type
                          rule: '!(!has(self.requestMirror) && self.type == ''RequestMirror'')'
                        - message: filter.extensionRef must be nil if the filter.type
                            is not ExtensionRef
                          rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                        - message: filter.extensionRef must be specified for ExtensionRef
                            filter.type
                          rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                      maxItems: 16
                      type: array
                      x-kubernetes-validations:
                      - message: RequestHeaderModifier filter cannot be repeated
                        rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                          <= 1
                      - message: ResponseHeaderModifier filter cannot be repeated
                        rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                          <= 1
                    matches:
                      description: |-
                        Matches define conditions used for matching the rule against incoming
                        gRPC requests. Each match is independent, i.e. this rule will be matched
                        if **any** one of the matches is satisfied.


                        For example, take the following matches configuration:


                        ```
                        matches:
                        - method:
                            service: foo.bar
                          headers:
                            values:
                              version: 2
                        - method:
                            service: foo.bar.v2
                        ```


                        For a request to match against this rule, it MUST satisfy
                        EITHER of the two conditions:


                        - service of foo.bar AND contains the header `version: 2`
                        - service of foo.bar.v2


                        See the documentation for GRPCRouteMatch on how to specify multiple
                        match conditions to be ANDed together.


                        If no matches are specified, the implementation MUST match every gRPC request.


                        Proxy or Load Balancer routing configuration generated from GRPCRoutes
                        MUST prioritize rules based on the following criteria, continuing on
                        ties. Merging MUST not be done between GRPCRoutes and HTTPRoutes.
                        Precedence MUST be given to the rule with the largest number of:


                        * Characters in a matching non-wildcard hostname.
                        * Characters in a matching hostname.
                        * Characters in a matching service.
                        * Characters in a matching method.
                        * Header matches.


                        If ties still exist across multiple Routes, matching precedence MUST be
                        determined in order of the following criteria, continuing on ties:


                        * The oldest Route based on creation timestamp.
                        * The Route appearing first in alphabetical order by
                          "{namespace}/{name}".


                        If ties still exist within the Route that has been given precedence,
                        matching precedence MUST be granted to the first matching rule meeting
                        the above criteria.
                      items:
                        description: |-
                          GRPCRouteMatch defines the predicate used to match requests to a given
                          action. Multiple match types are ANDed together, i.e. the match will
                          evaluate to true only if all conditions are satisfied.


                          For example, the match below will match a gRPC request only if its service
                          is `foo` AND it contains the `version: v1` header:


                          ```
                          matches:
                            - method:
                              type: Exact
                              service: "foo"
                              headers:
                            - name: "version"
                              value "v1"


                          ```
                        properties:
                          headers:
                            description: |-
                              Headers specifies gRPC request header matchers. Multiple match values are
                              ANDed together, meaning, a request MUST match all the specified headers
                              to select the route.
                            items:
                              description: |-
                                GRPCHeaderMatch describes how to select a gRPC route by matching gRPC request
                                headers.
                              properties:
                                name:
                                  description: |-
                                    Name is the name of the gRPC Header to be matched.


                                    If multiple entries specify equivalent header names, only the first
                                    entry with an equivalent name MUST be considered for a match. Subsequent
                                    entries with an equivalent header name MUST be ignored. Due to the
                                    case-insensitivity of header names, "foo" and "Foo" are considered
                                    equivalent.
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: Type specifies how to match against
                                    the value of the header.
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of the gRPC Header
                                    to be matched.
                                  maxLength: 4096
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          method:
                            description: |-
                              Method specifies a gRPC request service/method matcher. If this field is
                              not specified, all services and methods will match.
                            properties:
                              method:
                                description: |-
                                  Value of the method to match against. If left empty or omitted, will
                                  match all services.


                                  At least one of Service and Method MUST be a non-empty string.
                                maxLength: 1024
                                type: string
                              service:
                                description: |-
                                  Value of the service to match against. If left empty or omitted, will
                                  match any service.


                                  At least one of Service and Method MUST be a non-empty string.
                                maxLength: 1024
                                type: string
                              type:
                                default: Exact
                                description: |-
                                  Type specifies how to match against the service and/or method.
                                  Support: Core (Exact with service and method specified)


                                  Support: Implementation-specific (Exact with method specified but no service specified)


                                  Support: Implementation-specific (RegularExpression)
                                enum:
                                - Exact
                                - RegularExpression
                                type: string
                            type: object
                            x-kubernetes-validations:
                            - message: One or both of 'service' or 'method' must be
                                specified
                              rule: 'has(self.type) ? has(self.service) || has(self.method)
                                : true'
                            - message: service must only contain valid characters
                                (matching ^(?i)\.?[a-z_][a-z_0-9]*(\.[a-z_][a-z_0-9]*)*$)
                              rule: '(!has(self.type) || self.type == ''Exact'') &&
                                has(self.service) ? self.service.matches(r"""^(?i)\.?[a-z_][a-z_0-9]*(\.[a-z_][a-z_0-9]*)*$"""):
                                true'
                            - message: method must only contain valid characters (matching
                                ^[A-Za-z_][A-Za-z_0-9]*$)
                              rule: '(!has(self.type) || self.type == ''Exact'') &&
                                has(self.method) ? self.method.matches(r"""^[A-Za-z_][A-Za-z_0-9]*$"""):
                                true'
                        type: object
                      maxItems: 8
                      type: array
                    sessionPersistence:
                      description: |+
                        SessionPersistence defines and configures session persistence
                        for the route rule.


                        Support: Extended


                      properties:
                        absoluteTimeout:
                          description: |-
                            AbsoluteTimeout defines the absolute timeout of the persistent
                            session. Once the AbsoluteTimeout duration has elapsed, the
                            session becomes invalid.


                            Support: Extended
                          pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                          type: string
                        cookieConfig:
                          description: |-
                            CookieConfig provides configuration settings that are specific
                            to cookie-based session persistence.


                            Support: Core
                          properties:
                            lifetimeType:
                              default: Session
                              description: |-
                                LifetimeType specifies whether the cookie has a permanent or
                                session-based lifetime. A permanent cookie persists until its
                                specified expiry time, defined by the Expires or Max-Age cookie
                                attributes, while a session cookie is deleted when the current
                                session ends.


                                When set to "Permanent", AbsoluteTimeout indicates the
                                cookie's lifetime via the Expires or Max-Age cookie attributes
                                and is required.


                                When set to "Session", AbsoluteTimeout indicates the
                                absolute lifetime of the cookie tracked by the gateway and
                                is optional.


                                Support: Core for "Session" type


                                Support: Extended for "Permanent" type
                              enum:
                              - Permanent
                              - Session
                              type: string
                          type: object
                        idleTimeout:
                          description: |-
                            IdleTimeout defines the idle timeout of the persistent session.
                            Once the session has been idle for more than the specified
                            IdleTimeout duration, the session becomes invalid.


                            Support: Extended
                          pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                          type: string
                        sessionName:
                          description: |-
                            SessionName defines the name of the persistent session token
                            which may be reflected in the cookie or the header. Users
                            should avoid reusing session names to prevent unintended
                            consequences, such as rejection or unpredictable behavior.


                            Support: Implementation-specific
                          maxLength: 128
                          type: string
                        type:
                          default: Cookie
                          description: |-
                            Type defines the type of session persistence such as through
                            the use a header or cookie. Defaults to cookie based session
                            persistence.


                            Support: Core for "Cookie" type


                            Support: Extended for "Header" type
                          enum:
                          - Cookie
                          - Header
                          type: string
                      type: object
                      x-kubernetes-validations:
                      - message: AbsoluteTimeout must be specified when cookie lifetimeType
                          is Permanent
                        rule: '!has(self.cookieConfig) || !has(self.cookieConfig.lifetimeType)
                          || self.cookieConfig.lifetimeType != ''Permanent'' || has(self.absoluteTimeout)'
                  type: object
                maxItems: 16
                type: array
            type: object
          status:
            description: Status defines the current state of GRPCRoute.
            properties:
              parents:
                description: |-
                  Parents is a list of parent resources (usually Gateways) that are
                  associated with the route, and the status of the route with respect to
                  each parent. When this route attaches to a parent, the controller that
                  manages the parent must add an entry to this list when the controller
                  first sees the route and should update the entry as appropriate when the
                  route or gateway is modified.


                  Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this API
                  can only populate Route status for the Gateways/parent resources they are
                  responsible for.


                  A maximum of 32 Gateways will be represented in this list. An empty list
                  means the route has not been attached to any Gateway.
                items:
                  description: |-
                    RouteParentStatus describes the status of a route with respect to an
                    associated Parent.
                  properties:
                    conditions:
                      description: |-
                        Conditions describes the status of the route with respect to the Gateway.
                        Note that the route's availability is also subject to the Gateway's own
                        status conditions and listener status.


                        If the Route's ParentRef specifies an existing Gateway that supports
                        Routes of this kind AND that Gateway's controller has sufficient access,
                        then that Gateway's controller MUST set the "Accepted" condition on the
                        Route, to indicate whether the route has been accepted or rejected by the
                        Gateway, and why.


                        A Route MUST be considered "Accepted" if at least one of the Route's
                        rules is implemented by the Gateway.


                        There are a number of cases where the "Accepted" condition may not be set
                        due to lack of controller visibility, that includes when:


                        * The Route refers to a non-existent parent.
                        * The Route is of a type that the controller does not support.
                        * The Route is in a namespace the controller does not have access to.
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource.\n---\nThis struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example,\n\n\n\ttype FooStatus
                          struct{\n\t    // Represents the observations of a foo's
                          current state.\n\t    // Known .status.conditions.type are:
                          \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                          +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    //
                          +listType=map\n\t    // +listMapKey=type\n\t    Conditions
                          []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                          patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                          \   // other fields\n\t}"
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: |-
                              type of condition in CamelCase or in foo.example.com/CamelCase.
                              ---
                              Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                              useful (see .node.status.conditions), the ability to deconflict is important.
                              The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: |-
                        ControllerName is a domain/path string that indicates the name of the
                        controller that wrote this status. This corresponds with the
                        controllerName field on GatewayClass.


                        Example: "example.net/gateway-controller".


                        The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
                        valid Kubernetes names
                        (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).


                        Controllers MUST populate this field when writing status. Controllers should ensure that
                        entries to status populated with their ControllerName are cleaned up when they are no
                        longer necessary.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: |-
                        ParentRef corresponds with a ParentRef in the spec that this
                        RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: |-
                            Group is the group of the referent.
                            When unspecified, "gateway.networking.k8s.io" is inferred.
                            To set the core API group (such as for a "Service" kind referent),
                            Group must be explicitly set to "" (empty string).


                            Support: Core
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: |-
                            Kind is kind of the referent.


                            There are two kinds of parent resources with "Core" support:


                            * Gateway (Gateway conformance profile)
                            * Service (Mesh conformance profile, ClusterIP Services only)


                            Support for other resources is Implementation-Specific.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: |-
                            Name is the name of the referent.


                            Support: Core
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referent. When unspecified, this refers
                            to the local namespace of the Route.


                            Note that there are specific rules for ParentRefs which cross namespace
                            boundaries. Cross-namespace references are only valid if they are explicitly
                            allowed by something in the namespace they are referring to. For example:
                            Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                            generic way to enable any other kind of cross-namespace reference.



                            ParentRefs from a Route to a Service in the same namespace are "producer"
                            routes, which apply default routing rules to inbound connections from
                            any namespace to the Service.


                            ParentRefs from a Route to a Service in a different namespace are
                            "consumer" routes, and these routing rules are only applied to outbound
                            connections originating from the same namespace as the Route, for which
                            the intended destination of the connections are a Service targeted as a
                            ParentRef of the Route.



                            Support: Core
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: |-
                            Port is the network port this Route targets. It can be interpreted
                            differently based on the type of parent resource.


                            When the parent resource is a Gateway, this targets all listeners
                            listening on the specified port that also support this kind of Route(and
                            select this Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to a specific port
                            as opposed to a listener(s) whose port(s) may be changed. When both Port
                            and SectionName are specified, the name and port of the selected listener
                            must match both specified values.



                            When the parent resource is a Service, this targets a specific port in the
                            Service spec. When both Port (experimental) and SectionName are specified,
                            the name and port of the selected port must match both specified values.



                            Implementations MAY choose to support other parent resources.
                            Implementations supporting other types of parent resources MUST clearly
                            document how/if Port is interpreted.


                            For the purpose of status, an attachment is considered successful as
                            long as the parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                            from the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.


                            Support: Extended
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: |-
                            SectionName is the name of a section within the target resource. In the
                            following resources, SectionName is interpreted as the following:


                            * Gateway: Listener name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.
                            * Service: Port name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.


                            Implementations MAY choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName is
                            interpreted.


                            When unspecified (empty string), this will reference the entire resource.
                            For the purpose of status, an attachment is considered successful if at
                            least one section in the parent resource accepts it. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                            the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route, the
                            Route MUST be considered detached from the Gateway.


                            Support: Core
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .spec.hostnames
      name: Hostnames
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    deprecated: true
    deprecationWarning: The v1alpha2 version of GRPCRoute has been deprecated and
      will be removed in a future release of the API. Please upgrade to v1.
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: |-
          GRPCRoute provides a way to route gRPC requests. This includes the capability
          to match requests by hostname, gRPC service, gRPC method, or HTTP/2 header.
          Filters can be used to specify additional processing steps. Backends specify
          where matching requests will be routed.


          GRPCRoute falls under extended support within the Gateway API. Within the
          following specification, the word "MUST" indicates that an implementation
          supporting GRPCRoute must conform to the indicated requirement, but an
          implementation not supporting this route type need not follow the requirement
          unless explicitly indicated.


          Implementations supporting `GRPCRoute` with the `HTTPS` `ProtocolType` MUST
          accept HTTP/2 connections without an initial upgrade from HTTP/1.1, i.e. via
          ALPN. If the implementation does not support this, then it MUST set the
          "Accepted" condition to "False" for the affected listener with a reason of
          "UnsupportedProtocol".  Implementations MAY also accept HTTP/2 connections
          with an upgrade from HTTP/1.


          Implementations supporting `GRPCRoute` with the `HTTP` `ProtocolType` MUST
          support HTTP/2 over cleartext TCP (h2c,
          https://www.rfc-editor.org/rfc/rfc7540#section-3.1) without an initial
          upgrade from HTTP/1.1, i.e. with prior knowledge
          (https://www.rfc-editor.org/rfc/rfc7540#section-3.4). If the implementation
          does not support this, then it MUST set the "Accepted" condition to "False"
          for the affected listener with a reason of "UnsupportedProtocol".
          Implementations MAY also accept HTTP/2 connections with an upgrade from
          HTTP/1, i.e. without prior knowledge.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of GRPCRoute.
            properties:
              hostnames:
                description: |-
                  Hostnames defines a set of hostnames to match against the GRPC
                  Host header to select a GRPCRoute to process the request. This matches
                  the RFC 1123 definition of a hostname with 2 notable exceptions:


                  1. IPs are not allowed.
                  2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                     label MUST appear by itself as the first label.


                  If a hostname is specified by both the Listener and GRPCRoute, there
                  MUST be at least one intersecting hostname for the GRPCRoute to be
                  attached to the Listener. For example:


                  * A Listener with `test.example.com` as the hostname matches GRPCRoutes
                    that have either not specified any hostnames, or have specified at
                    least one of `test.example.com` or `*.example.com`.
                  * A Listener with `*.example.com` as the hostname matches GRPCRoutes
                    that have either not specified any hostnames or have specified at least
                    one hostname that matches the Listener hostname. For example,
                    `test.example.com` and `*.example.com` would both match. On the other
                    hand, `example.com` and `test.example.net` would not match.


                  Hostnames that are prefixed with a wildcard label (`*.`) are interpreted
                  as a suffix match. That means that a match for `*.example.com` would match
                  both `test.example.com`, and `foo.test.example.com`, but not `example.com`.


                  If both the Listener and GRPCRoute have specified hostnames, any
                  GRPCRoute hostnames that do not match the Listener hostname MUST be
                  ignored. For example, if a Listener specified `*.example.com`, and the
                  GRPCRoute specified `test.example.com` and `test.example.net`,
                  `test.example.net` MUST NOT be considered for a match.


                  If both the Listener and GRPCRoute have specified hostnames, and none
                  match with the criteria above, then the GRPCRoute MUST NOT be accepted by
                  the implementation. The implementation MUST raise an 'Accepted' Condition
                  with a status of `False` in the corresponding RouteParentStatus.


                  If a Route (A) of type HTTPRoute or GRPCRoute is attached to a
                  Listener and that listener already has another Route (B) of the other
                  type attached and the intersection of the hostnames of A and B is
                  non-empty, then the implementation MUST accept exactly one of these two
                  routes, determined by the following criteria, in order:


                  * The oldest Route based on creation timestamp.
                  * The Route appearing first in alphabetical order by
                    "{namespace}/{name}".


                  The rejected Route MUST raise an 'Accepted' condition with a status of
                  'False' in the corresponding RouteParentStatus.


                  Support: Core
                items:
                  description: |-
                    Hostname is the fully qualified domain name of a network host. This matches
                    the RFC 1123 definition of a hostname with 2 notable exceptions:


                     1. IPs are not allowed.
                     2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                        label must appear by itself as the first label.


                    Hostname can be "precise" which is a domain name without the terminating
                    dot of a network host (e.g. "foo.example.com") or "wildcard", which is a
                    domain name prefixed with a single wildcard label (e.g. `*.example.com`).


                    Note that as per RFC1035 and RFC1123, a *label* must consist of lower case
                    alphanumeric characters or '-', and must start and end with an alphanumeric
                    character. No other punctuation is allowed.
                  maxLength: 253
                  minLength: 1
                  pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                maxItems: 16
                type: array
              parentRefs:
                description: |+
                  ParentRefs references the resources (usually Gateways) that a Route wants
                  to be attached to. Note that the referenced parent resource needs to
                  allow this for the attachment to be complete. For Gateways, that means
                  the Gateway needs to allow attachment from Routes of this kind and
                  namespace. For Services, that means the Service must either be in the same
                  namespace for a "producer" route, or the mesh implementation must support
                  and allow "consumer" routes for the referenced Service. ReferenceGrant is
                  not applicable for governing ParentRefs to Services - it is not possible to
                  create a "producer" route for a Service in a different namespace from the
                  Route.


                  There are two kinds of parent resources with "Core" support:


                  * Gateway (Gateway conformance profile)
                  * Service (Mesh conformance profile, ClusterIP Services only)


                  This API may be extended in the future to support additional kinds of parent
                  resources.


                  ParentRefs must be _distinct_. This means either that:


                  * They select different objects.  If this is the case, then parentRef
                    entries are distinct. In terms of fields, this means that the
                    multi-part key defined by `group`, `kind`, `namespace`, and `name` must
                    be unique across all parentRef entries in the Route.
                  * They do not select different objects, but for each optional field used,
                    each ParentRef that selects the same object must set the same set of
                    optional fields to different values. If one ParentRef sets a
                    combination of optional fields, all must set the same combination.


                  Some examples:


                  * If one ParentRef sets `sectionName`, all ParentRefs referencing the
                    same object must also set `sectionName`.
                  * If one ParentRef sets `port`, all ParentRefs referencing the same
                    object must also set `port`.
                  * If one ParentRef sets `sectionName` and `port`, all ParentRefs
                    referencing the same object must also set `sectionName` and `port`.


                  It is possible to separately reference multiple distinct objects that may
                  be collapsed by an implementation. For example, some implementations may
                  choose to merge compatible Gateway Listeners together. If that is the
                  case, the list of routes attached to those resources should also be
                  merged.


                  Note that for ParentRefs that cross namespace boundaries, there are specific
                  rules. Cross-namespace references are only valid if they are explicitly
                  allowed by something in the namespace they are referring to. For example,
                  Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                  generic way to enable other kinds of cross-namespace reference.



                  ParentRefs from a Route to a Service in the same namespace are "producer"
                  routes, which apply default routing rules to inbound connections from
                  any namespace to the Service.


                  ParentRefs from a Route to a Service in a different namespace are
                  "consumer" routes, and these routing rules are only applied to outbound
                  connections originating from the same namespace as the Route, for which
                  the intended destination of the connections are a Service targeted as a
                  ParentRef of the Route.






                items:
                  description: |-
                    ParentReference identifies an API object (usually a Gateway) that can be considered
                    a parent of this resource (usually a route). There are two kinds of parent resources
                    with "Core" support:


                    * Gateway (Gateway conformance profile)
                    * Service (Mesh conformance profile, ClusterIP Services only)


                    This API may be extended in the future to support additional kinds of parent
                    resources.


                    The API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid.
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: |-
                        Group is the group of the referent.
                        When unspecified, "gateway.networking.k8s.io" is inferred.
                        To set the core API group (such as for a "Service" kind referent),
                        Group must be explicitly set to "" (empty string).


                        Support: Core
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: |-
                        Kind is kind of the referent.


                        There are two kinds of parent resources with "Core" support:


                        * Gateway (Gateway conformance profile)
                        * Service (Mesh conformance profile, ClusterIP Services only)


                        Support for other resources is Implementation-Specific.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: |-
                        Name is the name of the referent.


                        Support: Core
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referent. When unspecified, this refers
                        to the local namespace of the Route.


                        Note that there are specific rules for ParentRefs which cross namespace
                        boundaries. Cross-namespace references are only valid if they are explicitly
                        allowed by something in the namespace they are referring to. For example:
                        Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                        generic way to enable any other kind of cross-namespace reference.



                        ParentRefs from a Route to a Service in the same namespace are "producer"
                        routes, which apply default routing rules to inbound connections from
                        any namespace to the Service.


                        ParentRefs from a Route to a Service in a different namespace are
                        "consumer" routes, and these routing rules are only applied to outbound
                        connections originating from the same namespace as the Route, for which
                        the intended destination of the connections are a Service targeted as a
                        ParentRef of the Route.



                        Support: Core
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: |-
                        Port is the network port this Route targets. It can be interpreted
                        differently based on the type of parent resource.


                        When the parent resource is a Gateway, this targets all listeners
                        listening on the specified port that also support this kind of Route(and
                        select this Route). It's not recommended to set `Port` unless the
                        networking behaviors specified in a Route must apply to a specific port
                        as opposed to a listener(s) whose port(s) may be changed. When both Port
                        and SectionName are specified, the name and port of the selected listener
                        must match both specified values.



                        When the parent resource is a Service, this targets a specific port in the
                        Service spec. When both Port (experimental) and SectionName are specified,
                        the name and port of the selected port must match both specified values.



                        Implementations MAY choose to support other parent resources.
                        Implementations supporting other types of parent resources MUST clearly
                        document how/if Port is interpreted.


                        For the purpose of status, an attachment is considered successful as
                        long as the parent resource accepts it partially. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route,
                        the Route MUST be considered detached from the Gateway.


                        Support: Extended
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: |-
                        SectionName is the name of a section within the target resource. In the
                        following resources, SectionName is interpreted as the following:


                        * Gateway: Listener name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.
                        * Service: Port name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.


                        Implementations MAY choose to support attaching Routes to other resources.
                        If that is the case, they MUST clearly document how SectionName is
                        interpreted.


                        When unspecified (empty string), this will reference the entire resource.
                        For the purpose of status, an attachment is considered successful if at
                        least one section in the parent resource accepts it. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                        the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route, the
                        Route MUST be considered detached from the Gateway.


                        Support: Core
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
                x-kubernetes-validations:
                - message: sectionName or port must be specified when parentRefs includes
                    2 or more references to the same parent
                  rule: 'self.all(p1, self.all(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '''') && (!has(p2.__namespace__) || p2.__namespace__
                    == '''')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__)) ? ((!has(p1.sectionName)
                    || p1.sectionName == '''') == (!has(p2.sectionName) || p2.sectionName
                    == '''') && (!has(p1.port) || p1.port == 0) == (!has(p2.port)
                    || p2.port == 0)): true))'
                - message: sectionName or port must be unique when parentRefs includes
                    2 or more references to the same parent
                  rule: self.all(p1, self.exists_one(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__
                    == '')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__ )) && (((!has(p1.sectionName)
                    || p1.sectionName == '') && (!has(p2.sectionName) || p2.sectionName
                    == '')) || ( has(p1.sectionName) && has(p2.sectionName) && p1.sectionName
                    == p2.sectionName)) && (((!has(p1.port) || p1.port == 0) && (!has(p2.port)
                    || p2.port == 0)) || (has(p1.port) && has(p2.port) && p1.port
                    == p2.port))))
              rules:
                description: Rules are a list of GRPC matchers, filters and actions.
                items:
                  description: |-
                    GRPCRouteRule defines the semantics for matching a gRPC request based on
                    conditions (matches), processing it (filters), and forwarding the request to
                    an API object (backendRefs).
                  properties:
                    backendRefs:
                      description: |-
                        BackendRefs defines the backend(s) where matching requests should be
                        sent.


                        Failure behavior here depends on how many BackendRefs are specified and
                        how many are invalid.


                        If *all* entries in BackendRefs are invalid, and there are also no filters
                        specified in this route rule, *all* traffic which matches this rule MUST
                        receive an `UNAVAILABLE` status.


                        See the GRPCBackendRef definition for the rules about what makes a single
                        GRPCBackendRef invalid.


                        When a GRPCBackendRef is invalid, `UNAVAILABLE` statuses MUST be returned for
                        requests that would have otherwise been routed to an invalid backend. If
                        multiple backends are specified, and some are invalid, the proportion of
                        requests that would otherwise have been routed to an invalid backend
                        MUST receive an `UNAVAILABLE` status.


                        For example, if two backends are specified with equal weights, and one is
                        invalid, 50 percent of traffic MUST receive an `UNAVAILABLE` status.
                        Implementations may choose how that 50 percent is determined.


                        Support: Core for Kubernetes Service


                        Support: Implementation-specific for any other resource


                        Support for weight: Core
                      items:
                        description: |-
                          GRPCBackendRef defines how a GRPCRoute forwards a gRPC request.


                          Note that when a namespace different than the local namespace is specified, a
                          ReferenceGrant object is required in the referent namespace to allow that
                          namespace's owner to accept the reference. See the ReferenceGrant
                          documentation for details.


                          <gateway:experimental:description>


                          When the BackendRef points to a Kubernetes Service, implementations SHOULD
                          honor the appProtocol field if it is set for the target Service Port.


                          Implementations supporting appProtocol SHOULD recognize the Kubernetes
                          Standard Application Protocols defined in KEP-3726.


                          If a Service appProtocol isn't specified, an implementation MAY infer the
                          backend protocol through its own means. Implementations MAY infer the
                          protocol from the Route type referring to the backend Service.


                          If a Route is not able to send traffic to the backend using the specified
                          protocol then the backend is considered invalid. Implementations MUST set the
                          "ResolvedRefs" condition to "False" with the "UnsupportedProtocol" reason.


                          </gateway:experimental:description>
                        properties:
                          filters:
                            description: |-
                              Filters defined at this level MUST be executed if and only if the
                              request is being forwarded to the backend defined here.


                              Support: Implementation-specific (For broader support of filters, use the
                              Filters field in GRPCRouteRule.)
                            items:
                              description: |-
                                GRPCRouteFilter defines processing steps that must be completed during the
                                request or response lifecycle. GRPCRouteFilters are meant as an extension
                                point to express processing that may be done in Gateway implementations. Some
                                examples include request or response modification, implementing
                                authentication strategies, rate-limiting, and traffic shaping. API
                                guarantee/conformance is defined based on the type of the filter.
                              properties:
                                extensionRef:
                                  description: |-
                                    ExtensionRef is an optional, implementation-specific extension to the
                                    "filter" behavior.  For example, resource "myroutefilter" in group
                                    "networking.example.net"). ExtensionRef MUST NOT be used for core and
                                    extended filters.


                                    Support: Implementation-specific


                                    This filter can be used multiple times within the same rule.
                                  properties:
                                    group:
                                      description: |-
                                        Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                        When unspecified or empty string, core API group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      description: Kind is kind of the referent. For
                                        example "HTTPRoute" or "Service".
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                  required:
                                  - group
                                  - kind
                                  - name
                                  type: object
                                requestHeaderModifier:
                                  description: |-
                                    RequestHeaderModifier defines a schema for a filter that modifies request
                                    headers.


                                    Support: Core
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz


                                        Config:
                                          remove: ["my-header1", "my-header3"]


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                requestMirror:
                                  description: |-
                                    RequestMirror defines a schema for a filter that mirrors requests.
                                    Requests are sent to the specified destination, but responses from
                                    that destination are ignored.


                                    This filter can be used multiple times within the same rule. Note that
                                    not all implementations will be able to support mirroring to multiple
                                    backends.


                                    Support: Extended
                                  properties:
                                    backendRef:
                                      description: |-
                                        BackendRef references a resource where mirrored requests are sent.


                                        Mirrored requests must be sent only to a single destination endpoint
                                        within this BackendRef, irrespective of how many endpoints are present
                                        within this BackendRef.


                                        If the referent cannot be found, this BackendRef is invalid and must be
                                        dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                        condition on the Route status is set to `status: False` and not configure
                                        this backend in the underlying implementation.


                                        If there is a cross-namespace reference to an *existing* object
                                        that is not allowed by a ReferenceGrant, the controller must ensure the
                                        "ResolvedRefs"  condition on the Route is set to `status: False`,
                                        with the "RefNotPermitted" reason and not configure this backend in the
                                        underlying implementation.


                                        In either error case, the Message of the `ResolvedRefs` Condition
                                        should be used to provide more detail about the problem.


                                        Support: Extended for Kubernetes Service


                                        Support: Implementation-specific for any other resource
                                      properties:
                                        group:
                                          default: ""
                                          description: |-
                                            Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                            When unspecified or empty string, core API group is inferred.
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        kind:
                                          default: Service
                                          description: |-
                                            Kind is the Kubernetes resource kind of the referent. For example
                                            "Service".


                                            Defaults to "Service" when not specified.


                                            ExternalName services can refer to CNAME DNS records that may live
                                            outside of the cluster and as such are difficult to reason about in
                                            terms of conformance. They also may not be safe to forward to (see
                                            CVE-2021-25740 for more information). Implementations SHOULD NOT
                                            support ExternalName Services.


                                            Support: Core (Services with a type other than ExternalName)


                                            Support: Implementation-specific (Services with type ExternalName)
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                          type: string
                                        name:
                                          description: Name is the name of the referent.
                                          maxLength: 253
                                          minLength: 1
                                          type: string
                                        namespace:
                                          description: |-
                                            Namespace is the namespace of the backend. When unspecified, the local
                                            namespace is inferred.


                                            Note that when a namespace different than the local namespace is specified,
                                            a ReferenceGrant object is required in the referent namespace to allow that
                                            namespace's owner to accept the reference. See the ReferenceGrant
                                            documentation for details.


                                            Support: Core
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                        port:
                                          description: |-
                                            Port specifies the destination port number to use for this resource.
                                            Port is required when the referent is a Kubernetes Service. In this
                                            case, the port number is the service port number, not the target port.
                                            For other resources, destination port might be derived from the referent
                                            resource or this field.
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                      required:
                                      - name
                                      type: object
                                      x-kubernetes-validations:
                                      - message: Must have port for Service reference
                                        rule: '(size(self.group) == 0 && self.kind
                                          == ''Service'') ? has(self.port) : true'
                                  required:
                                  - backendRef
                                  type: object
                                responseHeaderModifier:
                                  description: |-
                                    ResponseHeaderModifier defines a schema for a filter that modifies response
                                    headers.


                                    Support: Extended
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz


                                        Config:
                                          remove: ["my-header1", "my-header3"]


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                type:
                                  description: |+
                                    Type identifies the type of filter to apply. As with other API fields,
                                    types are classified into three conformance levels:


                                    - Core: Filter types and their corresponding configuration defined by
                                      "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                      implementations supporting GRPCRoute MUST support core filters.


                                    - Extended: Filter types and their corresponding configuration defined by
                                      "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                      are encouraged to support extended filters.


                                    - Implementation-specific: Filters that are defined and supported by specific vendors.
                                      In the future, filters showing convergence in behavior across multiple
                                      implementations will be considered for inclusion in extended or core
                                      conformance levels. Filter-specific configuration for such filters
                                      is specified using the ExtensionRef field. `Type` MUST be set to
                                      "ExtensionRef" for custom filters.


                                    Implementers are encouraged to define custom implementation types to
                                    extend the core API with implementation-specific behavior.


                                    If a reference to a custom filter type cannot be resolved, the filter
                                    MUST NOT be skipped. Instead, requests that would have been processed by
                                    that filter MUST receive a HTTP error response.


                                  enum:
                                  - ResponseHeaderModifier
                                  - RequestHeaderModifier
                                  - RequestMirror
                                  - ExtensionRef
                                  type: string
                              required:
                              - type
                              type: object
                              x-kubernetes-validations:
                              - message: filter.requestHeaderModifier must be nil
                                  if the filter.type is not RequestHeaderModifier
                                rule: '!(has(self.requestHeaderModifier) && self.type
                                  != ''RequestHeaderModifier'')'
                              - message: filter.requestHeaderModifier must be specified
                                  for RequestHeaderModifier filter.type
                                rule: '!(!has(self.requestHeaderModifier) && self.type
                                  == ''RequestHeaderModifier'')'
                              - message: filter.responseHeaderModifier must be nil
                                  if the filter.type is not ResponseHeaderModifier
                                rule: '!(has(self.responseHeaderModifier) && self.type
                                  != ''ResponseHeaderModifier'')'
                              - message: filter.responseHeaderModifier must be specified
                                  for ResponseHeaderModifier filter.type
                                rule: '!(!has(self.responseHeaderModifier) && self.type
                                  == ''ResponseHeaderModifier'')'
                              - message: filter.requestMirror must be nil if the filter.type
                                  is not RequestMirror
                                rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                              - message: filter.requestMirror must be specified for
                                  RequestMirror filter.type
                                rule: '!(!has(self.requestMirror) && self.type ==
                                  ''RequestMirror'')'
                              - message: filter.extensionRef must be nil if the filter.type
                                  is not ExtensionRef
                                rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                              - message: filter.extensionRef must be specified for
                                  ExtensionRef filter.type
                                rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                            maxItems: 16
                            type: array
                            x-kubernetes-validations:
                            - message: RequestHeaderModifier filter cannot be repeated
                              rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                                <= 1
                            - message: ResponseHeaderModifier filter cannot be repeated
                              rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                                <= 1
                          group:
                            default: ""
                            description: |-
                              Group is the group of the referent. For example, "gateway.networking.k8s.io".
                              When unspecified or empty string, core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: |-
                              Kind is the Kubernetes resource kind of the referent. For example
                              "Service".


                              Defaults to "Service" when not specified.


                              ExternalName services can refer to CNAME DNS records that may live
                              outside of the cluster and as such are difficult to reason about in
                              terms of conformance. They also may not be safe to forward to (see
                              CVE-2021-25740 for more information). Implementations SHOULD NOT
                              support ExternalName Services.


                              Support: Core (Services with a type other than ExternalName)


                              Support: Implementation-specific (Services with type ExternalName)
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: |-
                              Namespace is the namespace of the backend. When unspecified, the local
                              namespace is inferred.


                              Note that when a namespace different than the local namespace is specified,
                              a ReferenceGrant object is required in the referent namespace to allow that
                              namespace's owner to accept the reference. See the ReferenceGrant
                              documentation for details.


                              Support: Core
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: |-
                              Port specifies the destination port number to use for this resource.
                              Port is required when the referent is a Kubernetes Service. In this
                              case, the port number is the service port number, not the target port.
                              For other resources, destination port might be derived from the referent
                              resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: |-
                              Weight specifies the proportion of requests forwarded to the referenced
                              backend. This is computed as weight/(sum of all weights in this
                              BackendRefs list). For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision an
                              implementation supports. Weight is not a percentage and the sum of
                              weights does not need to equal 100.


                              If only one backend is specified and it has a weight greater than 0, 100%
                              of the traffic is forwarded to that backend. If weight is set to 0, no
                              traffic should be forwarded for this entry. If unspecified, weight
                              defaults to 1.


                              Support for this field varies based on the context where used.
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                        x-kubernetes-validations:
                        - message: Must have port for Service reference
                          rule: '(size(self.group) == 0 && self.kind == ''Service'')
                            ? has(self.port) : true'
                      maxItems: 16
                      type: array
                    filters:
                      description: |-
                        Filters define the filters that are applied to requests that match
                        this rule.


                        The effects of ordering of multiple behaviors are currently unspecified.
                        This can change in the future based on feedback during the alpha stage.


                        Conformance-levels at this level are defined based on the type of filter:


                        - ALL core filters MUST be supported by all implementations that support
                          GRPCRoute.
                        - Implementers are encouraged to support extended filters.
                        - Implementation-specific custom filters have no API guarantees across
                          implementations.


                        Specifying the same filter multiple times is not supported unless explicitly
                        indicated in the filter.


                        If an implementation can not support a combination of filters, it must clearly
                        document that limitation. In cases where incompatible or unsupported
                        filters are specified and cause the `Accepted` condition to be set to status
                        `False`, implementations may use the `IncompatibleFilters` reason to specify
                        this configuration error.


                        Support: Core
                      items:
                        description: |-
                          GRPCRouteFilter defines processing steps that must be completed during the
                          request or response lifecycle. GRPCRouteFilters are meant as an extension
                          point to express processing that may be done in Gateway implementations. Some
                          examples include request or response modification, implementing
                          authentication strategies, rate-limiting, and traffic shaping. API
                          guarantee/conformance is defined based on the type of the filter.
                        properties:
                          extensionRef:
                            description: |-
                              ExtensionRef is an optional, implementation-specific extension to the
                              "filter" behavior.  For example, resource "myroutefilter" in group
                              "networking.example.net"). ExtensionRef MUST NOT be used for core and
                              extended filters.


                              Support: Implementation-specific


                              This filter can be used multiple times within the same rule.
                            properties:
                              group:
                                description: |-
                                  Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                  When unspecified or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: Kind is kind of the referent. For example
                                  "HTTPRoute" or "Service".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                            required:
                            - group
                            - kind
                            - name
                            type: object
                          requestHeaderModifier:
                            description: |-
                              RequestHeaderModifier defines a schema for a filter that modifies request
                              headers.


                              Support: Core
                            properties:
                              add:
                                description: |-
                                  Add adds the given header(s) (name, value) to the request
                                  before the action. It appends to any existing values associated
                                  with the header name.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    add:
                                    - name: "my-header"
                                      value: "bar,baz"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: foo,bar,baz
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: |-
                                  Remove the given header(s) from the HTTP request before the action. The
                                  value of Remove is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see
                                  https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header1: foo
                                    my-header2: bar
                                    my-header3: baz


                                  Config:
                                    remove: ["my-header1", "my-header3"]


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header2: bar
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                                x-kubernetes-list-type: set
                              set:
                                description: |-
                                  Set overwrites the request with the given header (name, value)
                                  before the action.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    set:
                                    - name: "my-header"
                                      value: "bar"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: bar
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          requestMirror:
                            description: |-
                              RequestMirror defines a schema for a filter that mirrors requests.
                              Requests are sent to the specified destination, but responses from
                              that destination are ignored.


                              This filter can be used multiple times within the same rule. Note that
                              not all implementations will be able to support mirroring to multiple
                              backends.


                              Support: Extended
                            properties:
                              backendRef:
                                description: |-
                                  BackendRef references a resource where mirrored requests are sent.


                                  Mirrored requests must be sent only to a single destination endpoint
                                  within this BackendRef, irrespective of how many endpoints are present
                                  within this BackendRef.


                                  If the referent cannot be found, this BackendRef is invalid and must be
                                  dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                  condition on the Route status is set to `status: False` and not configure
                                  this backend in the underlying implementation.


                                  If there is a cross-namespace reference to an *existing* object
                                  that is not allowed by a ReferenceGrant, the controller must ensure the
                                  "ResolvedRefs"  condition on the Route is set to `status: False`,
                                  with the "RefNotPermitted" reason and not configure this backend in the
                                  underlying implementation.


                                  In either error case, the Message of the `ResolvedRefs` Condition
                                  should be used to provide more detail about the problem.


                                  Support: Extended for Kubernetes Service


                                  Support: Implementation-specific for any other resource
                                properties:
                                  group:
                                    default: ""
                                    description: |-
                                      Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                      When unspecified or empty string, core API group is inferred.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    default: Service
                                    description: |-
                                      Kind is the Kubernetes resource kind of the referent. For example
                                      "Service".


                                      Defaults to "Service" when not specified.


                                      ExternalName services can refer to CNAME DNS records that may live
                                      outside of the cluster and as such are difficult to reason about in
                                      terms of conformance. They also may not be safe to forward to (see
                                      CVE-2021-25740 for more information). Implementations SHOULD NOT
                                      support ExternalName Services.


                                      Support: Core (Services with a type other than ExternalName)


                                      Support: Implementation-specific (Services with type ExternalName)
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace of the backend. When unspecified, the local
                                      namespace is inferred.


                                      Note that when a namespace different than the local namespace is specified,
                                      a ReferenceGrant object is required in the referent namespace to allow that
                                      namespace's owner to accept the reference. See the ReferenceGrant
                                      documentation for details.


                                      Support: Core
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  port:
                                    description: |-
                                      Port specifies the destination port number to use for this resource.
                                      Port is required when the referent is a Kubernetes Service. In this
                                      case, the port number is the service port number, not the target port.
                                      For other resources, destination port might be derived from the referent
                                      resource or this field.
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                required:
                                - name
                                type: object
                                x-kubernetes-validations:
                                - message: Must have port for Service reference
                                  rule: '(size(self.group) == 0 && self.kind == ''Service'')
                                    ? has(self.port) : true'
                            required:
                            - backendRef
                            type: object
                          responseHeaderModifier:
                            description: |-
                              ResponseHeaderModifier defines a schema for a filter that modifies response
                              headers.


                              Support: Extended
                            properties:
                              add:
                                description: |-
                                  Add adds the given header(s) (name, value) to the request
                                  before the action. It appends to any existing values associated
                                  with the header name.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    add:
                                    - name: "my-header"
                                      value: "bar,baz"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: foo,bar,baz
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: |-
                                  Remove the given header(s) from the HTTP request before the action. The
                                  value of Remove is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see
                                  https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header1: foo
                                    my-header2: bar
                                    my-header3: baz


                                  Config:
                                    remove: ["my-header1", "my-header3"]


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header2: bar
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                                x-kubernetes-list-type: set
                              set:
                                description: |-
                                  Set overwrites the request with the given header (name, value)
                                  before the action.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    set:
                                    - name: "my-header"
                                      value: "bar"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: bar
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          type:
                            description: |+
                              Type identifies the type of filter to apply. As with other API fields,
                              types are classified into three conformance levels:


                              - Core: Filter types and their corresponding configuration defined by
                                "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                implementations supporting GRPCRoute MUST support core filters.


                              - Extended: Filter types and their corresponding configuration defined by
                                "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                are encouraged to support extended filters.


                              - Implementation-specific: Filters that are defined and supported by specific vendors.
                                In the future, filters showing convergence in behavior across multiple
                                implementations will be considered for inclusion in extended or core
                                conformance levels. Filter-specific configuration for such filters
                                is specified using the ExtensionRef field. `Type` MUST be set to
                                "ExtensionRef" for custom filters.


                              Implementers are encouraged to define custom implementation types to
                              extend the core API with implementation-specific behavior.


                              If a reference to a custom filter type cannot be resolved, the filter
                              MUST NOT be skipped. Instead, requests that would have been processed by
                              that filter MUST receive a HTTP error response.


                            enum:
                            - ResponseHeaderModifier
                            - RequestHeaderModifier
                            - RequestMirror
                            - ExtensionRef
                            type: string
                        required:
                        - type
                        type: object
                        x-kubernetes-validations:
                        - message: filter.requestHeaderModifier must be nil if the
                            filter.type is not RequestHeaderModifier
                          rule: '!(has(self.requestHeaderModifier) && self.type !=
                            ''RequestHeaderModifier'')'
                        - message: filter.requestHeaderModifier must be specified
                            for RequestHeaderModifier filter.type
                          rule: '!(!has(self.requestHeaderModifier) && self.type ==
                            ''RequestHeaderModifier'')'
                        - message: filter.responseHeaderModifier must be nil if the
                            filter.type is not ResponseHeaderModifier
                          rule: '!(has(self.responseHeaderModifier) && self.type !=
                            ''ResponseHeaderModifier'')'
                        - message: filter.responseHeaderModifier must be specified
                            for ResponseHeaderModifier filter.type
                          rule: '!(!has(self.responseHeaderModifier) && self.type
                            == ''ResponseHeaderModifier'')'
                        - message: filter.requestMirror must be nil if the filter.type
                            is not RequestMirror
                          rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                        - message: filter.requestMirror must be specified for RequestMirror
                            filter.type
                          rule: '!(!has(self.requestMirror) && self.type == ''RequestMirror'')'
                        - message: filter.extensionRef must be nil if the filter.type
                            is not ExtensionRef
                          rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                        - message: filter.extensionRef must be specified for ExtensionRef
                            filter.type
                          rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                      maxItems: 16
                      type: array
                      x-kubernetes-validations:
                      - message: RequestHeaderModifier filter cannot be repeated
                        rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                          <= 1
                      - message: ResponseHeaderModifier filter cannot be repeated
                        rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                          <= 1
                    matches:
                      description: |-
                        Matches define conditions used for matching the rule against incoming
                        gRPC requests. Each match is independent, i.e. this rule will be matched
                        if **any** one of the matches is satisfied.


                        For example, take the following matches configuration:


                        ```
                        matches:
                        - method:
                            service: foo.bar
                          headers:
                            values:
                              version: 2
                        - method:
                            service: foo.bar.v2
                        ```


                        For a request to match against this rule, it MUST satisfy
                        EITHER of the two conditions:


                        - service of foo.bar AND contains the header `version: 2`
                        - service of foo.bar.v2


                        See the documentation for GRPCRouteMatch on how to specify multiple
                        match conditions to be ANDed together.


                        If no matches are specified, the implementation MUST match every gRPC request.


                        Proxy or Load Balancer routing configuration generated from GRPCRoutes
                        MUST prioritize rules based on the following criteria, continuing on
                        ties. Merging MUST not be done between GRPCRoutes and HTTPRoutes.
                        Precedence MUST be given to the rule with the largest number of:


                        * Characters in a matching non-wildcard hostname.
                        * Characters in a matching hostname.
                        * Characters in a matching service.
                        * Characters in a matching method.
                        * Header matches.


                        If ties still exist across multiple Routes, matching precedence MUST be
                        determined in order of the following criteria, continuing on ties:


                        * The oldest Route based on creation timestamp.
                        * The Route appearing first in alphabetical order by
                          "{namespace}/{name}".


                        If ties still exist within the Route that has been given precedence,
                        matching precedence MUST be granted to the first matching rule meeting
                        the above criteria.
                      items:
                        description: |-
                          GRPCRouteMatch defines the predicate used to match requests to a given
                          action. Multiple match types are ANDed together, i.e. the match will
                          evaluate to true only if all conditions are satisfied.


                          For example, the match below will match a gRPC request only if its service
                          is `foo` AND it contains the `version: v1` header:


                          ```
                          matches:
                            - method:
                              type: Exact
                              service: "foo"
                              headers:
                            - name: "version"
                              value "v1"


                          ```
                        properties:
                          headers:
                            description: |-
                              Headers specifies gRPC request header matchers. Multiple match values are
                              ANDed together, meaning, a request MUST match all the specified headers
                              to select the route.
                            items:
                              description: |-
                                GRPCHeaderMatch describes how to select a gRPC route by matching gRPC request
                                headers.
                              properties:
                                name:
                                  description: |-
                                    Name is the name of the gRPC Header to be matched.


                                    If multiple entries specify equivalent header names, only the first
                                    entry with an equivalent name MUST be considered for a match. Subsequent
                                    entries with an equivalent header name MUST be ignored. Due to the
                                    case-insensitivity of header names, "foo" and "Foo" are considered
                                    equivalent.
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: Type specifies how to match against
                                    the value of the header.
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of the gRPC Header
                                    to be matched.
                                  maxLength: 4096
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          method:
                            description: |-
                              Method specifies a gRPC request service/method matcher. If this field is
                              not specified, all services and methods will match.
                            properties:
                              method:
                                description: |-
                                  Value of the method to match against. If left empty or omitted, will
                                  match all services.


                                  At least one of Service and Method MUST be a non-empty string.
                                maxLength: 1024
                                type: string
                              service:
                                description: |-
                                  Value of the service to match against. If left empty or omitted, will
                                  match any service.


                                  At least one of Service and Method MUST be a non-empty string.
                                maxLength: 1024
                                type: string
                              type:
                                default: Exact
                                description: |-
                                  Type specifies how to match against the service and/or method.
                                  Support: Core (Exact with service and method specified)


                                  Support: Implementation-specific (Exact with method specified but no service specified)


                                  Support: Implementation-specific (RegularExpression)
                                enum:
                                - Exact
                                - RegularExpression
                                type: string
                            type: object
                            x-kubernetes-validations:
                            - message: One or both of 'service' or 'method' must be
                                specified
                              rule: 'has(self.type) ? has(self.service) || has(self.method)
                                : true'
                            - message: service must only contain valid characters
                                (matching ^(?i)\.?[a-z_][a-z_0-9]*(\.[a-z_][a-z_0-9]*)*$)
                              rule: '(!has(self.type) || self.type == ''Exact'') &&
                                has(self.service) ? self.service.matches(r"""^(?i)\.?[a-z_][a-z_0-9]*(\.[a-z_][a-z_0-9]*)*$"""):
                                true'
                            - message: method must only contain valid characters (matching
                                ^[A-Za-z_][A-Za-z_0-9]*$)
                              rule: '(!has(self.type) || self.type == ''Exact'') &&
                                has(self.method) ? self.method.matches(r"""^[A-Za-z_][A-Za-z_0-9]*$"""):
                                true'
                        type: object
                      maxItems: 8
                      type: array
                    sessionPersistence:
                      description: |+
                        SessionPersistence defines and configures session persistence
                        for the route rule.


                        Support: Extended


                      properties:
                        absoluteTimeout:
                          description: |-
                            AbsoluteTimeout defines the absolute timeout of the persistent
                            session. Once the AbsoluteTimeout duration has elapsed, the
                            session becomes invalid.


                            Support: Extended
                          pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                          type: string
                        cookieConfig:
                          description: |-
                            CookieConfig provides configuration settings that are specific
                            to cookie-based session persistence.


                            Support: Core
                          properties:
                            lifetimeType:
                              default: Session
                              description: |-
                                LifetimeType specifies whether the cookie has a permanent or
                                session-based lifetime. A permanent cookie persists until its
                                specified expiry time, defined by the Expires or Max-Age cookie
                                attributes, while a session cookie is deleted when the current
                                session ends.


                                When set to "Permanent", AbsoluteTimeout indicates the
                                cookie's lifetime via the Expires or Max-Age cookie attributes
                                and is required.


                                When set to "Session", AbsoluteTimeout indicates the
                                absolute lifetime of the cookie tracked by the gateway and
                                is optional.


                                Support: Core for "Session" type


                                Support: Extended for "Permanent" type
                              enum:
                              - Permanent
                              - Session
                              type: string
                          type: object
                        idleTimeout:
                          description: |-
                            IdleTimeout defines the idle timeout of the persistent session.
                            Once the session has been idle for more than the specified
                            IdleTimeout duration, the session becomes invalid.


                            Support: Extended
                          pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                          type: string
                        sessionName:
                          description: |-
                            SessionName defines the name of the persistent session token
                            which may be reflected in the cookie or the header. Users
                            should avoid reusing session names to prevent unintended
                            consequences, such as rejection or unpredictable behavior.


                            Support: Implementation-specific
                          maxLength: 128
                          type: string
                        type:
                          default: Cookie
                          description: |-
                            Type defines the type of session persistence such as through
                            the use a header or cookie. Defaults to cookie based session
                            persistence.


                            Support: Core for "Cookie" type


                            Support: Extended for "Header" type
                          enum:
                          - Cookie
                          - Header
                          type: string
                      type: object
                      x-kubernetes-validations:
                      - message: AbsoluteTimeout must be specified when cookie lifetimeType
                          is Permanent
                        rule: '!has(self.cookieConfig) || !has(self.cookieConfig.lifetimeType)
                          || self.cookieConfig.lifetimeType != ''Permanent'' || has(self.absoluteTimeout)'
                  type: object
                maxItems: 16
                type: array
            type: object
          status:
            description: Status defines the current state of GRPCRoute.
            properties:
              parents:
                description: |-
                  Parents is a list of parent resources (usually Gateways) that are
                  associated with the route, and the status of the route with respect to
                  each parent. When this route attaches to a parent, the controller that
                  manages the parent must add an entry to this list when the controller
                  first sees the route and should update the entry as appropriate when the
                  route or gateway is modified.


                  Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this API
                  can only populate Route status for the Gateways/parent resources they are
                  responsible for.


                  A maximum of 32 Gateways will be represented in this list. An empty list
                  means the route has not been attached to any Gateway.
                items:
                  description: |-
                    RouteParentStatus describes the status of a route with respect to an
                    associated Parent.
                  properties:
                    conditions:
                      description: |-
                        Conditions describes the status of the route with respect to the Gateway.
                        Note that the route's availability is also subject to the Gateway's own
                        status conditions and listener status.


                        If the Route's ParentRef specifies an existing Gateway that supports
                        Routes of this kind AND that Gateway's controller has sufficient access,
                        then that Gateway's controller MUST set the "Accepted" condition on the
                        Route, to indicate whether the route has been accepted or rejected by the
                        Gateway, and why.


                        A Route MUST be considered "Accepted" if at least one of the Route's
                        rules is implemented by the Gateway.


                        There are a number of cases where the "Accepted" condition may not be set
                        due to lack of controller visibility, that includes when:


                        * The Route refers to a non-existent parent.
                        * The Route is of a type that the controller does not support.
                        * The Route is in a namespace the controller does not have access to.
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource.\n---\nThis struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example,\n\n\n\ttype FooStatus
                          struct{\n\t    // Represents the observations of a foo's
                          current state.\n\t    // Known .status.conditions.type are:
                          \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                          +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    //
                          +listType=map\n\t    // +listMapKey=type\n\t    Conditions
                          []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                          patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                          \   // other fields\n\t}"
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: |-
                              type of condition in CamelCase or in foo.example.com/CamelCase.
                              ---
                              Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                              useful (see .node.status.conditions), the ability to deconflict is important.
                              The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: |-
                        ControllerName is a domain/path string that indicates the name of the
                        controller that wrote this status. This corresponds with the
                        controllerName field on GatewayClass.


                        Example: "example.net/gateway-controller".


                        The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
                        valid Kubernetes names
                        (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).


                        Controllers MUST populate this field when writing status. Controllers should ensure that
                        entries to status populated with their ControllerName are cleaned up when they are no
                        longer necessary.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: |-
                        ParentRef corresponds with a ParentRef in the spec that this
                        RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: |-
                            Group is the group of the referent.
                            When unspecified, "gateway.networking.k8s.io" is inferred.
                            To set the core API group (such as for a "Service" kind referent),
                            Group must be explicitly set to "" (empty string).


                            Support: Core
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: |-
                            Kind is kind of the referent.


                            There are two kinds of parent resources with "Core" support:


                            * Gateway (Gateway conformance profile)
                            * Service (Mesh conformance profile, ClusterIP Services only)


                            Support for other resources is Implementation-Specific.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: |-
                            Name is the name of the referent.


                            Support: Core
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referent. When unspecified, this refers
                            to the local namespace of the Route.


                            Note that there are specific rules for ParentRefs which cross namespace
                            boundaries. Cross-namespace references are only valid if they are explicitly
                            allowed by something in the namespace they are referring to. For example:
                            Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                            generic way to enable any other kind of cross-namespace reference.



                            ParentRefs from a Route to a Service in the same namespace are "producer"
                            routes, which apply default routing rules to inbound connections from
                            any namespace to the Service.


                            ParentRefs from a Route to a Service in a different namespace are
                            "consumer" routes, and these routing rules are only applied to outbound
                            connections originating from the same namespace as the Route, for which
                            the intended destination of the connections are a Service targeted as a
                            ParentRef of the Route.



                            Support: Core
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: |-
                            Port is the network port this Route targets. It can be interpreted
                            differently based on the type of parent resource.


                            When the parent resource is a Gateway, this targets all listeners
                            listening on the specified port that also support this kind of Route(and
                            select this Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to a specific port
                            as opposed to a listener(s) whose port(s) may be changed. When both Port
                            and SectionName are specified, the name and port of the selected listener
                            must match both specified values.



                            When the parent resource is a Service, this targets a specific port in the
                            Service spec. When both Port (experimental) and SectionName are specified,
                            the name and port of the selected port must match both specified values.



                            Implementations MAY choose to support other parent resources.
                            Implementations supporting other types of parent resources MUST clearly
                            document how/if Port is interpreted.


                            For the purpose of status, an attachment is considered successful as
                            long as the parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                            from the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.


                            Support: Extended
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: |-
                            SectionName is the name of a section within the target resource. In the
                            following resources, SectionName is interpreted as the following:


                            * Gateway: Listener name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.
                            * Service: Port name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.


                            Implementations MAY choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName is
                            interpreted.


                            When unspecified (empty string), this will reference the entire resource.
                            For the purpose of status, an attachment is considered successful if at
                            least one section in the parent resource accepts it. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                            the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route, the
                            Route MUST be considered detached from the Gateway.


                            Support: Core
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
# Source: linkerd-crds/templates/gateway.networking.k8s.io_httproutes.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/2997
    gateway.networking.k8s.io/bundle-version: v1.1.1
    gateway.networking.k8s.io/channel: experimental
    linkerd.io/created-by: linkerd/helm %!s(<nil>)
    helm.sh/resource-policy: keep
  labels:
    helm.sh/chart: linkerd-crds-2025.5.4
    linkerd.io/control-plane-ns: linkerd
  creationTimestamp: null
  name: httproutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: HTTPRoute
    listKind: HTTPRouteList
    plural: httproutes
    singular: httproute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.hostnames
      name: Hostnames
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1
    schema:
      openAPIV3Schema:
        description: |-
          HTTPRoute provides a way to route HTTP requests. This includes the capability
          to match requests by hostname, path, header, or query param. Filters can be
          used to specify additional processing steps. Backends specify where matching
          requests should be routed.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of HTTPRoute.
            properties:
              hostnames:
                description: |-
                  Hostnames defines a set of hostnames that should match against the HTTP Host
                  header to select a HTTPRoute used to process the request. Implementations
                  MUST ignore any port value specified in the HTTP Host header while
                  performing a match and (absent of any applicable header modification
                  configuration) MUST forward this header unmodified to the backend.


                  Valid values for Hostnames are determined by RFC 1123 definition of a
                  hostname with 2 notable exceptions:


                  1. IPs are not allowed.
                  2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                     label must appear by itself as the first label.


                  If a hostname is specified by both the Listener and HTTPRoute, there
                  must be at least one intersecting hostname for the HTTPRoute to be
                  attached to the Listener. For example:


                  * A Listener with `test.example.com` as the hostname matches HTTPRoutes
                    that have either not specified any hostnames, or have specified at
                    least one of `test.example.com` or `*.example.com`.
                  * A Listener with `*.example.com` as the hostname matches HTTPRoutes
                    that have either not specified any hostnames or have specified at least
                    one hostname that matches the Listener hostname. For example,
                    `*.example.com`, `test.example.com`, and `foo.test.example.com` would
                    all match. On the other hand, `example.com` and `test.example.net` would
                    not match.


                  Hostnames that are prefixed with a wildcard label (`*.`) are interpreted
                  as a suffix match. That means that a match for `*.example.com` would match
                  both `test.example.com`, and `foo.test.example.com`, but not `example.com`.


                  If both the Listener and HTTPRoute have specified hostnames, any
                  HTTPRoute hostnames that do not match the Listener hostname MUST be
                  ignored. For example, if a Listener specified `*.example.com`, and the
                  HTTPRoute specified `test.example.com` and `test.example.net`,
                  `test.example.net` must not be considered for a match.


                  If both the Listener and HTTPRoute have specified hostnames, and none
                  match with the criteria above, then the HTTPRoute is not accepted. The
                  implementation must raise an 'Accepted' Condition with a status of
                  `False` in the corresponding RouteParentStatus.


                  In the event that multiple HTTPRoutes specify intersecting hostnames (e.g.
                  overlapping wildcard matching and exact matching hostnames), precedence must
                  be given to rules from the HTTPRoute with the largest number of:


                  * Characters in a matching non-wildcard hostname.
                  * Characters in a matching hostname.


                  If ties exist across multiple Routes, the matching precedence rules for
                  HTTPRouteMatches takes over.


                  Support: Core
                items:
                  description: |-
                    Hostname is the fully qualified domain name of a network host. This matches
                    the RFC 1123 definition of a hostname with 2 notable exceptions:


                     1. IPs are not allowed.
                     2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                        label must appear by itself as the first label.


                    Hostname can be "precise" which is a domain name without the terminating
                    dot of a network host (e.g. "foo.example.com") or "wildcard", which is a
                    domain name prefixed with a single wildcard label (e.g. `*.example.com`).


                    Note that as per RFC1035 and RFC1123, a *label* must consist of lower case
                    alphanumeric characters or '-', and must start and end with an alphanumeric
                    character. No other punctuation is allowed.
                  maxLength: 253
                  minLength: 1
                  pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                maxItems: 16
                type: array
              parentRefs:
                description: |+
                  ParentRefs references the resources (usually Gateways) that a Route wants
                  to be attached to. Note that the referenced parent resource needs to
                  allow this for the attachment to be complete. For Gateways, that means
                  the Gateway needs to allow attachment from Routes of this kind and
                  namespace. For Services, that means the Service must either be in the same
                  namespace for a "producer" route, or the mesh implementation must support
                  and allow "consumer" routes for the referenced Service. ReferenceGrant is
                  not applicable for governing ParentRefs to Services - it is not possible to
                  create a "producer" route for a Service in a different namespace from the
                  Route.


                  There are two kinds of parent resources with "Core" support:


                  * Gateway (Gateway conformance profile)
                  * Service (Mesh conformance profile, ClusterIP Services only)


                  This API may be extended in the future to support additional kinds of parent
                  resources.


                  ParentRefs must be _distinct_. This means either that:


                  * They select different objects.  If this is the case, then parentRef
                    entries are distinct. In terms of fields, this means that the
                    multi-part key defined by `group`, `kind`, `namespace`, and `name` must
                    be unique across all parentRef entries in the Route.
                  * They do not select different objects, but for each optional field used,
                    each ParentRef that selects the same object must set the same set of
                    optional fields to different values. If one ParentRef sets a
                    combination of optional fields, all must set the same combination.


                  Some examples:


                  * If one ParentRef sets `sectionName`, all ParentRefs referencing the
                    same object must also set `sectionName`.
                  * If one ParentRef sets `port`, all ParentRefs referencing the same
                    object must also set `port`.
                  * If one ParentRef sets `sectionName` and `port`, all ParentRefs
                    referencing the same object must also set `sectionName` and `port`.


                  It is possible to separately reference multiple distinct objects that may
                  be collapsed by an implementation. For example, some implementations may
                  choose to merge compatible Gateway Listeners together. If that is the
                  case, the list of routes attached to those resources should also be
                  merged.


                  Note that for ParentRefs that cross namespace boundaries, there are specific
                  rules. Cross-namespace references are only valid if they are explicitly
                  allowed by something in the namespace they are referring to. For example,
                  Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                  generic way to enable other kinds of cross-namespace reference.



                  ParentRefs from a Route to a Service in the same namespace are "producer"
                  routes, which apply default routing rules to inbound connections from
                  any namespace to the Service.


                  ParentRefs from a Route to a Service in a different namespace are
                  "consumer" routes, and these routing rules are only applied to outbound
                  connections originating from the same namespace as the Route, for which
                  the intended destination of the connections are a Service targeted as a
                  ParentRef of the Route.






                items:
                  description: |-
                    ParentReference identifies an API object (usually a Gateway) that can be considered
                    a parent of this resource (usually a route). There are two kinds of parent resources
                    with "Core" support:


                    * Gateway (Gateway conformance profile)
                    * Service (Mesh conformance profile, ClusterIP Services only)


                    This API may be extended in the future to support additional kinds of parent
                    resources.


                    The API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid.
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: |-
                        Group is the group of the referent.
                        When unspecified, "gateway.networking.k8s.io" is inferred.
                        To set the core API group (such as for a "Service" kind referent),
                        Group must be explicitly set to "" (empty string).


                        Support: Core
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: |-
                        Kind is kind of the referent.


                        There are two kinds of parent resources with "Core" support:


                        * Gateway (Gateway conformance profile)
                        * Service (Mesh conformance profile, ClusterIP Services only)


                        Support for other resources is Implementation-Specific.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: |-
                        Name is the name of the referent.


                        Support: Core
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referent. When unspecified, this refers
                        to the local namespace of the Route.


                        Note that there are specific rules for ParentRefs which cross namespace
                        boundaries. Cross-namespace references are only valid if they are explicitly
                        allowed by something in the namespace they are referring to. For example:
                        Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                        generic way to enable any other kind of cross-namespace reference.



                        ParentRefs from a Route to a Service in the same namespace are "producer"
                        routes, which apply default routing rules to inbound connections from
                        any namespace to the Service.


                        ParentRefs from a Route to a Service in a different namespace are
                        "consumer" routes, and these routing rules are only applied to outbound
                        connections originating from the same namespace as the Route, for which
                        the intended destination of the connections are a Service targeted as a
                        ParentRef of the Route.



                        Support: Core
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: |-
                        Port is the network port this Route targets. It can be interpreted
                        differently based on the type of parent resource.


                        When the parent resource is a Gateway, this targets all listeners
                        listening on the specified port that also support this kind of Route(and
                        select this Route). It's not recommended to set `Port` unless the
                        networking behaviors specified in a Route must apply to a specific port
                        as opposed to a listener(s) whose port(s) may be changed. When both Port
                        and SectionName are specified, the name and port of the selected listener
                        must match both specified values.



                        When the parent resource is a Service, this targets a specific port in the
                        Service spec. When both Port (experimental) and SectionName are specified,
                        the name and port of the selected port must match both specified values.



                        Implementations MAY choose to support other parent resources.
                        Implementations supporting other types of parent resources MUST clearly
                        document how/if Port is interpreted.


                        For the purpose of status, an attachment is considered successful as
                        long as the parent resource accepts it partially. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route,
                        the Route MUST be considered detached from the Gateway.


                        Support: Extended
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: |-
                        SectionName is the name of a section within the target resource. In the
                        following resources, SectionName is interpreted as the following:


                        * Gateway: Listener name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.
                        * Service: Port name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.


                        Implementations MAY choose to support attaching Routes to other resources.
                        If that is the case, they MUST clearly document how SectionName is
                        interpreted.


                        When unspecified (empty string), this will reference the entire resource.
                        For the purpose of status, an attachment is considered successful if at
                        least one section in the parent resource accepts it. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                        the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route, the
                        Route MUST be considered detached from the Gateway.


                        Support: Core
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
                x-kubernetes-validations:
                - message: sectionName or port must be specified when parentRefs includes
                    2 or more references to the same parent
                  rule: 'self.all(p1, self.all(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '''') && (!has(p2.__namespace__) || p2.__namespace__
                    == '''')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__)) ? ((!has(p1.sectionName)
                    || p1.sectionName == '''') == (!has(p2.sectionName) || p2.sectionName
                    == '''') && (!has(p1.port) || p1.port == 0) == (!has(p2.port)
                    || p2.port == 0)): true))'
                - message: sectionName or port must be unique when parentRefs includes
                    2 or more references to the same parent
                  rule: self.all(p1, self.exists_one(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__
                    == '')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__ )) && (((!has(p1.sectionName)
                    || p1.sectionName == '') && (!has(p2.sectionName) || p2.sectionName
                    == '')) || ( has(p1.sectionName) && has(p2.sectionName) && p1.sectionName
                    == p2.sectionName)) && (((!has(p1.port) || p1.port == 0) && (!has(p2.port)
                    || p2.port == 0)) || (has(p1.port) && has(p2.port) && p1.port
                    == p2.port))))
              rules:
                default:
                - matches:
                  - path:
                      type: PathPrefix
                      value: /
                description: Rules are a list of HTTP matchers, filters and actions.
                items:
                  description: |-
                    HTTPRouteRule defines semantics for matching an HTTP request based on
                    conditions (matches), processing it (filters), and forwarding the request to
                    an API object (backendRefs).
                  properties:
                    backendRefs:
                      description: |-
                        BackendRefs defines the backend(s) where matching requests should be
                        sent.


                        Failure behavior here depends on how many BackendRefs are specified and
                        how many are invalid.


                        If *all* entries in BackendRefs are invalid, and there are also no filters
                        specified in this route rule, *all* traffic which matches this rule MUST
                        receive a 500 status code.


                        See the HTTPBackendRef definition for the rules about what makes a single
                        HTTPBackendRef invalid.


                        When a HTTPBackendRef is invalid, 500 status codes MUST be returned for
                        requests that would have otherwise been routed to an invalid backend. If
                        multiple backends are specified, and some are invalid, the proportion of
                        requests that would otherwise have been routed to an invalid backend
                        MUST receive a 500 status code.


                        For example, if two backends are specified with equal weights, and one is
                        invalid, 50 percent of traffic must receive a 500. Implementations may
                        choose how that 50 percent is determined.


                        Support: Core for Kubernetes Service


                        Support: Extended for Kubernetes ServiceImport


                        Support: Implementation-specific for any other resource


                        Support for weight: Core
                      items:
                        description: |-
                          HTTPBackendRef defines how a HTTPRoute forwards a HTTP request.


                          Note that when a namespace different than the local namespace is specified, a
                          ReferenceGrant object is required in the referent namespace to allow that
                          namespace's owner to accept the reference. See the ReferenceGrant
                          documentation for details.


                          <gateway:experimental:description>


                          When the BackendRef points to a Kubernetes Service, implementations SHOULD
                          honor the appProtocol field if it is set for the target Service Port.


                          Implementations supporting appProtocol SHOULD recognize the Kubernetes
                          Standard Application Protocols defined in KEP-3726.


                          If a Service appProtocol isn't specified, an implementation MAY infer the
                          backend protocol through its own means. Implementations MAY infer the
                          protocol from the Route type referring to the backend Service.


                          If a Route is not able to send traffic to the backend using the specified
                          protocol then the backend is considered invalid. Implementations MUST set the
                          "ResolvedRefs" condition to "False" with the "UnsupportedProtocol" reason.


                          </gateway:experimental:description>
                        properties:
                          filters:
                            description: |-
                              Filters defined at this level should be executed if and only if the
                              request is being forwarded to the backend defined here.


                              Support: Implementation-specific (For broader support of filters, use the
                              Filters field in HTTPRouteRule.)
                            items:
                              description: |-
                                HTTPRouteFilter defines processing steps that must be completed during the
                                request or response lifecycle. HTTPRouteFilters are meant as an extension
                                point to express processing that may be done in Gateway implementations. Some
                                examples include request or response modification, implementing
                                authentication strategies, rate-limiting, and traffic shaping. API
                                guarantee/conformance is defined based on the type of the filter.
                              properties:
                                extensionRef:
                                  description: |-
                                    ExtensionRef is an optional, implementation-specific extension to the
                                    "filter" behavior.  For example, resource "myroutefilter" in group
                                    "networking.example.net"). ExtensionRef MUST NOT be used for core and
                                    extended filters.


                                    This filter can be used multiple times within the same rule.


                                    Support: Implementation-specific
                                  properties:
                                    group:
                                      description: |-
                                        Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                        When unspecified or empty string, core API group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      description: Kind is kind of the referent. For
                                        example "HTTPRoute" or "Service".
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                  required:
                                  - group
                                  - kind
                                  - name
                                  type: object
                                requestHeaderModifier:
                                  description: |-
                                    RequestHeaderModifier defines a schema for a filter that modifies request
                                    headers.


                                    Support: Core
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz


                                        Config:
                                          remove: ["my-header1", "my-header3"]


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                requestMirror:
                                  description: |-
                                    RequestMirror defines a schema for a filter that mirrors requests.
                                    Requests are sent to the specified destination, but responses from
                                    that destination are ignored.


                                    This filter can be used multiple times within the same rule. Note that
                                    not all implementations will be able to support mirroring to multiple
                                    backends.


                                    Support: Extended
                                  properties:
                                    backendRef:
                                      description: |-
                                        BackendRef references a resource where mirrored requests are sent.


                                        Mirrored requests must be sent only to a single destination endpoint
                                        within this BackendRef, irrespective of how many endpoints are present
                                        within this BackendRef.


                                        If the referent cannot be found, this BackendRef is invalid and must be
                                        dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                        condition on the Route status is set to `status: False` and not configure
                                        this backend in the underlying implementation.


                                        If there is a cross-namespace reference to an *existing* object
                                        that is not allowed by a ReferenceGrant, the controller must ensure the
                                        "ResolvedRefs"  condition on the Route is set to `status: False`,
                                        with the "RefNotPermitted" reason and not configure this backend in the
                                        underlying implementation.


                                        In either error case, the Message of the `ResolvedRefs` Condition
                                        should be used to provide more detail about the problem.


                                        Support: Extended for Kubernetes Service


                                        Support: Implementation-specific for any other resource
                                      properties:
                                        group:
                                          default: ""
                                          description: |-
                                            Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                            When unspecified or empty string, core API group is inferred.
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        kind:
                                          default: Service
                                          description: |-
                                            Kind is the Kubernetes resource kind of the referent. For example
                                            "Service".


                                            Defaults to "Service" when not specified.


                                            ExternalName services can refer to CNAME DNS records that may live
                                            outside of the cluster and as such are difficult to reason about in
                                            terms of conformance. They also may not be safe to forward to (see
                                            CVE-2021-25740 for more information). Implementations SHOULD NOT
                                            support ExternalName Services.


                                            Support: Core (Services with a type other than ExternalName)


                                            Support: Implementation-specific (Services with type ExternalName)
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                          type: string
                                        name:
                                          description: Name is the name of the referent.
                                          maxLength: 253
                                          minLength: 1
                                          type: string
                                        namespace:
                                          description: |-
                                            Namespace is the namespace of the backend. When unspecified, the local
                                            namespace is inferred.


                                            Note that when a namespace different than the local namespace is specified,
                                            a ReferenceGrant object is required in the referent namespace to allow that
                                            namespace's owner to accept the reference. See the ReferenceGrant
                                            documentation for details.


                                            Support: Core
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                        port:
                                          description: |-
                                            Port specifies the destination port number to use for this resource.
                                            Port is required when the referent is a Kubernetes Service. In this
                                            case, the port number is the service port number, not the target port.
                                            For other resources, destination port might be derived from the referent
                                            resource or this field.
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                      required:
                                      - name
                                      type: object
                                      x-kubernetes-validations:
                                      - message: Must have port for Service reference
                                        rule: '(size(self.group) == 0 && self.kind
                                          == ''Service'') ? has(self.port) : true'
                                  required:
                                  - backendRef
                                  type: object
                                requestRedirect:
                                  description: |-
                                    RequestRedirect defines a schema for a filter that responds to the
                                    request with an HTTP redirection.


                                    Support: Core
                                  properties:
                                    hostname:
                                      description: |-
                                        Hostname is the hostname to be used in the value of the `Location`
                                        header in the response.
                                        When empty, the hostname in the `Host` header of the request is used.


                                        Support: Core
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: |-
                                        Path defines parameters used to modify the path of the incoming request.
                                        The modified path is then used to construct the `Location` header. When
                                        empty, the request path is used as-is.


                                        Support: Extended
                                      properties:
                                        replaceFullPath:
                                          description: |-
                                            ReplaceFullPath specifies the value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: |-
                                            ReplacePrefixMatch specifies the value with which to replace the prefix
                                            match of a request during a rewrite or redirect. For example, a request
                                            to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                            of "/xyz" would be modified to "/xyz/bar".


                                            Note that this matches the behavior of the PathPrefix match type. This
                                            matches full path elements. A path element refers to the list of labels
                                            in the path split by the `/` separator. When specified, a trailing `/` is
                                            ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                            match the prefix `/abc`, but the path `/abcd` would not.


                                            ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                            Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                            the implementation setting the Accepted Condition for the Route to `status: False`.


                                            Request Path | Prefix Match | Replace Prefix | Modified Path
                                            -------------|--------------|----------------|----------
                                            /foo/bar     | /foo         | /xyz           | /xyz/bar
                                            /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                            /foo         | /foo         | /xyz           | /xyz
                                            /foo/        | /foo         | /xyz           | /xyz/
                                            /foo/bar     | /foo         | <empty string> | /bar
                                            /foo/        | /foo         | <empty string> | /
                                            /foo         | /foo         | <empty string> | /
                                            /foo/        | /foo         | /              | /
                                            /foo         | /foo         | /              | /
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: |-
                                            Type defines the type of path modifier. Additional types may be
                                            added in a future release of the API.


                                            Note that values may be added to this enum, implementations
                                            must ensure that unknown values will not cause a crash.


                                            Unknown values here must result in the implementation setting the
                                            Accepted Condition for the Route to `status: False`, with a
                                            Reason of `UnsupportedValue`.
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                      x-kubernetes-validations:
                                      - message: replaceFullPath must be specified
                                          when type is set to 'ReplaceFullPath'
                                        rule: 'self.type == ''ReplaceFullPath'' ?
                                          has(self.replaceFullPath) : true'
                                      - message: type must be 'ReplaceFullPath' when
                                          replaceFullPath is set
                                        rule: 'has(self.replaceFullPath) ? self.type
                                          == ''ReplaceFullPath'' : true'
                                      - message: replacePrefixMatch must be specified
                                          when type is set to 'ReplacePrefixMatch'
                                        rule: 'self.type == ''ReplacePrefixMatch''
                                          ? has(self.replacePrefixMatch) : true'
                                      - message: type must be 'ReplacePrefixMatch'
                                          when replacePrefixMatch is set
                                        rule: 'has(self.replacePrefixMatch) ? self.type
                                          == ''ReplacePrefixMatch'' : true'
                                    port:
                                      description: |-
                                        Port is the port to be used in the value of the `Location`
                                        header in the response.


                                        If no port is specified, the redirect port MUST be derived using the
                                        following rules:


                                        * If redirect scheme is not-empty, the redirect port MUST be the well-known
                                          port associated with the redirect scheme. Specifically "http" to port 80
                                          and "https" to port 443. If the redirect scheme does not have a
                                          well-known port, the listener port of the Gateway SHOULD be used.
                                        * If redirect scheme is empty, the redirect port MUST be the Gateway
                                          Listener port.


                                        Implementations SHOULD NOT add the port number in the 'Location'
                                        header in the following cases:


                                        * A Location header that will use HTTP (whether that is determined via
                                          the Listener protocol or the Scheme field) _and_ use port 80.
                                        * A Location header that will use HTTPS (whether that is determined via
                                          the Listener protocol or the Scheme field) _and_ use port 443.


                                        Support: Extended
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                    scheme:
                                      description: |-
                                        Scheme is the scheme to be used in the value of the `Location` header in
                                        the response. When empty, the scheme of the request is used.


                                        Scheme redirects can affect the port of the redirect, for more information,
                                        refer to the documentation for the port field of this filter.


                                        Note that values may be added to this enum, implementations
                                        must ensure that unknown values will not cause a crash.


                                        Unknown values here must result in the implementation setting the
                                        Accepted Condition for the Route to `status: False`, with a
                                        Reason of `UnsupportedValue`.


                                        Support: Extended
                                      enum:
                                      - http
                                      - https
                                      type: string
                                    statusCode:
                                      default: 302
                                      description: |-
                                        StatusCode is the HTTP status code to be used in response.


                                        Note that values may be added to this enum, implementations
                                        must ensure that unknown values will not cause a crash.


                                        Unknown values here must result in the implementation setting the
                                        Accepted Condition for the Route to `status: False`, with a
                                        Reason of `UnsupportedValue`.


                                        Support: Core
                                      enum:
                                      - 301
                                      - 302
                                      type: integer
                                  type: object
                                responseHeaderModifier:
                                  description: |-
                                    ResponseHeaderModifier defines a schema for a filter that modifies response
                                    headers.


                                    Support: Extended
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz


                                        Config:
                                          remove: ["my-header1", "my-header3"]


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                type:
                                  description: |-
                                    Type identifies the type of filter to apply. As with other API fields,
                                    types are classified into three conformance levels:


                                    - Core: Filter types and their corresponding configuration defined by
                                      "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                      implementations must support core filters.


                                    - Extended: Filter types and their corresponding configuration defined by
                                      "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                      are encouraged to support extended filters.


                                    - Implementation-specific: Filters that are defined and supported by
                                      specific vendors.
                                      In the future, filters showing convergence in behavior across multiple
                                      implementations will be considered for inclusion in extended or core
                                      conformance levels. Filter-specific configuration for such filters
                                      is specified using the ExtensionRef field. `Type` should be set to
                                      "ExtensionRef" for custom filters.


                                    Implementers are encouraged to define custom implementation types to
                                    extend the core API with implementation-specific behavior.


                                    If a reference to a custom filter type cannot be resolved, the filter
                                    MUST NOT be skipped. Instead, requests that would have been processed by
                                    that filter MUST receive a HTTP error response.


                                    Note that values may be added to this enum, implementations
                                    must ensure that unknown values will not cause a crash.


                                    Unknown values here must result in the implementation setting the
                                    Accepted Condition for the Route to `status: False`, with a
                                    Reason of `UnsupportedValue`.
                                  enum:
                                  - RequestHeaderModifier
                                  - ResponseHeaderModifier
                                  - RequestMirror
                                  - RequestRedirect
                                  - URLRewrite
                                  - ExtensionRef
                                  type: string
                                urlRewrite:
                                  description: |-
                                    URLRewrite defines a schema for a filter that modifies a request during forwarding.


                                    Support: Extended
                                  properties:
                                    hostname:
                                      description: |-
                                        Hostname is the value to be used to replace the Host header value during
                                        forwarding.


                                        Support: Extended
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: |-
                                        Path defines a path rewrite.


                                        Support: Extended
                                      properties:
                                        replaceFullPath:
                                          description: |-
                                            ReplaceFullPath specifies the value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: |-
                                            ReplacePrefixMatch specifies the value with which to replace the prefix
                                            match of a request during a rewrite or redirect. For example, a request
                                            to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                            of "/xyz" would be modified to "/xyz/bar".


                                            Note that this matches the behavior of the PathPrefix match type. This
                                            matches full path elements. A path element refers to the list of labels
                                            in the path split by the `/` separator. When specified, a trailing `/` is
                                            ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                            match the prefix `/abc`, but the path `/abcd` would not.


                                            ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                            Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                            the implementation setting the Accepted Condition for the Route to `status: False`.


                                            Request Path | Prefix Match | Replace Prefix | Modified Path
                                            -------------|--------------|----------------|----------
                                            /foo/bar     | /foo         | /xyz           | /xyz/bar
                                            /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                            /foo         | /foo         | /xyz           | /xyz
                                            /foo/        | /foo         | /xyz           | /xyz/
                                            /foo/bar     | /foo         | <empty string> | /bar
                                            /foo/        | /foo         | <empty string> | /
                                            /foo         | /foo         | <empty string> | /
                                            /foo/        | /foo         | /              | /
                                            /foo         | /foo         | /              | /
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: |-
                                            Type defines the type of path modifier. Additional types may be
                                            added in a future release of the API.


                                            Note that values may be added to this enum, implementations
                                            must ensure that unknown values will not cause a crash.


                                            Unknown values here must result in the implementation setting the
                                            Accepted Condition for the Route to `status: False`, with a
                                            Reason of `UnsupportedValue`.
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                      x-kubernetes-validations:
                                      - message: replaceFullPath must be specified
                                          when type is set to 'ReplaceFullPath'
                                        rule: 'self.type == ''ReplaceFullPath'' ?
                                          has(self.replaceFullPath) : true'
                                      - message: type must be 'ReplaceFullPath' when
                                          replaceFullPath is set
                                        rule: 'has(self.replaceFullPath) ? self.type
                                          == ''ReplaceFullPath'' : true'
                                      - message: replacePrefixMatch must be specified
                                          when type is set to 'ReplacePrefixMatch'
                                        rule: 'self.type == ''ReplacePrefixMatch''
                                          ? has(self.replacePrefixMatch) : true'
                                      - message: type must be 'ReplacePrefixMatch'
                                          when replacePrefixMatch is set
                                        rule: 'has(self.replacePrefixMatch) ? self.type
                                          == ''ReplacePrefixMatch'' : true'
                                  type: object
                              required:
                              - type
                              type: object
                              x-kubernetes-validations:
                              - message: filter.requestHeaderModifier must be nil
                                  if the filter.type is not RequestHeaderModifier
                                rule: '!(has(self.requestHeaderModifier) && self.type
                                  != ''RequestHeaderModifier'')'
                              - message: filter.requestHeaderModifier must be specified
                                  for RequestHeaderModifier filter.type
                                rule: '!(!has(self.requestHeaderModifier) && self.type
                                  == ''RequestHeaderModifier'')'
                              - message: filter.responseHeaderModifier must be nil
                                  if the filter.type is not ResponseHeaderModifier
                                rule: '!(has(self.responseHeaderModifier) && self.type
                                  != ''ResponseHeaderModifier'')'
                              - message: filter.responseHeaderModifier must be specified
                                  for ResponseHeaderModifier filter.type
                                rule: '!(!has(self.responseHeaderModifier) && self.type
                                  == ''ResponseHeaderModifier'')'
                              - message: filter.requestMirror must be nil if the filter.type
                                  is not RequestMirror
                                rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                              - message: filter.requestMirror must be specified for
                                  RequestMirror filter.type
                                rule: '!(!has(self.requestMirror) && self.type ==
                                  ''RequestMirror'')'
                              - message: filter.requestRedirect must be nil if the
                                  filter.type is not RequestRedirect
                                rule: '!(has(self.requestRedirect) && self.type !=
                                  ''RequestRedirect'')'
                              - message: filter.requestRedirect must be specified
                                  for RequestRedirect filter.type
                                rule: '!(!has(self.requestRedirect) && self.type ==
                                  ''RequestRedirect'')'
                              - message: filter.urlRewrite must be nil if the filter.type
                                  is not URLRewrite
                                rule: '!(has(self.urlRewrite) && self.type != ''URLRewrite'')'
                              - message: filter.urlRewrite must be specified for URLRewrite
                                  filter.type
                                rule: '!(!has(self.urlRewrite) && self.type == ''URLRewrite'')'
                              - message: filter.extensionRef must be nil if the filter.type
                                  is not ExtensionRef
                                rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                              - message: filter.extensionRef must be specified for
                                  ExtensionRef filter.type
                                rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                            maxItems: 16
                            type: array
                            x-kubernetes-validations:
                            - message: May specify either httpRouteFilterRequestRedirect
                                or httpRouteFilterRequestRewrite, but not both
                              rule: '!(self.exists(f, f.type == ''RequestRedirect'')
                                && self.exists(f, f.type == ''URLRewrite''))'
                            - message: May specify either httpRouteFilterRequestRedirect
                                or httpRouteFilterRequestRewrite, but not both
                              rule: '!(self.exists(f, f.type == ''RequestRedirect'')
                                && self.exists(f, f.type == ''URLRewrite''))'
                            - message: RequestHeaderModifier filter cannot be repeated
                              rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                                <= 1
                            - message: ResponseHeaderModifier filter cannot be repeated
                              rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                                <= 1
                            - message: RequestRedirect filter cannot be repeated
                              rule: self.filter(f, f.type == 'RequestRedirect').size()
                                <= 1
                            - message: URLRewrite filter cannot be repeated
                              rule: self.filter(f, f.type == 'URLRewrite').size()
                                <= 1
                          group:
                            default: ""
                            description: |-
                              Group is the group of the referent. For example, "gateway.networking.k8s.io".
                              When unspecified or empty string, core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: |-
                              Kind is the Kubernetes resource kind of the referent. For example
                              "Service".


                              Defaults to "Service" when not specified.


                              ExternalName services can refer to CNAME DNS records that may live
                              outside of the cluster and as such are difficult to reason about in
                              terms of conformance. They also may not be safe to forward to (see
                              CVE-2021-25740 for more information). Implementations SHOULD NOT
                              support ExternalName Services.


                              Support: Core (Services with a type other than ExternalName)


                              Support: Implementation-specific (Services with type ExternalName)
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: |-
                              Namespace is the namespace of the backend. When unspecified, the local
                              namespace is inferred.


                              Note that when a namespace different than the local namespace is specified,
                              a ReferenceGrant object is required in the referent namespace to allow that
                              namespace's owner to accept the reference. See the ReferenceGrant
                              documentation for details.


                              Support: Core
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: |-
                              Port specifies the destination port number to use for this resource.
                              Port is required when the referent is a Kubernetes Service. In this
                              case, the port number is the service port number, not the target port.
                              For other resources, destination port might be derived from the referent
                              resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: |-
                              Weight specifies the proportion of requests forwarded to the referenced
                              backend. This is computed as weight/(sum of all weights in this
                              BackendRefs list). For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision an
                              implementation supports. Weight is not a percentage and the sum of
                              weights does not need to equal 100.


                              If only one backend is specified and it has a weight greater than 0, 100%
                              of the traffic is forwarded to that backend. If weight is set to 0, no
                              traffic should be forwarded for this entry. If unspecified, weight
                              defaults to 1.


                              Support for this field varies based on the context where used.
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                        x-kubernetes-validations:
                        - message: Must have port for Service reference
                          rule: '(size(self.group) == 0 && self.kind == ''Service'')
                            ? has(self.port) : true'
                      maxItems: 16
                      type: array
                    filters:
                      description: |-
                        Filters define the filters that are applied to requests that match
                        this rule.


                        Wherever possible, implementations SHOULD implement filters in the order
                        they are specified.


                        Implementations MAY choose to implement this ordering strictly, rejecting
                        any combination or order of filters that can not be supported. If implementations
                        choose a strict interpretation of filter ordering, they MUST clearly document
                        that behavior.


                        To reject an invalid combination or order of filters, implementations SHOULD
                        consider the Route Rules with this configuration invalid. If all Route Rules
                        in a Route are invalid, the entire Route would be considered invalid. If only
                        a portion of Route Rules are invalid, implementations MUST set the
                        "PartiallyInvalid" condition for the Route.


                        Conformance-levels at this level are defined based on the type of filter:


                        - ALL core filters MUST be supported by all implementations.
                        - Implementers are encouraged to support extended filters.
                        - Implementation-specific custom filters have no API guarantees across
                          implementations.


                        Specifying the same filter multiple times is not supported unless explicitly
                        indicated in the filter.


                        All filters are expected to be compatible with each other except for the
                        URLRewrite and RequestRedirect filters, which may not be combined. If an
                        implementation can not support other combinations of filters, they must clearly
                        document that limitation. In cases where incompatible or unsupported
                        filters are specified and cause the `Accepted` condition to be set to status
                        `False`, implementations may use the `IncompatibleFilters` reason to specify
                        this configuration error.


                        Support: Core
                      items:
                        description: |-
                          HTTPRouteFilter defines processing steps that must be completed during the
                          request or response lifecycle. HTTPRouteFilters are meant as an extension
                          point to express processing that may be done in Gateway implementations. Some
                          examples include request or response modification, implementing
                          authentication strategies, rate-limiting, and traffic shaping. API
                          guarantee/conformance is defined based on the type of the filter.
                        properties:
                          extensionRef:
                            description: |-
                              ExtensionRef is an optional, implementation-specific extension to the
                              "filter" behavior.  For example, resource "myroutefilter" in group
                              "networking.example.net"). ExtensionRef MUST NOT be used for core and
                              extended filters.


                              This filter can be used multiple times within the same rule.


                              Support: Implementation-specific
                            properties:
                              group:
                                description: |-
                                  Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                  When unspecified or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: Kind is kind of the referent. For example
                                  "HTTPRoute" or "Service".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                            required:
                            - group
                            - kind
                            - name
                            type: object
                          requestHeaderModifier:
                            description: |-
                              RequestHeaderModifier defines a schema for a filter that modifies request
                              headers.


                              Support: Core
                            properties:
                              add:
                                description: |-
                                  Add adds the given header(s) (name, value) to the request
                                  before the action. It appends to any existing values associated
                                  with the header name.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    add:
                                    - name: "my-header"
                                      value: "bar,baz"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: foo,bar,baz
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: |-
                                  Remove the given header(s) from the HTTP request before the action. The
                                  value of Remove is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see
                                  https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header1: foo
                                    my-header2: bar
                                    my-header3: baz


                                  Config:
                                    remove: ["my-header1", "my-header3"]


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header2: bar
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                                x-kubernetes-list-type: set
                              set:
                                description: |-
                                  Set overwrites the request with the given header (name, value)
                                  before the action.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    set:
                                    - name: "my-header"
                                      value: "bar"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: bar
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          requestMirror:
                            description: |-
                              RequestMirror defines a schema for a filter that mirrors requests.
                              Requests are sent to the specified destination, but responses from
                              that destination are ignored.


                              This filter can be used multiple times within the same rule. Note that
                              not all implementations will be able to support mirroring to multiple
                              backends.


                              Support: Extended
                            properties:
                              backendRef:
                                description: |-
                                  BackendRef references a resource where mirrored requests are sent.


                                  Mirrored requests must be sent only to a single destination endpoint
                                  within this BackendRef, irrespective of how many endpoints are present
                                  within this BackendRef.


                                  If the referent cannot be found, this BackendRef is invalid and must be
                                  dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                  condition on the Route status is set to `status: False` and not configure
                                  this backend in the underlying implementation.


                                  If there is a cross-namespace reference to an *existing* object
                                  that is not allowed by a ReferenceGrant, the controller must ensure the
                                  "ResolvedRefs"  condition on the Route is set to `status: False`,
                                  with the "RefNotPermitted" reason and not configure this backend in the
                                  underlying implementation.


                                  In either error case, the Message of the `ResolvedRefs` Condition
                                  should be used to provide more detail about the problem.


                                  Support: Extended for Kubernetes Service


                                  Support: Implementation-specific for any other resource
                                properties:
                                  group:
                                    default: ""
                                    description: |-
                                      Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                      When unspecified or empty string, core API group is inferred.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    default: Service
                                    description: |-
                                      Kind is the Kubernetes resource kind of the referent. For example
                                      "Service".


                                      Defaults to "Service" when not specified.


                                      ExternalName services can refer to CNAME DNS records that may live
                                      outside of the cluster and as such are difficult to reason about in
                                      terms of conformance. They also may not be safe to forward to (see
                                      CVE-2021-25740 for more information). Implementations SHOULD NOT
                                      support ExternalName Services.


                                      Support: Core (Services with a type other than ExternalName)


                                      Support: Implementation-specific (Services with type ExternalName)
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace of the backend. When unspecified, the local
                                      namespace is inferred.


                                      Note that when a namespace different than the local namespace is specified,
                                      a ReferenceGrant object is required in the referent namespace to allow that
                                      namespace's owner to accept the reference. See the ReferenceGrant
                                      documentation for details.


                                      Support: Core
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  port:
                                    description: |-
                                      Port specifies the destination port number to use for this resource.
                                      Port is required when the referent is a Kubernetes Service. In this
                                      case, the port number is the service port number, not the target port.
                                      For other resources, destination port might be derived from the referent
                                      resource or this field.
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                required:
                                - name
                                type: object
                                x-kubernetes-validations:
                                - message: Must have port for Service reference
                                  rule: '(size(self.group) == 0 && self.kind == ''Service'')
                                    ? has(self.port) : true'
                            required:
                            - backendRef
                            type: object
                          requestRedirect:
                            description: |-
                              RequestRedirect defines a schema for a filter that responds to the
                              request with an HTTP redirection.


                              Support: Core
                            properties:
                              hostname:
                                description: |-
                                  Hostname is the hostname to be used in the value of the `Location`
                                  header in the response.
                                  When empty, the hostname in the `Host` header of the request is used.


                                  Support: Core
                                maxLength: 253
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              path:
                                description: |-
                                  Path defines parameters used to modify the path of the incoming request.
                                  The modified path is then used to construct the `Location` header. When
                                  empty, the request path is used as-is.


                                  Support: Extended
                                properties:
                                  replaceFullPath:
                                    description: |-
                                      ReplaceFullPath specifies the value with which to replace the full path
                                      of a request during a rewrite or redirect.
                                    maxLength: 1024
                                    type: string
                                  replacePrefixMatch:
                                    description: |-
                                      ReplacePrefixMatch specifies the value with which to replace the prefix
                                      match of a request during a rewrite or redirect. For example, a request
                                      to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                      of "/xyz" would be modified to "/xyz/bar".


                                      Note that this matches the behavior of the PathPrefix match type. This
                                      matches full path elements. A path element refers to the list of labels
                                      in the path split by the `/` separator. When specified, a trailing `/` is
                                      ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                      match the prefix `/abc`, but the path `/abcd` would not.


                                      ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                      Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                      the implementation setting the Accepted Condition for the Route to `status: False`.


                                      Request Path | Prefix Match | Replace Prefix | Modified Path
                                      -------------|--------------|----------------|----------
                                      /foo/bar     | /foo         | /xyz           | /xyz/bar
                                      /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                      /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                      /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                      /foo         | /foo         | /xyz           | /xyz
                                      /foo/        | /foo         | /xyz           | /xyz/
                                      /foo/bar     | /foo         | <empty string> | /bar
                                      /foo/        | /foo         | <empty string> | /
                                      /foo         | /foo         | <empty string> | /
                                      /foo/        | /foo         | /              | /
                                      /foo         | /foo         | /              | /
                                    maxLength: 1024
                                    type: string
                                  type:
                                    description: |-
                                      Type defines the type of path modifier. Additional types may be
                                      added in a future release of the API.


                                      Note that values may be added to this enum, implementations
                                      must ensure that unknown values will not cause a crash.


                                      Unknown values here must result in the implementation setting the
                                      Accepted Condition for the Route to `status: False`, with a
                                      Reason of `UnsupportedValue`.
                                    enum:
                                    - ReplaceFullPath
                                    - ReplacePrefixMatch
                                    type: string
                                required:
                                - type
                                type: object
                                x-kubernetes-validations:
                                - message: replaceFullPath must be specified when
                                    type is set to 'ReplaceFullPath'
                                  rule: 'self.type == ''ReplaceFullPath'' ? has(self.replaceFullPath)
                                    : true'
                                - message: type must be 'ReplaceFullPath' when replaceFullPath
                                    is set
                                  rule: 'has(self.replaceFullPath) ? self.type ==
                                    ''ReplaceFullPath'' : true'
                                - message: replacePrefixMatch must be specified when
                                    type is set to 'ReplacePrefixMatch'
                                  rule: 'self.type == ''ReplacePrefixMatch'' ? has(self.replacePrefixMatch)
                                    : true'
                                - message: type must be 'ReplacePrefixMatch' when
                                    replacePrefixMatch is set
                                  rule: 'has(self.replacePrefixMatch) ? self.type
                                    == ''ReplacePrefixMatch'' : true'
                              port:
                                description: |-
                                  Port is the port to be used in the value of the `Location`
                                  header in the response.


                                  If no port is specified, the redirect port MUST be derived using the
                                  following rules:


                                  * If redirect scheme is not-empty, the redirect port MUST be the well-known
                                    port associated with the redirect scheme. Specifically "http" to port 80
                                    and "https" to port 443. If the redirect scheme does not have a
                                    well-known port, the listener port of the Gateway SHOULD be used.
                                  * If redirect scheme is empty, the redirect port MUST be the Gateway
                                    Listener port.


                                  Implementations SHOULD NOT add the port number in the 'Location'
                                  header in the following cases:


                                  * A Location header that will use HTTP (whether that is determined via
                                    the Listener protocol or the Scheme field) _and_ use port 80.
                                  * A Location header that will use HTTPS (whether that is determined via
                                    the Listener protocol or the Scheme field) _and_ use port 443.


                                  Support: Extended
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              scheme:
                                description: |-
                                  Scheme is the scheme to be used in the value of the `Location` header in
                                  the response. When empty, the scheme of the request is used.


                                  Scheme redirects can affect the port of the redirect, for more information,
                                  refer to the documentation for the port field of this filter.


                                  Note that values may be added to this enum, implementations
                                  must ensure that unknown values will not cause a crash.


                                  Unknown values here must result in the implementation setting the
                                  Accepted Condition for the Route to `status: False`, with a
                                  Reason of `UnsupportedValue`.


                                  Support: Extended
                                enum:
                                - http
                                - https
                                type: string
                              statusCode:
                                default: 302
                                description: |-
                                  StatusCode is the HTTP status code to be used in response.


                                  Note that values may be added to this enum, implementations
                                  must ensure that unknown values will not cause a crash.


                                  Unknown values here must result in the implementation setting the
                                  Accepted Condition for the Route to `status: False`, with a
                                  Reason of `UnsupportedValue`.


                                  Support: Core
                                enum:
                                - 301
                                - 302
                                type: integer
                            type: object
                          responseHeaderModifier:
                            description: |-
                              ResponseHeaderModifier defines a schema for a filter that modifies response
                              headers.


                              Support: Extended
                            properties:
                              add:
                                description: |-
                                  Add adds the given header(s) (name, value) to the request
                                  before the action. It appends to any existing values associated
                                  with the header name.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    add:
                                    - name: "my-header"
                                      value: "bar,baz"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: foo,bar,baz
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: |-
                                  Remove the given header(s) from the HTTP request before the action. The
                                  value of Remove is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see
                                  https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header1: foo
                                    my-header2: bar
                                    my-header3: baz


                                  Config:
                                    remove: ["my-header1", "my-header3"]


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header2: bar
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                                x-kubernetes-list-type: set
                              set:
                                description: |-
                                  Set overwrites the request with the given header (name, value)
                                  before the action.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    set:
                                    - name: "my-header"
                                      value: "bar"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: bar
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          type:
                            description: |-
                              Type identifies the type of filter to apply. As with other API fields,
                              types are classified into three conformance levels:


                              - Core: Filter types and their corresponding configuration defined by
                                "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                implementations must support core filters.


                              - Extended: Filter types and their corresponding configuration defined by
                                "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                are encouraged to support extended filters.


                              - Implementation-specific: Filters that are defined and supported by
                                specific vendors.
                                In the future, filters showing convergence in behavior across multiple
                                implementations will be considered for inclusion in extended or core
                                conformance levels. Filter-specific configuration for such filters
                                is specified using the ExtensionRef field. `Type` should be set to
                                "ExtensionRef" for custom filters.


                              Implementers are encouraged to define custom implementation types to
                              extend the core API with implementation-specific behavior.


                              If a reference to a custom filter type cannot be resolved, the filter
                              MUST NOT be skipped. Instead, requests that would have been processed by
                              that filter MUST receive a HTTP error response.


                              Note that values may be added to this enum, implementations
                              must ensure that unknown values will not cause a crash.


                              Unknown values here must result in the implementation setting the
                              Accepted Condition for the Route to `status: False`, with a
                              Reason of `UnsupportedValue`.
                            enum:
                            - RequestHeaderModifier
                            - ResponseHeaderModifier
                            - RequestMirror
                            - RequestRedirect
                            - URLRewrite
                            - ExtensionRef
                            type: string
                          urlRewrite:
                            description: |-
                              URLRewrite defines a schema for a filter that modifies a request during forwarding.


                              Support: Extended
                            properties:
                              hostname:
                                description: |-
                                  Hostname is the value to be used to replace the Host header value during
                                  forwarding.


                                  Support: Extended
                                maxLength: 253
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              path:
                                description: |-
                                  Path defines a path rewrite.


                                  Support: Extended
                                properties:
                                  replaceFullPath:
                                    description: |-
                                      ReplaceFullPath specifies the value with which to replace the full path
                                      of a request during a rewrite or redirect.
                                    maxLength: 1024
                                    type: string
                                  replacePrefixMatch:
                                    description: |-
                                      ReplacePrefixMatch specifies the value with which to replace the prefix
                                      match of a request during a rewrite or redirect. For example, a request
                                      to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                      of "/xyz" would be modified to "/xyz/bar".


                                      Note that this matches the behavior of the PathPrefix match type. This
                                      matches full path elements. A path element refers to the list of labels
                                      in the path split by the `/` separator. When specified, a trailing `/` is
                                      ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                      match the prefix `/abc`, but the path `/abcd` would not.


                                      ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                      Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                      the implementation setting the Accepted Condition for the Route to `status: False`.


                                      Request Path | Prefix Match | Replace Prefix | Modified Path
                                      -------------|--------------|----------------|----------
                                      /foo/bar     | /foo         | /xyz           | /xyz/bar
                                      /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                      /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                      /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                      /foo         | /foo         | /xyz           | /xyz
                                      /foo/        | /foo         | /xyz           | /xyz/
                                      /foo/bar     | /foo         | <empty string> | /bar
                                      /foo/        | /foo         | <empty string> | /
                                      /foo         | /foo         | <empty string> | /
                                      /foo/        | /foo         | /              | /
                                      /foo         | /foo         | /              | /
                                    maxLength: 1024
                                    type: string
                                  type:
                                    description: |-
                                      Type defines the type of path modifier. Additional types may be
                                      added in a future release of the API.


                                      Note that values may be added to this enum, implementations
                                      must ensure that unknown values will not cause a crash.


                                      Unknown values here must result in the implementation setting the
                                      Accepted Condition for the Route to `status: False`, with a
                                      Reason of `UnsupportedValue`.
                                    enum:
                                    - ReplaceFullPath
                                    - ReplacePrefixMatch
                                    type: string
                                required:
                                - type
                                type: object
                                x-kubernetes-validations:
                                - message: replaceFullPath must be specified when
                                    type is set to 'ReplaceFullPath'
                                  rule: 'self.type == ''ReplaceFullPath'' ? has(self.replaceFullPath)
                                    : true'
                                - message: type must be 'ReplaceFullPath' when replaceFullPath
                                    is set
                                  rule: 'has(self.replaceFullPath) ? self.type ==
                                    ''ReplaceFullPath'' : true'
                                - message: replacePrefixMatch must be specified when
                                    type is set to 'ReplacePrefixMatch'
                                  rule: 'self.type == ''ReplacePrefixMatch'' ? has(self.replacePrefixMatch)
                                    : true'
                                - message: type must be 'ReplacePrefixMatch' when
                                    replacePrefixMatch is set
                                  rule: 'has(self.replacePrefixMatch) ? self.type
                                    == ''ReplacePrefixMatch'' : true'
                            type: object
                        required:
                        - type
                        type: object
                        x-kubernetes-validations:
                        - message: filter.requestHeaderModifier must be nil if the
                            filter.type is not RequestHeaderModifier
                          rule: '!(has(self.requestHeaderModifier) && self.type !=
                            ''RequestHeaderModifier'')'
                        - message: filter.requestHeaderModifier must be specified
                            for RequestHeaderModifier filter.type
                          rule: '!(!has(self.requestHeaderModifier) && self.type ==
                            ''RequestHeaderModifier'')'
                        - message: filter.responseHeaderModifier must be nil if the
                            filter.type is not ResponseHeaderModifier
                          rule: '!(has(self.responseHeaderModifier) && self.type !=
                            ''ResponseHeaderModifier'')'
                        - message: filter.responseHeaderModifier must be specified
                            for ResponseHeaderModifier filter.type
                          rule: '!(!has(self.responseHeaderModifier) && self.type
                            == ''ResponseHeaderModifier'')'
                        - message: filter.requestMirror must be nil if the filter.type
                            is not RequestMirror
                          rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                        - message: filter.requestMirror must be specified for RequestMirror
                            filter.type
                          rule: '!(!has(self.requestMirror) && self.type == ''RequestMirror'')'
                        - message: filter.requestRedirect must be nil if the filter.type
                            is not RequestRedirect
                          rule: '!(has(self.requestRedirect) && self.type != ''RequestRedirect'')'
                        - message: filter.requestRedirect must be specified for RequestRedirect
                            filter.type
                          rule: '!(!has(self.requestRedirect) && self.type == ''RequestRedirect'')'
                        - message: filter.urlRewrite must be nil if the filter.type
                            is not URLRewrite
                          rule: '!(has(self.urlRewrite) && self.type != ''URLRewrite'')'
                        - message: filter.urlRewrite must be specified for URLRewrite
                            filter.type
                          rule: '!(!has(self.urlRewrite) && self.type == ''URLRewrite'')'
                        - message: filter.extensionRef must be nil if the filter.type
                            is not ExtensionRef
                          rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                        - message: filter.extensionRef must be specified for ExtensionRef
                            filter.type
                          rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                      maxItems: 16
                      type: array
                      x-kubernetes-validations:
                      - message: May specify either httpRouteFilterRequestRedirect
                          or httpRouteFilterRequestRewrite, but not both
                        rule: '!(self.exists(f, f.type == ''RequestRedirect'') &&
                          self.exists(f, f.type == ''URLRewrite''))'
                      - message: RequestHeaderModifier filter cannot be repeated
                        rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                          <= 1
                      - message: ResponseHeaderModifier filter cannot be repeated
                        rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                          <= 1
                      - message: RequestRedirect filter cannot be repeated
                        rule: self.filter(f, f.type == 'RequestRedirect').size() <=
                          1
                      - message: URLRewrite filter cannot be repeated
                        rule: self.filter(f, f.type == 'URLRewrite').size() <= 1
                    matches:
                      default:
                      - path:
                          type: PathPrefix
                          value: /
                      description: |-
                        Matches define conditions used for matching the rule against incoming
                        HTTP requests. Each match is independent, i.e. this rule will be matched
                        if **any** one of the matches is satisfied.


                        For example, take the following matches configuration:


                        ```
                        matches:
                        - path:
                            value: "/foo"
                          headers:
                          - name: "version"
                            value: "v2"
                        - path:
                            value: "/v2/foo"
                        ```


                        For a request to match against this rule, a request must satisfy
                        EITHER of the two conditions:


                        - path prefixed with `/foo` AND contains the header `version: v2`
                        - path prefix of `/v2/foo`


                        See the documentation for HTTPRouteMatch on how to specify multiple
                        match conditions that should be ANDed together.


                        If no matches are specified, the default is a prefix
                        path match on "/", which has the effect of matching every
                        HTTP request.


                        Proxy or Load Balancer routing configuration generated from HTTPRoutes
                        MUST prioritize matches based on the following criteria, continuing on
                        ties. Across all rules specified on applicable Routes, precedence must be
                        given to the match having:


                        * "Exact" path match.
                        * "Prefix" path match with largest number of characters.
                        * Method match.
                        * Largest number of header matches.
                        * Largest number of query param matches.


                        Note: The precedence of RegularExpression path matches are implementation-specific.


                        If ties still exist across multiple Routes, matching precedence MUST be
                        determined in order of the following criteria, continuing on ties:


                        * The oldest Route based on creation timestamp.
                        * The Route appearing first in alphabetical order by
                          "{namespace}/{name}".


                        If ties still exist within an HTTPRoute, matching precedence MUST be granted
                        to the FIRST matching rule (in list order) with a match meeting the above
                        criteria.


                        When no rules matching a request have been successfully attached to the
                        parent a request is coming from, a HTTP 404 status code MUST be returned.
                      items:
                        description: "HTTPRouteMatch defines the predicate used to
                          match requests to a given\naction. Multiple match types
                          are ANDed together, i.e. the match will\nevaluate to true
                          only if all conditions are satisfied.\n\n\nFor example,
                          the match below will match a HTTP request only if its path\nstarts
                          with `/foo` AND it contains the `version: v1` header:\n\n\n```\nmatch:\n\n\n\tpath:\n\t
                          \ value: \"/foo\"\n\theaders:\n\t- name: \"version\"\n\t
                          \ value \"v1\"\n\n\n```"
                        properties:
                          headers:
                            description: |-
                              Headers specifies HTTP request header matchers. Multiple match values are
                              ANDed together, meaning, a request must match all the specified headers
                              to select the route.
                            items:
                              description: |-
                                HTTPHeaderMatch describes how to select a HTTP route by matching HTTP request
                                headers.
                              properties:
                                name:
                                  description: |-
                                    Name is the name of the HTTP Header to be matched. Name matching MUST be
                                    case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                    If multiple entries specify equivalent header names, only the first
                                    entry with an equivalent name MUST be considered for a match. Subsequent
                                    entries with an equivalent header name MUST be ignored. Due to the
                                    case-insensitivity of header names, "foo" and "Foo" are considered
                                    equivalent.


                                    When a header is repeated in an HTTP request, it is
                                    implementation-specific behavior as to how this is represented.
                                    Generally, proxies should follow the guidance from the RFC:
                                    https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding
                                    processing a repeated header, with special handling for "Set-Cookie".
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: |-
                                    Type specifies how to match against the value of the header.


                                    Support: Core (Exact)


                                    Support: Implementation-specific (RegularExpression)


                                    Since RegularExpression HeaderMatchType has implementation-specific
                                    conformance, implementations can support POSIX, PCRE or any other dialects
                                    of regular expressions. Please read the implementation's documentation to
                                    determine the supported dialect.
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP Header to
                                    be matched.
                                  maxLength: 4096
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          method:
                            description: |-
                              Method specifies HTTP method matcher.
                              When specified, this route will be matched only if the request has the
                              specified method.


                              Support: Extended
                            enum:
                            - GET
                            - HEAD
                            - POST
                            - PUT
                            - DELETE
                            - CONNECT
                            - OPTIONS
                            - TRACE
                            - PATCH
                            type: string
                          path:
                            default:
                              type: PathPrefix
                              value: /
                            description: |-
                              Path specifies a HTTP request path matcher. If this field is not
                              specified, a default prefix match on the "/" path is provided.
                            properties:
                              type:
                                default: PathPrefix
                                description: |-
                                  Type specifies how to match against the path Value.


                                  Support: Core (Exact, PathPrefix)


                                  Support: Implementation-specific (RegularExpression)
                                enum:
                                - Exact
                                - PathPrefix
                                - RegularExpression
                                type: string
                              value:
                                default: /
                                description: Value of the HTTP path to match against.
                                maxLength: 1024
                                type: string
                            type: object
                            x-kubernetes-validations:
                            - message: value must be an absolute path and start with
                                '/' when type one of ['Exact', 'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? self.value.startsWith(''/'')
                                : true'
                            - message: must not contain '//' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''//'')
                                : true'
                            - message: must not contain '/./' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''/./'')
                                : true'
                            - message: must not contain '/../' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''/../'')
                                : true'
                            - message: must not contain '%2f' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''%2f'')
                                : true'
                            - message: must not contain '%2F' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''%2F'')
                                : true'
                            - message: must not contain '#' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''#'')
                                : true'
                            - message: must not end with '/..' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.endsWith(''/..'')
                                : true'
                            - message: must not end with '/.' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.endsWith(''/.'')
                                : true'
                            - message: type must be one of ['Exact', 'PathPrefix',
                                'RegularExpression']
                              rule: self.type in ['Exact','PathPrefix'] || self.type
                                == 'RegularExpression'
                            - message: must only contain valid characters (matching
                                ^(?:[-A-Za-z0-9/._~!$&'()*+,;=:@]|[%][0-9a-fA-F]{2})+$)
                                for types ['Exact', 'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? self.value.matches(r"""^(?:[-A-Za-z0-9/._~!$&''()*+,;=:@]|[%][0-9a-fA-F]{2})+$""")
                                : true'
                          queryParams:
                            description: |-
                              QueryParams specifies HTTP query parameter matchers. Multiple match
                              values are ANDed together, meaning, a request must match all the
                              specified query parameters to select the route.


                              Support: Extended
                            items:
                              description: |-
                                HTTPQueryParamMatch describes how to select a HTTP route by matching HTTP
                                query parameters.
                              properties:
                                name:
                                  description: |-
                                    Name is the name of the HTTP query param to be matched. This must be an
                                    exact string match. (See
                                    https://tools.ietf.org/html/rfc7230#section-2.7.3).


                                    If multiple entries specify equivalent query param names, only the first
                                    entry with an equivalent name MUST be considered for a match. Subsequent
                                    entries with an equivalent query param name MUST be ignored.


                                    If a query param is repeated in an HTTP request, the behavior is
                                    purposely left undefined, since different data planes have different
                                    capabilities. However, it is *recommended* that implementations should
                                    match against the first value of the param if the data plane supports it,
                                    as this behavior is expected in other load balancing contexts outside of
                                    the Gateway API.


                                    Users SHOULD NOT route traffic based on repeated query params to guard
                                    themselves against potential differences in the implementations.
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: |-
                                    Type specifies how to match against the value of the query parameter.


                                    Support: Extended (Exact)


                                    Support: Implementation-specific (RegularExpression)


                                    Since RegularExpression QueryParamMatchType has Implementation-specific
                                    conformance, implementations can support POSIX, PCRE or any other
                                    dialects of regular expressions. Please read the implementation's
                                    documentation to determine the supported dialect.
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP query param
                                    to be matched.
                                  maxLength: 1024
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                        type: object
                      maxItems: 8
                      type: array
                    sessionPersistence:
                      description: |+
                        SessionPersistence defines and configures session persistence
                        for the route rule.


                        Support: Extended


                      properties:
                        absoluteTimeout:
                          description: |-
                            AbsoluteTimeout defines the absolute timeout of the persistent
                            session. Once the AbsoluteTimeout duration has elapsed, the
                            session becomes invalid.


                            Support: Extended
                          pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                          type: string
                        cookieConfig:
                          description: |-
                            CookieConfig provides configuration settings that are specific
                            to cookie-based session persistence.


                            Support: Core
                          properties:
                            lifetimeType:
                              default: Session
                              description: |-
                                LifetimeType specifies whether the cookie has a permanent or
                                session-based lifetime. A permanent cookie persists until its
                                specified expiry time, defined by the Expires or Max-Age cookie
                                attributes, while a session cookie is deleted when the current
                                session ends.


                                When set to "Permanent", AbsoluteTimeout indicates the
                                cookie's lifetime via the Expires or Max-Age cookie attributes
                                and is required.


                                When set to "Session", AbsoluteTimeout indicates the
                                absolute lifetime of the cookie tracked by the gateway and
                                is optional.


                                Support: Core for "Session" type


                                Support: Extended for "Permanent" type
                              enum:
                              - Permanent
                              - Session
                              type: string
                          type: object
                        idleTimeout:
                          description: |-
                            IdleTimeout defines the idle timeout of the persistent session.
                            Once the session has been idle for more than the specified
                            IdleTimeout duration, the session becomes invalid.


                            Support: Extended
                          pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                          type: string
                        sessionName:
                          description: |-
                            SessionName defines the name of the persistent session token
                            which may be reflected in the cookie or the header. Users
                            should avoid reusing session names to prevent unintended
                            consequences, such as rejection or unpredictable behavior.


                            Support: Implementation-specific
                          maxLength: 128
                          type: string
                        type:
                          default: Cookie
                          description: |-
                            Type defines the type of session persistence such as through
                            the use a header or cookie. Defaults to cookie based session
                            persistence.


                            Support: Core for "Cookie" type


                            Support: Extended for "Header" type
                          enum:
                          - Cookie
                          - Header
                          type: string
                      type: object
                      x-kubernetes-validations:
                      - message: AbsoluteTimeout must be specified when cookie lifetimeType
                          is Permanent
                        rule: '!has(self.cookieConfig) || !has(self.cookieConfig.lifetimeType)
                          || self.cookieConfig.lifetimeType != ''Permanent'' || has(self.absoluteTimeout)'
                    timeouts:
                      description: |+
                        Timeouts defines the timeouts that can be configured for an HTTP request.


                        Support: Extended


                      properties:
                        backendRequest:
                          description: |-
                            BackendRequest specifies a timeout for an individual request from the gateway
                            to a backend. This covers the time from when the request first starts being
                            sent from the gateway to when the full response has been received from the backend.


                            Setting a timeout to the zero duration (e.g. "0s") SHOULD disable the timeout
                            completely. Implementations that cannot completely disable the timeout MUST
                            instead interpret the zero duration as the longest possible value to which
                            the timeout can be set.


                            An entire client HTTP transaction with a gateway, covered by the Request timeout,
                            may result in more than one call from the gateway to the destination backend,
                            for example, if automatic retries are supported.


                            Because the Request timeout encompasses the BackendRequest timeout, the value of
                            BackendRequest must be <= the value of Request timeout.


                            Support: Extended
                          pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                          type: string
                        request:
                          description: |-
                            Request specifies the maximum duration for a gateway to respond to an HTTP request.
                            If the gateway has not been able to respond before this deadline is met, the gateway
                            MUST return a timeout error.


                            For example, setting the `rules.timeouts.request` field to the value `10s` in an
                            `HTTPRoute` will cause a timeout if a client request is taking longer than 10 seconds
                            to complete.


                            Setting a timeout to the zero duration (e.g. "0s") SHOULD disable the timeout
                            completely. Implementations that cannot completely disable the timeout MUST
                            instead interpret the zero duration as the longest possible value to which
                            the timeout can be set.


                            This timeout is intended to cover as close to the whole request-response transaction
                            as possible although an implementation MAY choose to start the timeout after the entire
                            request stream has been received instead of immediately after the transaction is
                            initiated by the client.


                            When this field is unspecified, request timeout behavior is implementation-specific.


                            Support: Extended
                          pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                          type: string
                      type: object
                      x-kubernetes-validations:
                      - message: backendRequest timeout cannot be longer than request
                          timeout
                        rule: '!(has(self.request) && has(self.backendRequest) &&
                          duration(self.request) != duration(''0s'') && duration(self.backendRequest)
                          > duration(self.request))'
                  type: object
                  x-kubernetes-validations:
                  - message: RequestRedirect filter must not be used together with
                      backendRefs
                    rule: '(has(self.backendRefs) && size(self.backendRefs) > 0) ?
                      (!has(self.filters) || self.filters.all(f, !has(f.requestRedirect))):
                      true'
                  - message: When using RequestRedirect filter with path.replacePrefixMatch,
                      exactly one PathPrefix match must be specified
                    rule: '(has(self.filters) && self.filters.exists_one(f, has(f.requestRedirect)
                      && has(f.requestRedirect.path) && f.requestRedirect.path.type
                      == ''ReplacePrefixMatch'' && has(f.requestRedirect.path.replacePrefixMatch)))
                      ? ((size(self.matches) != 1 || !has(self.matches[0].path) ||
                      self.matches[0].path.type != ''PathPrefix'') ? false : true)
                      : true'
                  - message: When using URLRewrite filter with path.replacePrefixMatch,
                      exactly one PathPrefix match must be specified
                    rule: '(has(self.filters) && self.filters.exists_one(f, has(f.urlRewrite)
                      && has(f.urlRewrite.path) && f.urlRewrite.path.type == ''ReplacePrefixMatch''
                      && has(f.urlRewrite.path.replacePrefixMatch))) ? ((size(self.matches)
                      != 1 || !has(self.matches[0].path) || self.matches[0].path.type
                      != ''PathPrefix'') ? false : true) : true'
                  - message: Within backendRefs, when using RequestRedirect filter
                      with path.replacePrefixMatch, exactly one PathPrefix match must
                      be specified
                    rule: '(has(self.backendRefs) && self.backendRefs.exists_one(b,
                      (has(b.filters) && b.filters.exists_one(f, has(f.requestRedirect)
                      && has(f.requestRedirect.path) && f.requestRedirect.path.type
                      == ''ReplacePrefixMatch'' && has(f.requestRedirect.path.replacePrefixMatch)))
                      )) ? ((size(self.matches) != 1 || !has(self.matches[0].path)
                      || self.matches[0].path.type != ''PathPrefix'') ? false : true)
                      : true'
                  - message: Within backendRefs, When using URLRewrite filter with
                      path.replacePrefixMatch, exactly one PathPrefix match must be
                      specified
                    rule: '(has(self.backendRefs) && self.backendRefs.exists_one(b,
                      (has(b.filters) && b.filters.exists_one(f, has(f.urlRewrite)
                      && has(f.urlRewrite.path) && f.urlRewrite.path.type == ''ReplacePrefixMatch''
                      && has(f.urlRewrite.path.replacePrefixMatch))) )) ? ((size(self.matches)
                      != 1 || !has(self.matches[0].path) || self.matches[0].path.type
                      != ''PathPrefix'') ? false : true) : true'
                maxItems: 16
                type: array
            type: object
          status:
            description: Status defines the current state of HTTPRoute.
            properties:
              parents:
                description: |-
                  Parents is a list of parent resources (usually Gateways) that are
                  associated with the route, and the status of the route with respect to
                  each parent. When this route attaches to a parent, the controller that
                  manages the parent must add an entry to this list when the controller
                  first sees the route and should update the entry as appropriate when the
                  route or gateway is modified.


                  Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this API
                  can only populate Route status for the Gateways/parent resources they are
                  responsible for.


                  A maximum of 32 Gateways will be represented in this list. An empty list
                  means the route has not been attached to any Gateway.
                items:
                  description: |-
                    RouteParentStatus describes the status of a route with respect to an
                    associated Parent.
                  properties:
                    conditions:
                      description: |-
                        Conditions describes the status of the route with respect to the Gateway.
                        Note that the route's availability is also subject to the Gateway's own
                        status conditions and listener status.


                        If the Route's ParentRef specifies an existing Gateway that supports
                        Routes of this kind AND that Gateway's controller has sufficient access,
                        then that Gateway's controller MUST set the "Accepted" condition on the
                        Route, to indicate whether the route has been accepted or rejected by the
                        Gateway, and why.


                        A Route MUST be considered "Accepted" if at least one of the Route's
                        rules is implemented by the Gateway.


                        There are a number of cases where the "Accepted" condition may not be set
                        due to lack of controller visibility, that includes when:


                        * The Route refers to a non-existent parent.
                        * The Route is of a type that the controller does not support.
                        * The Route is in a namespace the controller does not have access to.
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource.\n---\nThis struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example,\n\n\n\ttype FooStatus
                          struct{\n\t    // Represents the observations of a foo's
                          current state.\n\t    // Known .status.conditions.type are:
                          \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                          +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    //
                          +listType=map\n\t    // +listMapKey=type\n\t    Conditions
                          []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                          patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                          \   // other fields\n\t}"
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: |-
                              type of condition in CamelCase or in foo.example.com/CamelCase.
                              ---
                              Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                              useful (see .node.status.conditions), the ability to deconflict is important.
                              The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: |-
                        ControllerName is a domain/path string that indicates the name of the
                        controller that wrote this status. This corresponds with the
                        controllerName field on GatewayClass.


                        Example: "example.net/gateway-controller".


                        The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
                        valid Kubernetes names
                        (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).


                        Controllers MUST populate this field when writing status. Controllers should ensure that
                        entries to status populated with their ControllerName are cleaned up when they are no
                        longer necessary.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: |-
                        ParentRef corresponds with a ParentRef in the spec that this
                        RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: |-
                            Group is the group of the referent.
                            When unspecified, "gateway.networking.k8s.io" is inferred.
                            To set the core API group (such as for a "Service" kind referent),
                            Group must be explicitly set to "" (empty string).


                            Support: Core
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: |-
                            Kind is kind of the referent.


                            There are two kinds of parent resources with "Core" support:


                            * Gateway (Gateway conformance profile)
                            * Service (Mesh conformance profile, ClusterIP Services only)


                            Support for other resources is Implementation-Specific.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: |-
                            Name is the name of the referent.


                            Support: Core
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referent. When unspecified, this refers
                            to the local namespace of the Route.


                            Note that there are specific rules for ParentRefs which cross namespace
                            boundaries. Cross-namespace references are only valid if they are explicitly
                            allowed by something in the namespace they are referring to. For example:
                            Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                            generic way to enable any other kind of cross-namespace reference.



                            ParentRefs from a Route to a Service in the same namespace are "producer"
                            routes, which apply default routing rules to inbound connections from
                            any namespace to the Service.


                            ParentRefs from a Route to a Service in a different namespace are
                            "consumer" routes, and these routing rules are only applied to outbound
                            connections originating from the same namespace as the Route, for which
                            the intended destination of the connections are a Service targeted as a
                            ParentRef of the Route.



                            Support: Core
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: |-
                            Port is the network port this Route targets. It can be interpreted
                            differently based on the type of parent resource.


                            When the parent resource is a Gateway, this targets all listeners
                            listening on the specified port that also support this kind of Route(and
                            select this Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to a specific port
                            as opposed to a listener(s) whose port(s) may be changed. When both Port
                            and SectionName are specified, the name and port of the selected listener
                            must match both specified values.



                            When the parent resource is a Service, this targets a specific port in the
                            Service spec. When both Port (experimental) and SectionName are specified,
                            the name and port of the selected port must match both specified values.



                            Implementations MAY choose to support other parent resources.
                            Implementations supporting other types of parent resources MUST clearly
                            document how/if Port is interpreted.


                            For the purpose of status, an attachment is considered successful as
                            long as the parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                            from the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.


                            Support: Extended
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: |-
                            SectionName is the name of a section within the target resource. In the
                            following resources, SectionName is interpreted as the following:


                            * Gateway: Listener name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.
                            * Service: Port name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.


                            Implementations MAY choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName is
                            interpreted.


                            When unspecified (empty string), this will reference the entire resource.
                            For the purpose of status, an attachment is considered successful if at
                            least one section in the parent resource accepts it. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                            the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route, the
                            Route MUST be considered detached from the Gateway.


                            Support: Core
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .spec.hostnames
      name: Hostnames
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: |-
          HTTPRoute provides a way to route HTTP requests. This includes the capability
          to match requests by hostname, path, header, or query param. Filters can be
          used to specify additional processing steps. Backends specify where matching
          requests should be routed.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of HTTPRoute.
            properties:
              hostnames:
                description: |-
                  Hostnames defines a set of hostnames that should match against the HTTP Host
                  header to select a HTTPRoute used to process the request. Implementations
                  MUST ignore any port value specified in the HTTP Host header while
                  performing a match and (absent of any applicable header modification
                  configuration) MUST forward this header unmodified to the backend.


                  Valid values for Hostnames are determined by RFC 1123 definition of a
                  hostname with 2 notable exceptions:


                  1. IPs are not allowed.
                  2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                     label must appear by itself as the first label.


                  If a hostname is specified by both the Listener and HTTPRoute, there
                  must be at least one intersecting hostname for the HTTPRoute to be
                  attached to the Listener. For example:


                  * A Listener with `test.example.com` as the hostname matches HTTPRoutes
                    that have either not specified any hostnames, or have specified at
                    least one of `test.example.com` or `*.example.com`.
                  * A Listener with `*.example.com` as the hostname matches HTTPRoutes
                    that have either not specified any hostnames or have specified at least
                    one hostname that matches the Listener hostname. For example,
                    `*.example.com`, `test.example.com`, and `foo.test.example.com` would
                    all match. On the other hand, `example.com` and `test.example.net` would
                    not match.


                  Hostnames that are prefixed with a wildcard label (`*.`) are interpreted
                  as a suffix match. That means that a match for `*.example.com` would match
                  both `test.example.com`, and `foo.test.example.com`, but not `example.com`.


                  If both the Listener and HTTPRoute have specified hostnames, any
                  HTTPRoute hostnames that do not match the Listener hostname MUST be
                  ignored. For example, if a Listener specified `*.example.com`, and the
                  HTTPRoute specified `test.example.com` and `test.example.net`,
                  `test.example.net` must not be considered for a match.


                  If both the Listener and HTTPRoute have specified hostnames, and none
                  match with the criteria above, then the HTTPRoute is not accepted. The
                  implementation must raise an 'Accepted' Condition with a status of
                  `False` in the corresponding RouteParentStatus.


                  In the event that multiple HTTPRoutes specify intersecting hostnames (e.g.
                  overlapping wildcard matching and exact matching hostnames), precedence must
                  be given to rules from the HTTPRoute with the largest number of:


                  * Characters in a matching non-wildcard hostname.
                  * Characters in a matching hostname.


                  If ties exist across multiple Routes, the matching precedence rules for
                  HTTPRouteMatches takes over.


                  Support: Core
                items:
                  description: |-
                    Hostname is the fully qualified domain name of a network host. This matches
                    the RFC 1123 definition of a hostname with 2 notable exceptions:


                     1. IPs are not allowed.
                     2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                        label must appear by itself as the first label.


                    Hostname can be "precise" which is a domain name without the terminating
                    dot of a network host (e.g. "foo.example.com") or "wildcard", which is a
                    domain name prefixed with a single wildcard label (e.g. `*.example.com`).


                    Note that as per RFC1035 and RFC1123, a *label* must consist of lower case
                    alphanumeric characters or '-', and must start and end with an alphanumeric
                    character. No other punctuation is allowed.
                  maxLength: 253
                  minLength: 1
                  pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                maxItems: 16
                type: array
              parentRefs:
                description: |+
                  ParentRefs references the resources (usually Gateways) that a Route wants
                  to be attached to. Note that the referenced parent resource needs to
                  allow this for the attachment to be complete. For Gateways, that means
                  the Gateway needs to allow attachment from Routes of this kind and
                  namespace. For Services, that means the Service must either be in the same
                  namespace for a "producer" route, or the mesh implementation must support
                  and allow "consumer" routes for the referenced Service. ReferenceGrant is
                  not applicable for governing ParentRefs to Services - it is not possible to
                  create a "producer" route for a Service in a different namespace from the
                  Route.


                  There are two kinds of parent resources with "Core" support:


                  * Gateway (Gateway conformance profile)
                  * Service (Mesh conformance profile, ClusterIP Services only)


                  This API may be extended in the future to support additional kinds of parent
                  resources.


                  ParentRefs must be _distinct_. This means either that:


                  * They select different objects.  If this is the case, then parentRef
                    entries are distinct. In terms of fields, this means that the
                    multi-part key defined by `group`, `kind`, `namespace`, and `name` must
                    be unique across all parentRef entries in the Route.
                  * They do not select different objects, but for each optional field used,
                    each ParentRef that selects the same object must set the same set of
                    optional fields to different values. If one ParentRef sets a
                    combination of optional fields, all must set the same combination.


                  Some examples:


                  * If one ParentRef sets `sectionName`, all ParentRefs referencing the
                    same object must also set `sectionName`.
                  * If one ParentRef sets `port`, all ParentRefs referencing the same
                    object must also set `port`.
                  * If one ParentRef sets `sectionName` and `port`, all ParentRefs
                    referencing the same object must also set `sectionName` and `port`.


                  It is possible to separately reference multiple distinct objects that may
                  be collapsed by an implementation. For example, some implementations may
                  choose to merge compatible Gateway Listeners together. If that is the
                  case, the list of routes attached to those resources should also be
                  merged.


                  Note that for ParentRefs that cross namespace boundaries, there are specific
                  rules. Cross-namespace references are only valid if they are explicitly
                  allowed by something in the namespace they are referring to. For example,
                  Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                  generic way to enable other kinds of cross-namespace reference.



                  ParentRefs from a Route to a Service in the same namespace are "producer"
                  routes, which apply default routing rules to inbound connections from
                  any namespace to the Service.


                  ParentRefs from a Route to a Service in a different namespace are
                  "consumer" routes, and these routing rules are only applied to outbound
                  connections originating from the same namespace as the Route, for which
                  the intended destination of the connections are a Service targeted as a
                  ParentRef of the Route.






                items:
                  description: |-
                    ParentReference identifies an API object (usually a Gateway) that can be considered
                    a parent of this resource (usually a route). There are two kinds of parent resources
                    with "Core" support:


                    * Gateway (Gateway conformance profile)
                    * Service (Mesh conformance profile, ClusterIP Services only)


                    This API may be extended in the future to support additional kinds of parent
                    resources.


                    The API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid.
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: |-
                        Group is the group of the referent.
                        When unspecified, "gateway.networking.k8s.io" is inferred.
                        To set the core API group (such as for a "Service" kind referent),
                        Group must be explicitly set to "" (empty string).


                        Support: Core
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: |-
                        Kind is kind of the referent.


                        There are two kinds of parent resources with "Core" support:


                        * Gateway (Gateway conformance profile)
                        * Service (Mesh conformance profile, ClusterIP Services only)


                        Support for other resources is Implementation-Specific.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: |-
                        Name is the name of the referent.


                        Support: Core
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referent. When unspecified, this refers
                        to the local namespace of the Route.


                        Note that there are specific rules for ParentRefs which cross namespace
                        boundaries. Cross-namespace references are only valid if they are explicitly
                        allowed by something in the namespace they are referring to. For example:
                        Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                        generic way to enable any other kind of cross-namespace reference.



                        ParentRefs from a Route to a Service in the same namespace are "producer"
                        routes, which apply default routing rules to inbound connections from
                        any namespace to the Service.


                        ParentRefs from a Route to a Service in a different namespace are
                        "consumer" routes, and these routing rules are only applied to outbound
                        connections originating from the same namespace as the Route, for which
                        the intended destination of the connections are a Service targeted as a
                        ParentRef of the Route.



                        Support: Core
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: |-
                        Port is the network port this Route targets. It can be interpreted
                        differently based on the type of parent resource.


                        When the parent resource is a Gateway, this targets all listeners
                        listening on the specified port that also support this kind of Route(and
                        select this Route). It's not recommended to set `Port` unless the
                        networking behaviors specified in a Route must apply to a specific port
                        as opposed to a listener(s) whose port(s) may be changed. When both Port
                        and SectionName are specified, the name and port of the selected listener
                        must match both specified values.



                        When the parent resource is a Service, this targets a specific port in the
                        Service spec. When both Port (experimental) and SectionName are specified,
                        the name and port of the selected port must match both specified values.



                        Implementations MAY choose to support other parent resources.
                        Implementations supporting other types of parent resources MUST clearly
                        document how/if Port is interpreted.


                        For the purpose of status, an attachment is considered successful as
                        long as the parent resource accepts it partially. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route,
                        the Route MUST be considered detached from the Gateway.


                        Support: Extended
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: |-
                        SectionName is the name of a section within the target resource. In the
                        following resources, SectionName is interpreted as the following:


                        * Gateway: Listener name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.
                        * Service: Port name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.


                        Implementations MAY choose to support attaching Routes to other resources.
                        If that is the case, they MUST clearly document how SectionName is
                        interpreted.


                        When unspecified (empty string), this will reference the entire resource.
                        For the purpose of status, an attachment is considered successful if at
                        least one section in the parent resource accepts it. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                        the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route, the
                        Route MUST be considered detached from the Gateway.


                        Support: Core
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
                x-kubernetes-validations:
                - message: sectionName or port must be specified when parentRefs includes
                    2 or more references to the same parent
                  rule: 'self.all(p1, self.all(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '''') && (!has(p2.__namespace__) || p2.__namespace__
                    == '''')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__)) ? ((!has(p1.sectionName)
                    || p1.sectionName == '''') == (!has(p2.sectionName) || p2.sectionName
                    == '''') && (!has(p1.port) || p1.port == 0) == (!has(p2.port)
                    || p2.port == 0)): true))'
                - message: sectionName or port must be unique when parentRefs includes
                    2 or more references to the same parent
                  rule: self.all(p1, self.exists_one(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__
                    == '')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__ )) && (((!has(p1.sectionName)
                    || p1.sectionName == '') && (!has(p2.sectionName) || p2.sectionName
                    == '')) || ( has(p1.sectionName) && has(p2.sectionName) && p1.sectionName
                    == p2.sectionName)) && (((!has(p1.port) || p1.port == 0) && (!has(p2.port)
                    || p2.port == 0)) || (has(p1.port) && has(p2.port) && p1.port
                    == p2.port))))
              rules:
                default:
                - matches:
                  - path:
                      type: PathPrefix
                      value: /
                description: Rules are a list of HTTP matchers, filters and actions.
                items:
                  description: |-
                    HTTPRouteRule defines semantics for matching an HTTP request based on
                    conditions (matches), processing it (filters), and forwarding the request to
                    an API object (backendRefs).
                  properties:
                    backendRefs:
                      description: |-
                        BackendRefs defines the backend(s) where matching requests should be
                        sent.


                        Failure behavior here depends on how many BackendRefs are specified and
                        how many are invalid.


                        If *all* entries in BackendRefs are invalid, and there are also no filters
                        specified in this route rule, *all* traffic which matches this rule MUST
                        receive a 500 status code.


                        See the HTTPBackendRef definition for the rules about what makes a single
                        HTTPBackendRef invalid.


                        When a HTTPBackendRef is invalid, 500 status codes MUST be returned for
                        requests that would have otherwise been routed to an invalid backend. If
                        multiple backends are specified, and some are invalid, the proportion of
                        requests that would otherwise have been routed to an invalid backend
                        MUST receive a 500 status code.


                        For example, if two backends are specified with equal weights, and one is
                        invalid, 50 percent of traffic must receive a 500. Implementations may
                        choose how that 50 percent is determined.


                        Support: Core for Kubernetes Service


                        Support: Extended for Kubernetes ServiceImport


                        Support: Implementation-specific for any other resource


                        Support for weight: Core
                      items:
                        description: |-
                          HTTPBackendRef defines how a HTTPRoute forwards a HTTP request.


                          Note that when a namespace different than the local namespace is specified, a
                          ReferenceGrant object is required in the referent namespace to allow that
                          namespace's owner to accept the reference. See the ReferenceGrant
                          documentation for details.


                          <gateway:experimental:description>


                          When the BackendRef points to a Kubernetes Service, implementations SHOULD
                          honor the appProtocol field if it is set for the target Service Port.


                          Implementations supporting appProtocol SHOULD recognize the Kubernetes
                          Standard Application Protocols defined in KEP-3726.


                          If a Service appProtocol isn't specified, an implementation MAY infer the
                          backend protocol through its own means. Implementations MAY infer the
                          protocol from the Route type referring to the backend Service.


                          If a Route is not able to send traffic to the backend using the specified
                          protocol then the backend is considered invalid. Implementations MUST set the
                          "ResolvedRefs" condition to "False" with the "UnsupportedProtocol" reason.


                          </gateway:experimental:description>
                        properties:
                          filters:
                            description: |-
                              Filters defined at this level should be executed if and only if the
                              request is being forwarded to the backend defined here.


                              Support: Implementation-specific (For broader support of filters, use the
                              Filters field in HTTPRouteRule.)
                            items:
                              description: |-
                                HTTPRouteFilter defines processing steps that must be completed during the
                                request or response lifecycle. HTTPRouteFilters are meant as an extension
                                point to express processing that may be done in Gateway implementations. Some
                                examples include request or response modification, implementing
                                authentication strategies, rate-limiting, and traffic shaping. API
                                guarantee/conformance is defined based on the type of the filter.
                              properties:
                                extensionRef:
                                  description: |-
                                    ExtensionRef is an optional, implementation-specific extension to the
                                    "filter" behavior.  For example, resource "myroutefilter" in group
                                    "networking.example.net"). ExtensionRef MUST NOT be used for core and
                                    extended filters.


                                    This filter can be used multiple times within the same rule.


                                    Support: Implementation-specific
                                  properties:
                                    group:
                                      description: |-
                                        Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                        When unspecified or empty string, core API group is inferred.
                                      maxLength: 253
                                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    kind:
                                      description: Kind is kind of the referent. For
                                        example "HTTPRoute" or "Service".
                                      maxLength: 63
                                      minLength: 1
                                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                      type: string
                                    name:
                                      description: Name is the name of the referent.
                                      maxLength: 253
                                      minLength: 1
                                      type: string
                                  required:
                                  - group
                                  - kind
                                  - name
                                  type: object
                                requestHeaderModifier:
                                  description: |-
                                    RequestHeaderModifier defines a schema for a filter that modifies request
                                    headers.


                                    Support: Core
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz


                                        Config:
                                          remove: ["my-header1", "my-header3"]


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                requestMirror:
                                  description: |-
                                    RequestMirror defines a schema for a filter that mirrors requests.
                                    Requests are sent to the specified destination, but responses from
                                    that destination are ignored.


                                    This filter can be used multiple times within the same rule. Note that
                                    not all implementations will be able to support mirroring to multiple
                                    backends.


                                    Support: Extended
                                  properties:
                                    backendRef:
                                      description: |-
                                        BackendRef references a resource where mirrored requests are sent.


                                        Mirrored requests must be sent only to a single destination endpoint
                                        within this BackendRef, irrespective of how many endpoints are present
                                        within this BackendRef.


                                        If the referent cannot be found, this BackendRef is invalid and must be
                                        dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                        condition on the Route status is set to `status: False` and not configure
                                        this backend in the underlying implementation.


                                        If there is a cross-namespace reference to an *existing* object
                                        that is not allowed by a ReferenceGrant, the controller must ensure the
                                        "ResolvedRefs"  condition on the Route is set to `status: False`,
                                        with the "RefNotPermitted" reason and not configure this backend in the
                                        underlying implementation.


                                        In either error case, the Message of the `ResolvedRefs` Condition
                                        should be used to provide more detail about the problem.


                                        Support: Extended for Kubernetes Service


                                        Support: Implementation-specific for any other resource
                                      properties:
                                        group:
                                          default: ""
                                          description: |-
                                            Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                            When unspecified or empty string, core API group is inferred.
                                          maxLength: 253
                                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                          type: string
                                        kind:
                                          default: Service
                                          description: |-
                                            Kind is the Kubernetes resource kind of the referent. For example
                                            "Service".


                                            Defaults to "Service" when not specified.


                                            ExternalName services can refer to CNAME DNS records that may live
                                            outside of the cluster and as such are difficult to reason about in
                                            terms of conformance. They also may not be safe to forward to (see
                                            CVE-2021-25740 for more information). Implementations SHOULD NOT
                                            support ExternalName Services.


                                            Support: Core (Services with a type other than ExternalName)


                                            Support: Implementation-specific (Services with type ExternalName)
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                          type: string
                                        name:
                                          description: Name is the name of the referent.
                                          maxLength: 253
                                          minLength: 1
                                          type: string
                                        namespace:
                                          description: |-
                                            Namespace is the namespace of the backend. When unspecified, the local
                                            namespace is inferred.


                                            Note that when a namespace different than the local namespace is specified,
                                            a ReferenceGrant object is required in the referent namespace to allow that
                                            namespace's owner to accept the reference. See the ReferenceGrant
                                            documentation for details.


                                            Support: Core
                                          maxLength: 63
                                          minLength: 1
                                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                          type: string
                                        port:
                                          description: |-
                                            Port specifies the destination port number to use for this resource.
                                            Port is required when the referent is a Kubernetes Service. In this
                                            case, the port number is the service port number, not the target port.
                                            For other resources, destination port might be derived from the referent
                                            resource or this field.
                                          format: int32
                                          maximum: 65535
                                          minimum: 1
                                          type: integer
                                      required:
                                      - name
                                      type: object
                                      x-kubernetes-validations:
                                      - message: Must have port for Service reference
                                        rule: '(size(self.group) == 0 && self.kind
                                          == ''Service'') ? has(self.port) : true'
                                  required:
                                  - backendRef
                                  type: object
                                requestRedirect:
                                  description: |-
                                    RequestRedirect defines a schema for a filter that responds to the
                                    request with an HTTP redirection.


                                    Support: Core
                                  properties:
                                    hostname:
                                      description: |-
                                        Hostname is the hostname to be used in the value of the `Location`
                                        header in the response.
                                        When empty, the hostname in the `Host` header of the request is used.


                                        Support: Core
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: |-
                                        Path defines parameters used to modify the path of the incoming request.
                                        The modified path is then used to construct the `Location` header. When
                                        empty, the request path is used as-is.


                                        Support: Extended
                                      properties:
                                        replaceFullPath:
                                          description: |-
                                            ReplaceFullPath specifies the value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: |-
                                            ReplacePrefixMatch specifies the value with which to replace the prefix
                                            match of a request during a rewrite or redirect. For example, a request
                                            to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                            of "/xyz" would be modified to "/xyz/bar".


                                            Note that this matches the behavior of the PathPrefix match type. This
                                            matches full path elements. A path element refers to the list of labels
                                            in the path split by the `/` separator. When specified, a trailing `/` is
                                            ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                            match the prefix `/abc`, but the path `/abcd` would not.


                                            ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                            Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                            the implementation setting the Accepted Condition for the Route to `status: False`.


                                            Request Path | Prefix Match | Replace Prefix | Modified Path
                                            -------------|--------------|----------------|----------
                                            /foo/bar     | /foo         | /xyz           | /xyz/bar
                                            /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                            /foo         | /foo         | /xyz           | /xyz
                                            /foo/        | /foo         | /xyz           | /xyz/
                                            /foo/bar     | /foo         | <empty string> | /bar
                                            /foo/        | /foo         | <empty string> | /
                                            /foo         | /foo         | <empty string> | /
                                            /foo/        | /foo         | /              | /
                                            /foo         | /foo         | /              | /
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: |-
                                            Type defines the type of path modifier. Additional types may be
                                            added in a future release of the API.


                                            Note that values may be added to this enum, implementations
                                            must ensure that unknown values will not cause a crash.


                                            Unknown values here must result in the implementation setting the
                                            Accepted Condition for the Route to `status: False`, with a
                                            Reason of `UnsupportedValue`.
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                      x-kubernetes-validations:
                                      - message: replaceFullPath must be specified
                                          when type is set to 'ReplaceFullPath'
                                        rule: 'self.type == ''ReplaceFullPath'' ?
                                          has(self.replaceFullPath) : true'
                                      - message: type must be 'ReplaceFullPath' when
                                          replaceFullPath is set
                                        rule: 'has(self.replaceFullPath) ? self.type
                                          == ''ReplaceFullPath'' : true'
                                      - message: replacePrefixMatch must be specified
                                          when type is set to 'ReplacePrefixMatch'
                                        rule: 'self.type == ''ReplacePrefixMatch''
                                          ? has(self.replacePrefixMatch) : true'
                                      - message: type must be 'ReplacePrefixMatch'
                                          when replacePrefixMatch is set
                                        rule: 'has(self.replacePrefixMatch) ? self.type
                                          == ''ReplacePrefixMatch'' : true'
                                    port:
                                      description: |-
                                        Port is the port to be used in the value of the `Location`
                                        header in the response.


                                        If no port is specified, the redirect port MUST be derived using the
                                        following rules:


                                        * If redirect scheme is not-empty, the redirect port MUST be the well-known
                                          port associated with the redirect scheme. Specifically "http" to port 80
                                          and "https" to port 443. If the redirect scheme does not have a
                                          well-known port, the listener port of the Gateway SHOULD be used.
                                        * If redirect scheme is empty, the redirect port MUST be the Gateway
                                          Listener port.


                                        Implementations SHOULD NOT add the port number in the 'Location'
                                        header in the following cases:


                                        * A Location header that will use HTTP (whether that is determined via
                                          the Listener protocol or the Scheme field) _and_ use port 80.
                                        * A Location header that will use HTTPS (whether that is determined via
                                          the Listener protocol or the Scheme field) _and_ use port 443.


                                        Support: Extended
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                    scheme:
                                      description: |-
                                        Scheme is the scheme to be used in the value of the `Location` header in
                                        the response. When empty, the scheme of the request is used.


                                        Scheme redirects can affect the port of the redirect, for more information,
                                        refer to the documentation for the port field of this filter.


                                        Note that values may be added to this enum, implementations
                                        must ensure that unknown values will not cause a crash.


                                        Unknown values here must result in the implementation setting the
                                        Accepted Condition for the Route to `status: False`, with a
                                        Reason of `UnsupportedValue`.


                                        Support: Extended
                                      enum:
                                      - http
                                      - https
                                      type: string
                                    statusCode:
                                      default: 302
                                      description: |-
                                        StatusCode is the HTTP status code to be used in response.


                                        Note that values may be added to this enum, implementations
                                        must ensure that unknown values will not cause a crash.


                                        Unknown values here must result in the implementation setting the
                                        Accepted Condition for the Route to `status: False`, with a
                                        Reason of `UnsupportedValue`.


                                        Support: Core
                                      enum:
                                      - 301
                                      - 302
                                      type: integer
                                  type: object
                                responseHeaderModifier:
                                  description: |-
                                    ResponseHeaderModifier defines a schema for a filter that modifies response
                                    headers.


                                    Support: Extended
                                  properties:
                                    add:
                                      description: |-
                                        Add adds the given header(s) (name, value) to the request
                                        before the action. It appends to any existing values associated
                                        with the header name.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          add:
                                          - name: "my-header"
                                            value: "bar,baz"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: foo,bar,baz
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: |-
                                        Remove the given header(s) from the HTTP request before the action. The
                                        value of Remove is a list of HTTP header names. Note that the header
                                        names are case-insensitive (see
                                        https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header1: foo
                                          my-header2: bar
                                          my-header3: baz


                                        Config:
                                          remove: ["my-header1", "my-header3"]


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header2: bar
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-type: set
                                    set:
                                      description: |-
                                        Set overwrites the request with the given header (name, value)
                                        before the action.


                                        Input:
                                          GET /foo HTTP/1.1
                                          my-header: foo


                                        Config:
                                          set:
                                          - name: "my-header"
                                            value: "bar"


                                        Output:
                                          GET /foo HTTP/1.1
                                          my-header: bar
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: |-
                                              Name is the name of the HTTP Header to be matched. Name matching MUST be
                                              case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                              If multiple entries specify equivalent header names, the first entry with
                                              an equivalent name MUST be considered for a match. Subsequent entries
                                              with an equivalent header name MUST be ignored. Due to the
                                              case-insensitivity of header names, "foo" and "Foo" are considered
                                              equivalent.
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                type:
                                  description: |-
                                    Type identifies the type of filter to apply. As with other API fields,
                                    types are classified into three conformance levels:


                                    - Core: Filter types and their corresponding configuration defined by
                                      "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                      implementations must support core filters.


                                    - Extended: Filter types and their corresponding configuration defined by
                                      "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                      are encouraged to support extended filters.


                                    - Implementation-specific: Filters that are defined and supported by
                                      specific vendors.
                                      In the future, filters showing convergence in behavior across multiple
                                      implementations will be considered for inclusion in extended or core
                                      conformance levels. Filter-specific configuration for such filters
                                      is specified using the ExtensionRef field. `Type` should be set to
                                      "ExtensionRef" for custom filters.


                                    Implementers are encouraged to define custom implementation types to
                                    extend the core API with implementation-specific behavior.


                                    If a reference to a custom filter type cannot be resolved, the filter
                                    MUST NOT be skipped. Instead, requests that would have been processed by
                                    that filter MUST receive a HTTP error response.


                                    Note that values may be added to this enum, implementations
                                    must ensure that unknown values will not cause a crash.


                                    Unknown values here must result in the implementation setting the
                                    Accepted Condition for the Route to `status: False`, with a
                                    Reason of `UnsupportedValue`.
                                  enum:
                                  - RequestHeaderModifier
                                  - ResponseHeaderModifier
                                  - RequestMirror
                                  - RequestRedirect
                                  - URLRewrite
                                  - ExtensionRef
                                  type: string
                                urlRewrite:
                                  description: |-
                                    URLRewrite defines a schema for a filter that modifies a request during forwarding.


                                    Support: Extended
                                  properties:
                                    hostname:
                                      description: |-
                                        Hostname is the value to be used to replace the Host header value during
                                        forwarding.


                                        Support: Extended
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: |-
                                        Path defines a path rewrite.


                                        Support: Extended
                                      properties:
                                        replaceFullPath:
                                          description: |-
                                            ReplaceFullPath specifies the value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: |-
                                            ReplacePrefixMatch specifies the value with which to replace the prefix
                                            match of a request during a rewrite or redirect. For example, a request
                                            to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                            of "/xyz" would be modified to "/xyz/bar".


                                            Note that this matches the behavior of the PathPrefix match type. This
                                            matches full path elements. A path element refers to the list of labels
                                            in the path split by the `/` separator. When specified, a trailing `/` is
                                            ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                            match the prefix `/abc`, but the path `/abcd` would not.


                                            ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                            Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                            the implementation setting the Accepted Condition for the Route to `status: False`.


                                            Request Path | Prefix Match | Replace Prefix | Modified Path
                                            -------------|--------------|----------------|----------
                                            /foo/bar     | /foo         | /xyz           | /xyz/bar
                                            /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                            /foo         | /foo         | /xyz           | /xyz
                                            /foo/        | /foo         | /xyz           | /xyz/
                                            /foo/bar     | /foo         | <empty string> | /bar
                                            /foo/        | /foo         | <empty string> | /
                                            /foo         | /foo         | <empty string> | /
                                            /foo/        | /foo         | /              | /
                                            /foo         | /foo         | /              | /
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: |-
                                            Type defines the type of path modifier. Additional types may be
                                            added in a future release of the API.


                                            Note that values may be added to this enum, implementations
                                            must ensure that unknown values will not cause a crash.


                                            Unknown values here must result in the implementation setting the
                                            Accepted Condition for the Route to `status: False`, with a
                                            Reason of `UnsupportedValue`.
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                      x-kubernetes-validations:
                                      - message: replaceFullPath must be specified
                                          when type is set to 'ReplaceFullPath'
                                        rule: 'self.type == ''ReplaceFullPath'' ?
                                          has(self.replaceFullPath) : true'
                                      - message: type must be 'ReplaceFullPath' when
                                          replaceFullPath is set
                                        rule: 'has(self.replaceFullPath) ? self.type
                                          == ''ReplaceFullPath'' : true'
                                      - message: replacePrefixMatch must be specified
                                          when type is set to 'ReplacePrefixMatch'
                                        rule: 'self.type == ''ReplacePrefixMatch''
                                          ? has(self.replacePrefixMatch) : true'
                                      - message: type must be 'ReplacePrefixMatch'
                                          when replacePrefixMatch is set
                                        rule: 'has(self.replacePrefixMatch) ? self.type
                                          == ''ReplacePrefixMatch'' : true'
                                  type: object
                              required:
                              - type
                              type: object
                              x-kubernetes-validations:
                              - message: filter.requestHeaderModifier must be nil
                                  if the filter.type is not RequestHeaderModifier
                                rule: '!(has(self.requestHeaderModifier) && self.type
                                  != ''RequestHeaderModifier'')'
                              - message: filter.requestHeaderModifier must be specified
                                  for RequestHeaderModifier filter.type
                                rule: '!(!has(self.requestHeaderModifier) && self.type
                                  == ''RequestHeaderModifier'')'
                              - message: filter.responseHeaderModifier must be nil
                                  if the filter.type is not ResponseHeaderModifier
                                rule: '!(has(self.responseHeaderModifier) && self.type
                                  != ''ResponseHeaderModifier'')'
                              - message: filter.responseHeaderModifier must be specified
                                  for ResponseHeaderModifier filter.type
                                rule: '!(!has(self.responseHeaderModifier) && self.type
                                  == ''ResponseHeaderModifier'')'
                              - message: filter.requestMirror must be nil if the filter.type
                                  is not RequestMirror
                                rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                              - message: filter.requestMirror must be specified for
                                  RequestMirror filter.type
                                rule: '!(!has(self.requestMirror) && self.type ==
                                  ''RequestMirror'')'
                              - message: filter.requestRedirect must be nil if the
                                  filter.type is not RequestRedirect
                                rule: '!(has(self.requestRedirect) && self.type !=
                                  ''RequestRedirect'')'
                              - message: filter.requestRedirect must be specified
                                  for RequestRedirect filter.type
                                rule: '!(!has(self.requestRedirect) && self.type ==
                                  ''RequestRedirect'')'
                              - message: filter.urlRewrite must be nil if the filter.type
                                  is not URLRewrite
                                rule: '!(has(self.urlRewrite) && self.type != ''URLRewrite'')'
                              - message: filter.urlRewrite must be specified for URLRewrite
                                  filter.type
                                rule: '!(!has(self.urlRewrite) && self.type == ''URLRewrite'')'
                              - message: filter.extensionRef must be nil if the filter.type
                                  is not ExtensionRef
                                rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                              - message: filter.extensionRef must be specified for
                                  ExtensionRef filter.type
                                rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                            maxItems: 16
                            type: array
                            x-kubernetes-validations:
                            - message: May specify either httpRouteFilterRequestRedirect
                                or httpRouteFilterRequestRewrite, but not both
                              rule: '!(self.exists(f, f.type == ''RequestRedirect'')
                                && self.exists(f, f.type == ''URLRewrite''))'
                            - message: May specify either httpRouteFilterRequestRedirect
                                or httpRouteFilterRequestRewrite, but not both
                              rule: '!(self.exists(f, f.type == ''RequestRedirect'')
                                && self.exists(f, f.type == ''URLRewrite''))'
                            - message: RequestHeaderModifier filter cannot be repeated
                              rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                                <= 1
                            - message: ResponseHeaderModifier filter cannot be repeated
                              rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                                <= 1
                            - message: RequestRedirect filter cannot be repeated
                              rule: self.filter(f, f.type == 'RequestRedirect').size()
                                <= 1
                            - message: URLRewrite filter cannot be repeated
                              rule: self.filter(f, f.type == 'URLRewrite').size()
                                <= 1
                          group:
                            default: ""
                            description: |-
                              Group is the group of the referent. For example, "gateway.networking.k8s.io".
                              When unspecified or empty string, core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: |-
                              Kind is the Kubernetes resource kind of the referent. For example
                              "Service".


                              Defaults to "Service" when not specified.


                              ExternalName services can refer to CNAME DNS records that may live
                              outside of the cluster and as such are difficult to reason about in
                              terms of conformance. They also may not be safe to forward to (see
                              CVE-2021-25740 for more information). Implementations SHOULD NOT
                              support ExternalName Services.


                              Support: Core (Services with a type other than ExternalName)


                              Support: Implementation-specific (Services with type ExternalName)
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: |-
                              Namespace is the namespace of the backend. When unspecified, the local
                              namespace is inferred.


                              Note that when a namespace different than the local namespace is specified,
                              a ReferenceGrant object is required in the referent namespace to allow that
                              namespace's owner to accept the reference. See the ReferenceGrant
                              documentation for details.


                              Support: Core
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: |-
                              Port specifies the destination port number to use for this resource.
                              Port is required when the referent is a Kubernetes Service. In this
                              case, the port number is the service port number, not the target port.
                              For other resources, destination port might be derived from the referent
                              resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: |-
                              Weight specifies the proportion of requests forwarded to the referenced
                              backend. This is computed as weight/(sum of all weights in this
                              BackendRefs list). For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision an
                              implementation supports. Weight is not a percentage and the sum of
                              weights does not need to equal 100.


                              If only one backend is specified and it has a weight greater than 0, 100%
                              of the traffic is forwarded to that backend. If weight is set to 0, no
                              traffic should be forwarded for this entry. If unspecified, weight
                              defaults to 1.


                              Support for this field varies based on the context where used.
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                        x-kubernetes-validations:
                        - message: Must have port for Service reference
                          rule: '(size(self.group) == 0 && self.kind == ''Service'')
                            ? has(self.port) : true'
                      maxItems: 16
                      type: array
                    filters:
                      description: |-
                        Filters define the filters that are applied to requests that match
                        this rule.


                        Wherever possible, implementations SHOULD implement filters in the order
                        they are specified.


                        Implementations MAY choose to implement this ordering strictly, rejecting
                        any combination or order of filters that can not be supported. If implementations
                        choose a strict interpretation of filter ordering, they MUST clearly document
                        that behavior.


                        To reject an invalid combination or order of filters, implementations SHOULD
                        consider the Route Rules with this configuration invalid. If all Route Rules
                        in a Route are invalid, the entire Route would be considered invalid. If only
                        a portion of Route Rules are invalid, implementations MUST set the
                        "PartiallyInvalid" condition for the Route.


                        Conformance-levels at this level are defined based on the type of filter:


                        - ALL core filters MUST be supported by all implementations.
                        - Implementers are encouraged to support extended filters.
                        - Implementation-specific custom filters have no API guarantees across
                          implementations.


                        Specifying the same filter multiple times is not supported unless explicitly
                        indicated in the filter.


                        All filters are expected to be compatible with each other except for the
                        URLRewrite and RequestRedirect filters, which may not be combined. If an
                        implementation can not support other combinations of filters, they must clearly
                        document that limitation. In cases where incompatible or unsupported
                        filters are specified and cause the `Accepted` condition to be set to status
                        `False`, implementations may use the `IncompatibleFilters` reason to specify
                        this configuration error.


                        Support: Core
                      items:
                        description: |-
                          HTTPRouteFilter defines processing steps that must be completed during the
                          request or response lifecycle. HTTPRouteFilters are meant as an extension
                          point to express processing that may be done in Gateway implementations. Some
                          examples include request or response modification, implementing
                          authentication strategies, rate-limiting, and traffic shaping. API
                          guarantee/conformance is defined based on the type of the filter.
                        properties:
                          extensionRef:
                            description: |-
                              ExtensionRef is an optional, implementation-specific extension to the
                              "filter" behavior.  For example, resource "myroutefilter" in group
                              "networking.example.net"). ExtensionRef MUST NOT be used for core and
                              extended filters.


                              This filter can be used multiple times within the same rule.


                              Support: Implementation-specific
                            properties:
                              group:
                                description: |-
                                  Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                  When unspecified or empty string, core API group is inferred.
                                maxLength: 253
                                pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              kind:
                                description: Kind is kind of the referent. For example
                                  "HTTPRoute" or "Service".
                                maxLength: 63
                                minLength: 1
                                pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                type: string
                              name:
                                description: Name is the name of the referent.
                                maxLength: 253
                                minLength: 1
                                type: string
                            required:
                            - group
                            - kind
                            - name
                            type: object
                          requestHeaderModifier:
                            description: |-
                              RequestHeaderModifier defines a schema for a filter that modifies request
                              headers.


                              Support: Core
                            properties:
                              add:
                                description: |-
                                  Add adds the given header(s) (name, value) to the request
                                  before the action. It appends to any existing values associated
                                  with the header name.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    add:
                                    - name: "my-header"
                                      value: "bar,baz"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: foo,bar,baz
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: |-
                                  Remove the given header(s) from the HTTP request before the action. The
                                  value of Remove is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see
                                  https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header1: foo
                                    my-header2: bar
                                    my-header3: baz


                                  Config:
                                    remove: ["my-header1", "my-header3"]


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header2: bar
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                                x-kubernetes-list-type: set
                              set:
                                description: |-
                                  Set overwrites the request with the given header (name, value)
                                  before the action.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    set:
                                    - name: "my-header"
                                      value: "bar"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: bar
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          requestMirror:
                            description: |-
                              RequestMirror defines a schema for a filter that mirrors requests.
                              Requests are sent to the specified destination, but responses from
                              that destination are ignored.


                              This filter can be used multiple times within the same rule. Note that
                              not all implementations will be able to support mirroring to multiple
                              backends.


                              Support: Extended
                            properties:
                              backendRef:
                                description: |-
                                  BackendRef references a resource where mirrored requests are sent.


                                  Mirrored requests must be sent only to a single destination endpoint
                                  within this BackendRef, irrespective of how many endpoints are present
                                  within this BackendRef.


                                  If the referent cannot be found, this BackendRef is invalid and must be
                                  dropped from the Gateway. The controller must ensure the "ResolvedRefs"
                                  condition on the Route status is set to `status: False` and not configure
                                  this backend in the underlying implementation.


                                  If there is a cross-namespace reference to an *existing* object
                                  that is not allowed by a ReferenceGrant, the controller must ensure the
                                  "ResolvedRefs"  condition on the Route is set to `status: False`,
                                  with the "RefNotPermitted" reason and not configure this backend in the
                                  underlying implementation.


                                  In either error case, the Message of the `ResolvedRefs` Condition
                                  should be used to provide more detail about the problem.


                                  Support: Extended for Kubernetes Service


                                  Support: Implementation-specific for any other resource
                                properties:
                                  group:
                                    default: ""
                                    description: |-
                                      Group is the group of the referent. For example, "gateway.networking.k8s.io".
                                      When unspecified or empty string, core API group is inferred.
                                    maxLength: 253
                                    pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                    type: string
                                  kind:
                                    default: Service
                                    description: |-
                                      Kind is the Kubernetes resource kind of the referent. For example
                                      "Service".


                                      Defaults to "Service" when not specified.


                                      ExternalName services can refer to CNAME DNS records that may live
                                      outside of the cluster and as such are difficult to reason about in
                                      terms of conformance. They also may not be safe to forward to (see
                                      CVE-2021-25740 for more information). Implementations SHOULD NOT
                                      support ExternalName Services.


                                      Support: Core (Services with a type other than ExternalName)


                                      Support: Implementation-specific (Services with type ExternalName)
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                                    type: string
                                  name:
                                    description: Name is the name of the referent.
                                    maxLength: 253
                                    minLength: 1
                                    type: string
                                  namespace:
                                    description: |-
                                      Namespace is the namespace of the backend. When unspecified, the local
                                      namespace is inferred.


                                      Note that when a namespace different than the local namespace is specified,
                                      a ReferenceGrant object is required in the referent namespace to allow that
                                      namespace's owner to accept the reference. See the ReferenceGrant
                                      documentation for details.


                                      Support: Core
                                    maxLength: 63
                                    minLength: 1
                                    pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                                    type: string
                                  port:
                                    description: |-
                                      Port specifies the destination port number to use for this resource.
                                      Port is required when the referent is a Kubernetes Service. In this
                                      case, the port number is the service port number, not the target port.
                                      For other resources, destination port might be derived from the referent
                                      resource or this field.
                                    format: int32
                                    maximum: 65535
                                    minimum: 1
                                    type: integer
                                required:
                                - name
                                type: object
                                x-kubernetes-validations:
                                - message: Must have port for Service reference
                                  rule: '(size(self.group) == 0 && self.kind == ''Service'')
                                    ? has(self.port) : true'
                            required:
                            - backendRef
                            type: object
                          requestRedirect:
                            description: |-
                              RequestRedirect defines a schema for a filter that responds to the
                              request with an HTTP redirection.


                              Support: Core
                            properties:
                              hostname:
                                description: |-
                                  Hostname is the hostname to be used in the value of the `Location`
                                  header in the response.
                                  When empty, the hostname in the `Host` header of the request is used.


                                  Support: Core
                                maxLength: 253
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              path:
                                description: |-
                                  Path defines parameters used to modify the path of the incoming request.
                                  The modified path is then used to construct the `Location` header. When
                                  empty, the request path is used as-is.


                                  Support: Extended
                                properties:
                                  replaceFullPath:
                                    description: |-
                                      ReplaceFullPath specifies the value with which to replace the full path
                                      of a request during a rewrite or redirect.
                                    maxLength: 1024
                                    type: string
                                  replacePrefixMatch:
                                    description: |-
                                      ReplacePrefixMatch specifies the value with which to replace the prefix
                                      match of a request during a rewrite or redirect. For example, a request
                                      to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                      of "/xyz" would be modified to "/xyz/bar".


                                      Note that this matches the behavior of the PathPrefix match type. This
                                      matches full path elements. A path element refers to the list of labels
                                      in the path split by the `/` separator. When specified, a trailing `/` is
                                      ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                      match the prefix `/abc`, but the path `/abcd` would not.


                                      ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                      Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                      the implementation setting the Accepted Condition for the Route to `status: False`.


                                      Request Path | Prefix Match | Replace Prefix | Modified Path
                                      -------------|--------------|----------------|----------
                                      /foo/bar     | /foo         | /xyz           | /xyz/bar
                                      /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                      /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                      /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                      /foo         | /foo         | /xyz           | /xyz
                                      /foo/        | /foo         | /xyz           | /xyz/
                                      /foo/bar     | /foo         | <empty string> | /bar
                                      /foo/        | /foo         | <empty string> | /
                                      /foo         | /foo         | <empty string> | /
                                      /foo/        | /foo         | /              | /
                                      /foo         | /foo         | /              | /
                                    maxLength: 1024
                                    type: string
                                  type:
                                    description: |-
                                      Type defines the type of path modifier. Additional types may be
                                      added in a future release of the API.


                                      Note that values may be added to this enum, implementations
                                      must ensure that unknown values will not cause a crash.


                                      Unknown values here must result in the implementation setting the
                                      Accepted Condition for the Route to `status: False`, with a
                                      Reason of `UnsupportedValue`.
                                    enum:
                                    - ReplaceFullPath
                                    - ReplacePrefixMatch
                                    type: string
                                required:
                                - type
                                type: object
                                x-kubernetes-validations:
                                - message: replaceFullPath must be specified when
                                    type is set to 'ReplaceFullPath'
                                  rule: 'self.type == ''ReplaceFullPath'' ? has(self.replaceFullPath)
                                    : true'
                                - message: type must be 'ReplaceFullPath' when replaceFullPath
                                    is set
                                  rule: 'has(self.replaceFullPath) ? self.type ==
                                    ''ReplaceFullPath'' : true'
                                - message: replacePrefixMatch must be specified when
                                    type is set to 'ReplacePrefixMatch'
                                  rule: 'self.type == ''ReplacePrefixMatch'' ? has(self.replacePrefixMatch)
                                    : true'
                                - message: type must be 'ReplacePrefixMatch' when
                                    replacePrefixMatch is set
                                  rule: 'has(self.replacePrefixMatch) ? self.type
                                    == ''ReplacePrefixMatch'' : true'
                              port:
                                description: |-
                                  Port is the port to be used in the value of the `Location`
                                  header in the response.


                                  If no port is specified, the redirect port MUST be derived using the
                                  following rules:


                                  * If redirect scheme is not-empty, the redirect port MUST be the well-known
                                    port associated with the redirect scheme. Specifically "http" to port 80
                                    and "https" to port 443. If the redirect scheme does not have a
                                    well-known port, the listener port of the Gateway SHOULD be used.
                                  * If redirect scheme is empty, the redirect port MUST be the Gateway
                                    Listener port.


                                  Implementations SHOULD NOT add the port number in the 'Location'
                                  header in the following cases:


                                  * A Location header that will use HTTP (whether that is determined via
                                    the Listener protocol or the Scheme field) _and_ use port 80.
                                  * A Location header that will use HTTPS (whether that is determined via
                                    the Listener protocol or the Scheme field) _and_ use port 443.


                                  Support: Extended
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              scheme:
                                description: |-
                                  Scheme is the scheme to be used in the value of the `Location` header in
                                  the response. When empty, the scheme of the request is used.


                                  Scheme redirects can affect the port of the redirect, for more information,
                                  refer to the documentation for the port field of this filter.


                                  Note that values may be added to this enum, implementations
                                  must ensure that unknown values will not cause a crash.


                                  Unknown values here must result in the implementation setting the
                                  Accepted Condition for the Route to `status: False`, with a
                                  Reason of `UnsupportedValue`.


                                  Support: Extended
                                enum:
                                - http
                                - https
                                type: string
                              statusCode:
                                default: 302
                                description: |-
                                  StatusCode is the HTTP status code to be used in response.


                                  Note that values may be added to this enum, implementations
                                  must ensure that unknown values will not cause a crash.


                                  Unknown values here must result in the implementation setting the
                                  Accepted Condition for the Route to `status: False`, with a
                                  Reason of `UnsupportedValue`.


                                  Support: Core
                                enum:
                                - 301
                                - 302
                                type: integer
                            type: object
                          responseHeaderModifier:
                            description: |-
                              ResponseHeaderModifier defines a schema for a filter that modifies response
                              headers.


                              Support: Extended
                            properties:
                              add:
                                description: |-
                                  Add adds the given header(s) (name, value) to the request
                                  before the action. It appends to any existing values associated
                                  with the header name.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    add:
                                    - name: "my-header"
                                      value: "bar,baz"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: foo,bar,baz
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: |-
                                  Remove the given header(s) from the HTTP request before the action. The
                                  value of Remove is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see
                                  https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header1: foo
                                    my-header2: bar
                                    my-header3: baz


                                  Config:
                                    remove: ["my-header1", "my-header3"]


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header2: bar
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                                x-kubernetes-list-type: set
                              set:
                                description: |-
                                  Set overwrites the request with the given header (name, value)
                                  before the action.


                                  Input:
                                    GET /foo HTTP/1.1
                                    my-header: foo


                                  Config:
                                    set:
                                    - name: "my-header"
                                      value: "bar"


                                  Output:
                                    GET /foo HTTP/1.1
                                    my-header: bar
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: |-
                                        Name is the name of the HTTP Header to be matched. Name matching MUST be
                                        case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                        If multiple entries specify equivalent header names, the first entry with
                                        an equivalent name MUST be considered for a match. Subsequent entries
                                        with an equivalent header name MUST be ignored. Due to the
                                        case-insensitivity of header names, "foo" and "Foo" are considered
                                        equivalent.
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          type:
                            description: |-
                              Type identifies the type of filter to apply. As with other API fields,
                              types are classified into three conformance levels:


                              - Core: Filter types and their corresponding configuration defined by
                                "Support: Core" in this package, e.g. "RequestHeaderModifier". All
                                implementations must support core filters.


                              - Extended: Filter types and their corresponding configuration defined by
                                "Support: Extended" in this package, e.g. "RequestMirror". Implementers
                                are encouraged to support extended filters.


                              - Implementation-specific: Filters that are defined and supported by
                                specific vendors.
                                In the future, filters showing convergence in behavior across multiple
                                implementations will be considered for inclusion in extended or core
                                conformance levels. Filter-specific configuration for such filters
                                is specified using the ExtensionRef field. `Type` should be set to
                                "ExtensionRef" for custom filters.


                              Implementers are encouraged to define custom implementation types to
                              extend the core API with implementation-specific behavior.


                              If a reference to a custom filter type cannot be resolved, the filter
                              MUST NOT be skipped. Instead, requests that would have been processed by
                              that filter MUST receive a HTTP error response.


                              Note that values may be added to this enum, implementations
                              must ensure that unknown values will not cause a crash.


                              Unknown values here must result in the implementation setting the
                              Accepted Condition for the Route to `status: False`, with a
                              Reason of `UnsupportedValue`.
                            enum:
                            - RequestHeaderModifier
                            - ResponseHeaderModifier
                            - RequestMirror
                            - RequestRedirect
                            - URLRewrite
                            - ExtensionRef
                            type: string
                          urlRewrite:
                            description: |-
                              URLRewrite defines a schema for a filter that modifies a request during forwarding.


                              Support: Extended
                            properties:
                              hostname:
                                description: |-
                                  Hostname is the value to be used to replace the Host header value during
                                  forwarding.


                                  Support: Extended
                                maxLength: 253
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              path:
                                description: |-
                                  Path defines a path rewrite.


                                  Support: Extended
                                properties:
                                  replaceFullPath:
                                    description: |-
                                      ReplaceFullPath specifies the value with which to replace the full path
                                      of a request during a rewrite or redirect.
                                    maxLength: 1024
                                    type: string
                                  replacePrefixMatch:
                                    description: |-
                                      ReplacePrefixMatch specifies the value with which to replace the prefix
                                      match of a request during a rewrite or redirect. For example, a request
                                      to "/foo/bar" with a prefix match of "/foo" and a ReplacePrefixMatch
                                      of "/xyz" would be modified to "/xyz/bar".


                                      Note that this matches the behavior of the PathPrefix match type. This
                                      matches full path elements. A path element refers to the list of labels
                                      in the path split by the `/` separator. When specified, a trailing `/` is
                                      ignored. For example, the paths `/abc`, `/abc/`, and `/abc/def` would all
                                      match the prefix `/abc`, but the path `/abcd` would not.


                                      ReplacePrefixMatch is only compatible with a `PathPrefix` HTTPRouteMatch.
                                      Using any other HTTPRouteMatch type on the same HTTPRouteRule will result in
                                      the implementation setting the Accepted Condition for the Route to `status: False`.


                                      Request Path | Prefix Match | Replace Prefix | Modified Path
                                      -------------|--------------|----------------|----------
                                      /foo/bar     | /foo         | /xyz           | /xyz/bar
                                      /foo/bar     | /foo         | /xyz/          | /xyz/bar
                                      /foo/bar     | /foo/        | /xyz           | /xyz/bar
                                      /foo/bar     | /foo/        | /xyz/          | /xyz/bar
                                      /foo         | /foo         | /xyz           | /xyz
                                      /foo/        | /foo         | /xyz           | /xyz/
                                      /foo/bar     | /foo         | <empty string> | /bar
                                      /foo/        | /foo         | <empty string> | /
                                      /foo         | /foo         | <empty string> | /
                                      /foo/        | /foo         | /              | /
                                      /foo         | /foo         | /              | /
                                    maxLength: 1024
                                    type: string
                                  type:
                                    description: |-
                                      Type defines the type of path modifier. Additional types may be
                                      added in a future release of the API.


                                      Note that values may be added to this enum, implementations
                                      must ensure that unknown values will not cause a crash.


                                      Unknown values here must result in the implementation setting the
                                      Accepted Condition for the Route to `status: False`, with a
                                      Reason of `UnsupportedValue`.
                                    enum:
                                    - ReplaceFullPath
                                    - ReplacePrefixMatch
                                    type: string
                                required:
                                - type
                                type: object
                                x-kubernetes-validations:
                                - message: replaceFullPath must be specified when
                                    type is set to 'ReplaceFullPath'
                                  rule: 'self.type == ''ReplaceFullPath'' ? has(self.replaceFullPath)
                                    : true'
                                - message: type must be 'ReplaceFullPath' when replaceFullPath
                                    is set
                                  rule: 'has(self.replaceFullPath) ? self.type ==
                                    ''ReplaceFullPath'' : true'
                                - message: replacePrefixMatch must be specified when
                                    type is set to 'ReplacePrefixMatch'
                                  rule: 'self.type == ''ReplacePrefixMatch'' ? has(self.replacePrefixMatch)
                                    : true'
                                - message: type must be 'ReplacePrefixMatch' when
                                    replacePrefixMatch is set
                                  rule: 'has(self.replacePrefixMatch) ? self.type
                                    == ''ReplacePrefixMatch'' : true'
                            type: object
                        required:
                        - type
                        type: object
                        x-kubernetes-validations:
                        - message: filter.requestHeaderModifier must be nil if the
                            filter.type is not RequestHeaderModifier
                          rule: '!(has(self.requestHeaderModifier) && self.type !=
                            ''RequestHeaderModifier'')'
                        - message: filter.requestHeaderModifier must be specified
                            for RequestHeaderModifier filter.type
                          rule: '!(!has(self.requestHeaderModifier) && self.type ==
                            ''RequestHeaderModifier'')'
                        - message: filter.responseHeaderModifier must be nil if the
                            filter.type is not ResponseHeaderModifier
                          rule: '!(has(self.responseHeaderModifier) && self.type !=
                            ''ResponseHeaderModifier'')'
                        - message: filter.responseHeaderModifier must be specified
                            for ResponseHeaderModifier filter.type
                          rule: '!(!has(self.responseHeaderModifier) && self.type
                            == ''ResponseHeaderModifier'')'
                        - message: filter.requestMirror must be nil if the filter.type
                            is not RequestMirror
                          rule: '!(has(self.requestMirror) && self.type != ''RequestMirror'')'
                        - message: filter.requestMirror must be specified for RequestMirror
                            filter.type
                          rule: '!(!has(self.requestMirror) && self.type == ''RequestMirror'')'
                        - message: filter.requestRedirect must be nil if the filter.type
                            is not RequestRedirect
                          rule: '!(has(self.requestRedirect) && self.type != ''RequestRedirect'')'
                        - message: filter.requestRedirect must be specified for RequestRedirect
                            filter.type
                          rule: '!(!has(self.requestRedirect) && self.type == ''RequestRedirect'')'
                        - message: filter.urlRewrite must be nil if the filter.type
                            is not URLRewrite
                          rule: '!(has(self.urlRewrite) && self.type != ''URLRewrite'')'
                        - message: filter.urlRewrite must be specified for URLRewrite
                            filter.type
                          rule: '!(!has(self.urlRewrite) && self.type == ''URLRewrite'')'
                        - message: filter.extensionRef must be nil if the filter.type
                            is not ExtensionRef
                          rule: '!(has(self.extensionRef) && self.type != ''ExtensionRef'')'
                        - message: filter.extensionRef must be specified for ExtensionRef
                            filter.type
                          rule: '!(!has(self.extensionRef) && self.type == ''ExtensionRef'')'
                      maxItems: 16
                      type: array
                      x-kubernetes-validations:
                      - message: May specify either httpRouteFilterRequestRedirect
                          or httpRouteFilterRequestRewrite, but not both
                        rule: '!(self.exists(f, f.type == ''RequestRedirect'') &&
                          self.exists(f, f.type == ''URLRewrite''))'
                      - message: RequestHeaderModifier filter cannot be repeated
                        rule: self.filter(f, f.type == 'RequestHeaderModifier').size()
                          <= 1
                      - message: ResponseHeaderModifier filter cannot be repeated
                        rule: self.filter(f, f.type == 'ResponseHeaderModifier').size()
                          <= 1
                      - message: RequestRedirect filter cannot be repeated
                        rule: self.filter(f, f.type == 'RequestRedirect').size() <=
                          1
                      - message: URLRewrite filter cannot be repeated
                        rule: self.filter(f, f.type == 'URLRewrite').size() <= 1
                    matches:
                      default:
                      - path:
                          type: PathPrefix
                          value: /
                      description: |-
                        Matches define conditions used for matching the rule against incoming
                        HTTP requests. Each match is independent, i.e. this rule will be matched
                        if **any** one of the matches is satisfied.


                        For example, take the following matches configuration:


                        ```
                        matches:
                        - path:
                            value: "/foo"
                          headers:
                          - name: "version"
                            value: "v2"
                        - path:
                            value: "/v2/foo"
                        ```


                        For a request to match against this rule, a request must satisfy
                        EITHER of the two conditions:


                        - path prefixed with `/foo` AND contains the header `version: v2`
                        - path prefix of `/v2/foo`


                        See the documentation for HTTPRouteMatch on how to specify multiple
                        match conditions that should be ANDed together.


                        If no matches are specified, the default is a prefix
                        path match on "/", which has the effect of matching every
                        HTTP request.


                        Proxy or Load Balancer routing configuration generated from HTTPRoutes
                        MUST prioritize matches based on the following criteria, continuing on
                        ties. Across all rules specified on applicable Routes, precedence must be
                        given to the match having:


                        * "Exact" path match.
                        * "Prefix" path match with largest number of characters.
                        * Method match.
                        * Largest number of header matches.
                        * Largest number of query param matches.


                        Note: The precedence of RegularExpression path matches are implementation-specific.


                        If ties still exist across multiple Routes, matching precedence MUST be
                        determined in order of the following criteria, continuing on ties:


                        * The oldest Route based on creation timestamp.
                        * The Route appearing first in alphabetical order by
                          "{namespace}/{name}".


                        If ties still exist within an HTTPRoute, matching precedence MUST be granted
                        to the FIRST matching rule (in list order) with a match meeting the above
                        criteria.


                        When no rules matching a request have been successfully attached to the
                        parent a request is coming from, a HTTP 404 status code MUST be returned.
                      items:
                        description: "HTTPRouteMatch defines the predicate used to
                          match requests to a given\naction. Multiple match types
                          are ANDed together, i.e. the match will\nevaluate to true
                          only if all conditions are satisfied.\n\n\nFor example,
                          the match below will match a HTTP request only if its path\nstarts
                          with `/foo` AND it contains the `version: v1` header:\n\n\n```\nmatch:\n\n\n\tpath:\n\t
                          \ value: \"/foo\"\n\theaders:\n\t- name: \"version\"\n\t
                          \ value \"v1\"\n\n\n```"
                        properties:
                          headers:
                            description: |-
                              Headers specifies HTTP request header matchers. Multiple match values are
                              ANDed together, meaning, a request must match all the specified headers
                              to select the route.
                            items:
                              description: |-
                                HTTPHeaderMatch describes how to select a HTTP route by matching HTTP request
                                headers.
                              properties:
                                name:
                                  description: |-
                                    Name is the name of the HTTP Header to be matched. Name matching MUST be
                                    case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).


                                    If multiple entries specify equivalent header names, only the first
                                    entry with an equivalent name MUST be considered for a match. Subsequent
                                    entries with an equivalent header name MUST be ignored. Due to the
                                    case-insensitivity of header names, "foo" and "Foo" are considered
                                    equivalent.


                                    When a header is repeated in an HTTP request, it is
                                    implementation-specific behavior as to how this is represented.
                                    Generally, proxies should follow the guidance from the RFC:
                                    https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2 regarding
                                    processing a repeated header, with special handling for "Set-Cookie".
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: |-
                                    Type specifies how to match against the value of the header.


                                    Support: Core (Exact)


                                    Support: Implementation-specific (RegularExpression)


                                    Since RegularExpression HeaderMatchType has implementation-specific
                                    conformance, implementations can support POSIX, PCRE or any other dialects
                                    of regular expressions. Please read the implementation's documentation to
                                    determine the supported dialect.
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP Header to
                                    be matched.
                                  maxLength: 4096
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          method:
                            description: |-
                              Method specifies HTTP method matcher.
                              When specified, this route will be matched only if the request has the
                              specified method.


                              Support: Extended
                            enum:
                            - GET
                            - HEAD
                            - POST
                            - PUT
                            - DELETE
                            - CONNECT
                            - OPTIONS
                            - TRACE
                            - PATCH
                            type: string
                          path:
                            default:
                              type: PathPrefix
                              value: /
                            description: |-
                              Path specifies a HTTP request path matcher. If this field is not
                              specified, a default prefix match on the "/" path is provided.
                            properties:
                              type:
                                default: PathPrefix
                                description: |-
                                  Type specifies how to match against the path Value.


                                  Support: Core (Exact, PathPrefix)


                                  Support: Implementation-specific (RegularExpression)
                                enum:
                                - Exact
                                - PathPrefix
                                - RegularExpression
                                type: string
                              value:
                                default: /
                                description: Value of the HTTP path to match against.
                                maxLength: 1024
                                type: string
                            type: object
                            x-kubernetes-validations:
                            - message: value must be an absolute path and start with
                                '/' when type one of ['Exact', 'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? self.value.startsWith(''/'')
                                : true'
                            - message: must not contain '//' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''//'')
                                : true'
                            - message: must not contain '/./' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''/./'')
                                : true'
                            - message: must not contain '/../' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''/../'')
                                : true'
                            - message: must not contain '%2f' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''%2f'')
                                : true'
                            - message: must not contain '%2F' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''%2F'')
                                : true'
                            - message: must not contain '#' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.contains(''#'')
                                : true'
                            - message: must not end with '/..' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.endsWith(''/..'')
                                : true'
                            - message: must not end with '/.' when type one of ['Exact',
                                'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? !self.value.endsWith(''/.'')
                                : true'
                            - message: type must be one of ['Exact', 'PathPrefix',
                                'RegularExpression']
                              rule: self.type in ['Exact','PathPrefix'] || self.type
                                == 'RegularExpression'
                            - message: must only contain valid characters (matching
                                ^(?:[-A-Za-z0-9/._~!$&'()*+,;=:@]|[%][0-9a-fA-F]{2})+$)
                                for types ['Exact', 'PathPrefix']
                              rule: '(self.type in [''Exact'',''PathPrefix'']) ? self.value.matches(r"""^(?:[-A-Za-z0-9/._~!$&''()*+,;=:@]|[%][0-9a-fA-F]{2})+$""")
                                : true'
                          queryParams:
                            description: |-
                              QueryParams specifies HTTP query parameter matchers. Multiple match
                              values are ANDed together, meaning, a request must match all the
                              specified query parameters to select the route.


                              Support: Extended
                            items:
                              description: |-
                                HTTPQueryParamMatch describes how to select a HTTP route by matching HTTP
                                query parameters.
                              properties:
                                name:
                                  description: |-
                                    Name is the name of the HTTP query param to be matched. This must be an
                                    exact string match. (See
                                    https://tools.ietf.org/html/rfc7230#section-2.7.3).


                                    If multiple entries specify equivalent query param names, only the first
                                    entry with an equivalent name MUST be considered for a match. Subsequent
                                    entries with an equivalent query param name MUST be ignored.


                                    If a query param is repeated in an HTTP request, the behavior is
                                    purposely left undefined, since different data planes have different
                                    capabilities. However, it is *recommended* that implementations should
                                    match against the first value of the param if the data plane supports it,
                                    as this behavior is expected in other load balancing contexts outside of
                                    the Gateway API.


                                    Users SHOULD NOT route traffic based on repeated query params to guard
                                    themselves against potential differences in the implementations.
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: |-
                                    Type specifies how to match against the value of the query parameter.


                                    Support: Extended (Exact)


                                    Support: Implementation-specific (RegularExpression)


                                    Since RegularExpression QueryParamMatchType has Implementation-specific
                                    conformance, implementations can support POSIX, PCRE or any other
                                    dialects of regular expressions. Please read the implementation's
                                    documentation to determine the supported dialect.
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP query param
                                    to be matched.
                                  maxLength: 1024
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                        type: object
                      maxItems: 8
                      type: array
                    sessionPersistence:
                      description: |+
                        SessionPersistence defines and configures session persistence
                        for the route rule.


                        Support: Extended


                      properties:
                        absoluteTimeout:
                          description: |-
                            AbsoluteTimeout defines the absolute timeout of the persistent
                            session. Once the AbsoluteTimeout duration has elapsed, the
                            session becomes invalid.


                            Support: Extended
                          pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                          type: string
                        cookieConfig:
                          description: |-
                            CookieConfig provides configuration settings that are specific
                            to cookie-based session persistence.


                            Support: Core
                          properties:
                            lifetimeType:
                              default: Session
                              description: |-
                                LifetimeType specifies whether the cookie has a permanent or
                                session-based lifetime. A permanent cookie persists until its
                                specified expiry time, defined by the Expires or Max-Age cookie
                                attributes, while a session cookie is deleted when the current
                                session ends.


                                When set to "Permanent", AbsoluteTimeout indicates the
                                cookie's lifetime via the Expires or Max-Age cookie attributes
                                and is required.


                                When set to "Session", AbsoluteTimeout indicates the
                                absolute lifetime of the cookie tracked by the gateway and
                                is optional.


                                Support: Core for "Session" type


                                Support: Extended for "Permanent" type
                              enum:
                              - Permanent
                              - Session
                              type: string
                          type: object
                        idleTimeout:
                          description: |-
                            IdleTimeout defines the idle timeout of the persistent session.
                            Once the session has been idle for more than the specified
                            IdleTimeout duration, the session becomes invalid.


                            Support: Extended
                          pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                          type: string
                        sessionName:
                          description: |-
                            SessionName defines the name of the persistent session token
                            which may be reflected in the cookie or the header. Users
                            should avoid reusing session names to prevent unintended
                            consequences, such as rejection or unpredictable behavior.


                            Support: Implementation-specific
                          maxLength: 128
                          type: string
                        type:
                          default: Cookie
                          description: |-
                            Type defines the type of session persistence such as through
                            the use a header or cookie. Defaults to cookie based session
                            persistence.


                            Support: Core for "Cookie" type


                            Support: Extended for "Header" type
                          enum:
                          - Cookie
                          - Header
                          type: string
                      type: object
                      x-kubernetes-validations:
                      - message: AbsoluteTimeout must be specified when cookie lifetimeType
                          is Permanent
                        rule: '!has(self.cookieConfig) || !has(self.cookieConfig.lifetimeType)
                          || self.cookieConfig.lifetimeType != ''Permanent'' || has(self.absoluteTimeout)'
                    timeouts:
                      description: |+
                        Timeouts defines the timeouts that can be configured for an HTTP request.


                        Support: Extended


                      properties:
                        backendRequest:
                          description: |-
                            BackendRequest specifies a timeout for an individual request from the gateway
                            to a backend. This covers the time from when the request first starts being
                            sent from the gateway to when the full response has been received from the backend.


                            Setting a timeout to the zero duration (e.g. "0s") SHOULD disable the timeout
                            completely. Implementations that cannot completely disable the timeout MUST
                            instead interpret the zero duration as the longest possible value to which
                            the timeout can be set.


                            An entire client HTTP transaction with a gateway, covered by the Request timeout,
                            may result in more than one call from the gateway to the destination backend,
                            for example, if automatic retries are supported.


                            Because the Request timeout encompasses the BackendRequest timeout, the value of
                            BackendRequest must be <= the value of Request timeout.


                            Support: Extended
                          pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                          type: string
                        request:
                          description: |-
                            Request specifies the maximum duration for a gateway to respond to an HTTP request.
                            If the gateway has not been able to respond before this deadline is met, the gateway
                            MUST return a timeout error.


                            For example, setting the `rules.timeouts.request` field to the value `10s` in an
                            `HTTPRoute` will cause a timeout if a client request is taking longer than 10 seconds
                            to complete.


                            Setting a timeout to the zero duration (e.g. "0s") SHOULD disable the timeout
                            completely. Implementations that cannot completely disable the timeout MUST
                            instead interpret the zero duration as the longest possible value to which
                            the timeout can be set.


                            This timeout is intended to cover as close to the whole request-response transaction
                            as possible although an implementation MAY choose to start the timeout after the entire
                            request stream has been received instead of immediately after the transaction is
                            initiated by the client.


                            When this field is unspecified, request timeout behavior is implementation-specific.


                            Support: Extended
                          pattern: ^([0-9]{1,5}(h|m|s|ms)){1,4}$
                          type: string
                      type: object
                      x-kubernetes-validations:
                      - message: backendRequest timeout cannot be longer than request
                          timeout
                        rule: '!(has(self.request) && has(self.backendRequest) &&
                          duration(self.request) != duration(''0s'') && duration(self.backendRequest)
                          > duration(self.request))'
                  type: object
                  x-kubernetes-validations:
                  - message: RequestRedirect filter must not be used together with
                      backendRefs
                    rule: '(has(self.backendRefs) && size(self.backendRefs) > 0) ?
                      (!has(self.filters) || self.filters.all(f, !has(f.requestRedirect))):
                      true'
                  - message: When using RequestRedirect filter with path.replacePrefixMatch,
                      exactly one PathPrefix match must be specified
                    rule: '(has(self.filters) && self.filters.exists_one(f, has(f.requestRedirect)
                      && has(f.requestRedirect.path) && f.requestRedirect.path.type
                      == ''ReplacePrefixMatch'' && has(f.requestRedirect.path.replacePrefixMatch)))
                      ? ((size(self.matches) != 1 || !has(self.matches[0].path) ||
                      self.matches[0].path.type != ''PathPrefix'') ? false : true)
                      : true'
                  - message: When using URLRewrite filter with path.replacePrefixMatch,
                      exactly one PathPrefix match must be specified
                    rule: '(has(self.filters) && self.filters.exists_one(f, has(f.urlRewrite)
                      && has(f.urlRewrite.path) && f.urlRewrite.path.type == ''ReplacePrefixMatch''
                      && has(f.urlRewrite.path.replacePrefixMatch))) ? ((size(self.matches)
                      != 1 || !has(self.matches[0].path) || self.matches[0].path.type
                      != ''PathPrefix'') ? false : true) : true'
                  - message: Within backendRefs, when using RequestRedirect filter
                      with path.replacePrefixMatch, exactly one PathPrefix match must
                      be specified
                    rule: '(has(self.backendRefs) && self.backendRefs.exists_one(b,
                      (has(b.filters) && b.filters.exists_one(f, has(f.requestRedirect)
                      && has(f.requestRedirect.path) && f.requestRedirect.path.type
                      == ''ReplacePrefixMatch'' && has(f.requestRedirect.path.replacePrefixMatch)))
                      )) ? ((size(self.matches) != 1 || !has(self.matches[0].path)
                      || self.matches[0].path.type != ''PathPrefix'') ? false : true)
                      : true'
                  - message: Within backendRefs, When using URLRewrite filter with
                      path.replacePrefixMatch, exactly one PathPrefix match must be
                      specified
                    rule: '(has(self.backendRefs) && self.backendRefs.exists_one(b,
                      (has(b.filters) && b.filters.exists_one(f, has(f.urlRewrite)
                      && has(f.urlRewrite.path) && f.urlRewrite.path.type == ''ReplacePrefixMatch''
                      && has(f.urlRewrite.path.replacePrefixMatch))) )) ? ((size(self.matches)
                      != 1 || !has(self.matches[0].path) || self.matches[0].path.type
                      != ''PathPrefix'') ? false : true) : true'
                maxItems: 16
                type: array
            type: object
          status:
            description: Status defines the current state of HTTPRoute.
            properties:
              parents:
                description: |-
                  Parents is a list of parent resources (usually Gateways) that are
                  associated with the route, and the status of the route with respect to
                  each parent. When this route attaches to a parent, the controller that
                  manages the parent must add an entry to this list when the controller
                  first sees the route and should update the entry as appropriate when the
                  route or gateway is modified.


                  Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this API
                  can only populate Route status for the Gateways/parent resources they are
                  responsible for.


                  A maximum of 32 Gateways will be represented in this list. An empty list
                  means the route has not been attached to any Gateway.
                items:
                  description: |-
                    RouteParentStatus describes the status of a route with respect to an
                    associated Parent.
                  properties:
                    conditions:
                      description: |-
                        Conditions describes the status of the route with respect to the Gateway.
                        Note that the route's availability is also subject to the Gateway's own
                        status conditions and listener status.


                        If the Route's ParentRef specifies an existing Gateway that supports
                        Routes of this kind AND that Gateway's controller has sufficient access,
                        then that Gateway's controller MUST set the "Accepted" condition on the
                        Route, to indicate whether the route has been accepted or rejected by the
                        Gateway, and why.


                        A Route MUST be considered "Accepted" if at least one of the Route's
                        rules is implemented by the Gateway.


                        There are a number of cases where the "Accepted" condition may not be set
                        due to lack of controller visibility, that includes when:


                        * The Route refers to a non-existent parent.
                        * The Route is of a type that the controller does not support.
                        * The Route is in a namespace the controller does not have access to.
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource.\n---\nThis struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example,\n\n\n\ttype FooStatus
                          struct{\n\t    // Represents the observations of a foo's
                          current state.\n\t    // Known .status.conditions.type are:
                          \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                          +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    //
                          +listType=map\n\t    // +listMapKey=type\n\t    Conditions
                          []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                          patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                          \   // other fields\n\t}"
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: |-
                              type of condition in CamelCase or in foo.example.com/CamelCase.
                              ---
                              Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                              useful (see .node.status.conditions), the ability to deconflict is important.
                              The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: |-
                        ControllerName is a domain/path string that indicates the name of the
                        controller that wrote this status. This corresponds with the
                        controllerName field on GatewayClass.


                        Example: "example.net/gateway-controller".


                        The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
                        valid Kubernetes names
                        (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).


                        Controllers MUST populate this field when writing status. Controllers should ensure that
                        entries to status populated with their ControllerName are cleaned up when they are no
                        longer necessary.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: |-
                        ParentRef corresponds with a ParentRef in the spec that this
                        RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: |-
                            Group is the group of the referent.
                            When unspecified, "gateway.networking.k8s.io" is inferred.
                            To set the core API group (such as for a "Service" kind referent),
                            Group must be explicitly set to "" (empty string).


                            Support: Core
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: |-
                            Kind is kind of the referent.


                            There are two kinds of parent resources with "Core" support:


                            * Gateway (Gateway conformance profile)
                            * Service (Mesh conformance profile, ClusterIP Services only)


                            Support for other resources is Implementation-Specific.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: |-
                            Name is the name of the referent.


                            Support: Core
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referent. When unspecified, this refers
                            to the local namespace of the Route.


                            Note that there are specific rules for ParentRefs which cross namespace
                            boundaries. Cross-namespace references are only valid if they are explicitly
                            allowed by something in the namespace they are referring to. For example:
                            Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                            generic way to enable any other kind of cross-namespace reference.



                            ParentRefs from a Route to a Service in the same namespace are "producer"
                            routes, which apply default routing rules to inbound connections from
                            any namespace to the Service.


                            ParentRefs from a Route to a Service in a different namespace are
                            "consumer" routes, and these routing rules are only applied to outbound
                            connections originating from the same namespace as the Route, for which
                            the intended destination of the connections are a Service targeted as a
                            ParentRef of the Route.



                            Support: Core
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: |-
                            Port is the network port this Route targets. It can be interpreted
                            differently based on the type of parent resource.


                            When the parent resource is a Gateway, this targets all listeners
                            listening on the specified port that also support this kind of Route(and
                            select this Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to a specific port
                            as opposed to a listener(s) whose port(s) may be changed. When both Port
                            and SectionName are specified, the name and port of the selected listener
                            must match both specified values.



                            When the parent resource is a Service, this targets a specific port in the
                            Service spec. When both Port (experimental) and SectionName are specified,
                            the name and port of the selected port must match both specified values.



                            Implementations MAY choose to support other parent resources.
                            Implementations supporting other types of parent resources MUST clearly
                            document how/if Port is interpreted.


                            For the purpose of status, an attachment is considered successful as
                            long as the parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                            from the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.


                            Support: Extended
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: |-
                            SectionName is the name of a section within the target resource. In the
                            following resources, SectionName is interpreted as the following:


                            * Gateway: Listener name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.
                            * Service: Port name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.


                            Implementations MAY choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName is
                            interpreted.


                            When unspecified (empty string), this will reference the entire resource.
                            For the purpose of status, an attachment is considered successful if at
                            least one section in the parent resource accepts it. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                            the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route, the
                            Route MUST be considered detached from the Gateway.


                            Support: Core
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
# Source: linkerd-crds/templates/gateway.networking.k8s.io_tcproutes.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/2997
    gateway.networking.k8s.io/bundle-version: v1.1.1
    gateway.networking.k8s.io/channel: experimental
    linkerd.io/created-by: linkerd/helm %!s(<nil>)
    helm.sh/resource-policy: keep
  labels:
    helm.sh/chart: linkerd-crds-2025.5.4
    linkerd.io/control-plane-ns: linkerd
  creationTimestamp: null
  name: tcproutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: TCPRoute
    listKind: TCPRouteList
    plural: tcproutes
    singular: tcproute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: |-
          TCPRoute provides a way to route TCP requests. When combined with a Gateway
          listener, it can be used to forward connections on the port specified by the
          listener to a set of backends specified by the TCPRoute.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of TCPRoute.
            properties:
              parentRefs:
                description: |+
                  ParentRefs references the resources (usually Gateways) that a Route wants
                  to be attached to. Note that the referenced parent resource needs to
                  allow this for the attachment to be complete. For Gateways, that means
                  the Gateway needs to allow attachment from Routes of this kind and
                  namespace. For Services, that means the Service must either be in the same
                  namespace for a "producer" route, or the mesh implementation must support
                  and allow "consumer" routes for the referenced Service. ReferenceGrant is
                  not applicable for governing ParentRefs to Services - it is not possible to
                  create a "producer" route for a Service in a different namespace from the
                  Route.


                  There are two kinds of parent resources with "Core" support:


                  * Gateway (Gateway conformance profile)
                  * Service (Mesh conformance profile, ClusterIP Services only)


                  This API may be extended in the future to support additional kinds of parent
                  resources.


                  ParentRefs must be _distinct_. This means either that:


                  * They select different objects.  If this is the case, then parentRef
                    entries are distinct. In terms of fields, this means that the
                    multi-part key defined by `group`, `kind`, `namespace`, and `name` must
                    be unique across all parentRef entries in the Route.
                  * They do not select different objects, but for each optional field used,
                    each ParentRef that selects the same object must set the same set of
                    optional fields to different values. If one ParentRef sets a
                    combination of optional fields, all must set the same combination.


                  Some examples:


                  * If one ParentRef sets `sectionName`, all ParentRefs referencing the
                    same object must also set `sectionName`.
                  * If one ParentRef sets `port`, all ParentRefs referencing the same
                    object must also set `port`.
                  * If one ParentRef sets `sectionName` and `port`, all ParentRefs
                    referencing the same object must also set `sectionName` and `port`.


                  It is possible to separately reference multiple distinct objects that may
                  be collapsed by an implementation. For example, some implementations may
                  choose to merge compatible Gateway Listeners together. If that is the
                  case, the list of routes attached to those resources should also be
                  merged.


                  Note that for ParentRefs that cross namespace boundaries, there are specific
                  rules. Cross-namespace references are only valid if they are explicitly
                  allowed by something in the namespace they are referring to. For example,
                  Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                  generic way to enable other kinds of cross-namespace reference.



                  ParentRefs from a Route to a Service in the same namespace are "producer"
                  routes, which apply default routing rules to inbound connections from
                  any namespace to the Service.


                  ParentRefs from a Route to a Service in a different namespace are
                  "consumer" routes, and these routing rules are only applied to outbound
                  connections originating from the same namespace as the Route, for which
                  the intended destination of the connections are a Service targeted as a
                  ParentRef of the Route.






                items:
                  description: |-
                    ParentReference identifies an API object (usually a Gateway) that can be considered
                    a parent of this resource (usually a route). There are two kinds of parent resources
                    with "Core" support:


                    * Gateway (Gateway conformance profile)
                    * Service (Mesh conformance profile, ClusterIP Services only)


                    This API may be extended in the future to support additional kinds of parent
                    resources.


                    The API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid.
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: |-
                        Group is the group of the referent.
                        When unspecified, "gateway.networking.k8s.io" is inferred.
                        To set the core API group (such as for a "Service" kind referent),
                        Group must be explicitly set to "" (empty string).


                        Support: Core
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: |-
                        Kind is kind of the referent.


                        There are two kinds of parent resources with "Core" support:


                        * Gateway (Gateway conformance profile)
                        * Service (Mesh conformance profile, ClusterIP Services only)


                        Support for other resources is Implementation-Specific.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: |-
                        Name is the name of the referent.


                        Support: Core
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referent. When unspecified, this refers
                        to the local namespace of the Route.


                        Note that there are specific rules for ParentRefs which cross namespace
                        boundaries. Cross-namespace references are only valid if they are explicitly
                        allowed by something in the namespace they are referring to. For example:
                        Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                        generic way to enable any other kind of cross-namespace reference.



                        ParentRefs from a Route to a Service in the same namespace are "producer"
                        routes, which apply default routing rules to inbound connections from
                        any namespace to the Service.


                        ParentRefs from a Route to a Service in a different namespace are
                        "consumer" routes, and these routing rules are only applied to outbound
                        connections originating from the same namespace as the Route, for which
                        the intended destination of the connections are a Service targeted as a
                        ParentRef of the Route.



                        Support: Core
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: |-
                        Port is the network port this Route targets. It can be interpreted
                        differently based on the type of parent resource.


                        When the parent resource is a Gateway, this targets all listeners
                        listening on the specified port that also support this kind of Route(and
                        select this Route). It's not recommended to set `Port` unless the
                        networking behaviors specified in a Route must apply to a specific port
                        as opposed to a listener(s) whose port(s) may be changed. When both Port
                        and SectionName are specified, the name and port of the selected listener
                        must match both specified values.



                        When the parent resource is a Service, this targets a specific port in the
                        Service spec. When both Port (experimental) and SectionName are specified,
                        the name and port of the selected port must match both specified values.



                        Implementations MAY choose to support other parent resources.
                        Implementations supporting other types of parent resources MUST clearly
                        document how/if Port is interpreted.


                        For the purpose of status, an attachment is considered successful as
                        long as the parent resource accepts it partially. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route,
                        the Route MUST be considered detached from the Gateway.


                        Support: Extended
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: |-
                        SectionName is the name of a section within the target resource. In the
                        following resources, SectionName is interpreted as the following:


                        * Gateway: Listener name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.
                        * Service: Port name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.


                        Implementations MAY choose to support attaching Routes to other resources.
                        If that is the case, they MUST clearly document how SectionName is
                        interpreted.


                        When unspecified (empty string), this will reference the entire resource.
                        For the purpose of status, an attachment is considered successful if at
                        least one section in the parent resource accepts it. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                        the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route, the
                        Route MUST be considered detached from the Gateway.


                        Support: Core
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
                x-kubernetes-validations:
                - message: sectionName or port must be specified when parentRefs includes
                    2 or more references to the same parent
                  rule: 'self.all(p1, self.all(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '''') && (!has(p2.__namespace__) || p2.__namespace__
                    == '''')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__)) ? ((!has(p1.sectionName)
                    || p1.sectionName == '''') == (!has(p2.sectionName) || p2.sectionName
                    == '''') && (!has(p1.port) || p1.port == 0) == (!has(p2.port)
                    || p2.port == 0)): true))'
                - message: sectionName or port must be unique when parentRefs includes
                    2 or more references to the same parent
                  rule: self.all(p1, self.exists_one(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__
                    == '')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__ )) && (((!has(p1.sectionName)
                    || p1.sectionName == '') && (!has(p2.sectionName) || p2.sectionName
                    == '')) || ( has(p1.sectionName) && has(p2.sectionName) && p1.sectionName
                    == p2.sectionName)) && (((!has(p1.port) || p1.port == 0) && (!has(p2.port)
                    || p2.port == 0)) || (has(p1.port) && has(p2.port) && p1.port
                    == p2.port))))
              rules:
                description: Rules are a list of TCP matchers and actions.
                items:
                  description: TCPRouteRule is the configuration for a given rule.
                  properties:
                    backendRefs:
                      description: |-
                        BackendRefs defines the backend(s) where matching requests should be
                        sent. If unspecified or invalid (refers to a non-existent resource or a
                        Service with no endpoints), the underlying implementation MUST actively
                        reject connection attempts to this backend. Connection rejections must
                        respect weight; if an invalid backend is requested to have 80% of
                        connections, then 80% of connections must be rejected instead.


                        Support: Core for Kubernetes Service


                        Support: Extended for Kubernetes ServiceImport


                        Support: Implementation-specific for any other resource


                        Support for weight: Extended
                      items:
                        description: |-
                          BackendRef defines how a Route should forward a request to a Kubernetes
                          resource.


                          Note that when a namespace different than the local namespace is specified, a
                          ReferenceGrant object is required in the referent namespace to allow that
                          namespace's owner to accept the reference. See the ReferenceGrant
                          documentation for details.


                          <gateway:experimental:description>


                          When the BackendRef points to a Kubernetes Service, implementations SHOULD
                          honor the appProtocol field if it is set for the target Service Port.


                          Implementations supporting appProtocol SHOULD recognize the Kubernetes
                          Standard Application Protocols defined in KEP-3726.


                          If a Service appProtocol isn't specified, an implementation MAY infer the
                          backend protocol through its own means. Implementations MAY infer the
                          protocol from the Route type referring to the backend Service.


                          If a Route is not able to send traffic to the backend using the specified
                          protocol then the backend is considered invalid. Implementations MUST set the
                          "ResolvedRefs" condition to "False" with the "UnsupportedProtocol" reason.


                          </gateway:experimental:description>


                          Note that when the BackendTLSPolicy object is enabled by the implementation,
                          there are some extra rules about validity to consider here. See the fields
                          where this struct is used for more information about the exact behavior.
                        properties:
                          group:
                            default: ""
                            description: |-
                              Group is the group of the referent. For example, "gateway.networking.k8s.io".
                              When unspecified or empty string, core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: |-
                              Kind is the Kubernetes resource kind of the referent. For example
                              "Service".


                              Defaults to "Service" when not specified.


                              ExternalName services can refer to CNAME DNS records that may live
                              outside of the cluster and as such are difficult to reason about in
                              terms of conformance. They also may not be safe to forward to (see
                              CVE-2021-25740 for more information). Implementations SHOULD NOT
                              support ExternalName Services.


                              Support: Core (Services with a type other than ExternalName)


                              Support: Implementation-specific (Services with type ExternalName)
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: |-
                              Namespace is the namespace of the backend. When unspecified, the local
                              namespace is inferred.


                              Note that when a namespace different than the local namespace is specified,
                              a ReferenceGrant object is required in the referent namespace to allow that
                              namespace's owner to accept the reference. See the ReferenceGrant
                              documentation for details.


                              Support: Core
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: |-
                              Port specifies the destination port number to use for this resource.
                              Port is required when the referent is a Kubernetes Service. In this
                              case, the port number is the service port number, not the target port.
                              For other resources, destination port might be derived from the referent
                              resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: |-
                              Weight specifies the proportion of requests forwarded to the referenced
                              backend. This is computed as weight/(sum of all weights in this
                              BackendRefs list). For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision an
                              implementation supports. Weight is not a percentage and the sum of
                              weights does not need to equal 100.


                              If only one backend is specified and it has a weight greater than 0, 100%
                              of the traffic is forwarded to that backend. If weight is set to 0, no
                              traffic should be forwarded for this entry. If unspecified, weight
                              defaults to 1.


                              Support for this field varies based on the context where used.
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                        x-kubernetes-validations:
                        - message: Must have port for Service reference
                          rule: '(size(self.group) == 0 && self.kind == ''Service'')
                            ? has(self.port) : true'
                      maxItems: 16
                      minItems: 1
                      type: array
                  type: object
                maxItems: 16
                minItems: 1
                type: array
            required:
            - rules
            type: object
          status:
            description: Status defines the current state of TCPRoute.
            properties:
              parents:
                description: |-
                  Parents is a list of parent resources (usually Gateways) that are
                  associated with the route, and the status of the route with respect to
                  each parent. When this route attaches to a parent, the controller that
                  manages the parent must add an entry to this list when the controller
                  first sees the route and should update the entry as appropriate when the
                  route or gateway is modified.


                  Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this API
                  can only populate Route status for the Gateways/parent resources they are
                  responsible for.


                  A maximum of 32 Gateways will be represented in this list. An empty list
                  means the route has not been attached to any Gateway.
                items:
                  description: |-
                    RouteParentStatus describes the status of a route with respect to an
                    associated Parent.
                  properties:
                    conditions:
                      description: |-
                        Conditions describes the status of the route with respect to the Gateway.
                        Note that the route's availability is also subject to the Gateway's own
                        status conditions and listener status.


                        If the Route's ParentRef specifies an existing Gateway that supports
                        Routes of this kind AND that Gateway's controller has sufficient access,
                        then that Gateway's controller MUST set the "Accepted" condition on the
                        Route, to indicate whether the route has been accepted or rejected by the
                        Gateway, and why.


                        A Route MUST be considered "Accepted" if at least one of the Route's
                        rules is implemented by the Gateway.


                        There are a number of cases where the "Accepted" condition may not be set
                        due to lack of controller visibility, that includes when:


                        * The Route refers to a non-existent parent.
                        * The Route is of a type that the controller does not support.
                        * The Route is in a namespace the controller does not have access to.
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource.\n---\nThis struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example,\n\n\n\ttype FooStatus
                          struct{\n\t    // Represents the observations of a foo's
                          current state.\n\t    // Known .status.conditions.type are:
                          \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                          +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    //
                          +listType=map\n\t    // +listMapKey=type\n\t    Conditions
                          []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                          patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                          \   // other fields\n\t}"
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: |-
                              type of condition in CamelCase or in foo.example.com/CamelCase.
                              ---
                              Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                              useful (see .node.status.conditions), the ability to deconflict is important.
                              The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: |-
                        ControllerName is a domain/path string that indicates the name of the
                        controller that wrote this status. This corresponds with the
                        controllerName field on GatewayClass.


                        Example: "example.net/gateway-controller".


                        The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
                        valid Kubernetes names
                        (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).


                        Controllers MUST populate this field when writing status. Controllers should ensure that
                        entries to status populated with their ControllerName are cleaned up when they are no
                        longer necessary.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: |-
                        ParentRef corresponds with a ParentRef in the spec that this
                        RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: |-
                            Group is the group of the referent.
                            When unspecified, "gateway.networking.k8s.io" is inferred.
                            To set the core API group (such as for a "Service" kind referent),
                            Group must be explicitly set to "" (empty string).


                            Support: Core
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: |-
                            Kind is kind of the referent.


                            There are two kinds of parent resources with "Core" support:


                            * Gateway (Gateway conformance profile)
                            * Service (Mesh conformance profile, ClusterIP Services only)


                            Support for other resources is Implementation-Specific.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: |-
                            Name is the name of the referent.


                            Support: Core
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referent. When unspecified, this refers
                            to the local namespace of the Route.


                            Note that there are specific rules for ParentRefs which cross namespace
                            boundaries. Cross-namespace references are only valid if they are explicitly
                            allowed by something in the namespace they are referring to. For example:
                            Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                            generic way to enable any other kind of cross-namespace reference.



                            ParentRefs from a Route to a Service in the same namespace are "producer"
                            routes, which apply default routing rules to inbound connections from
                            any namespace to the Service.


                            ParentRefs from a Route to a Service in a different namespace are
                            "consumer" routes, and these routing rules are only applied to outbound
                            connections originating from the same namespace as the Route, for which
                            the intended destination of the connections are a Service targeted as a
                            ParentRef of the Route.



                            Support: Core
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: |-
                            Port is the network port this Route targets. It can be interpreted
                            differently based on the type of parent resource.


                            When the parent resource is a Gateway, this targets all listeners
                            listening on the specified port that also support this kind of Route(and
                            select this Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to a specific port
                            as opposed to a listener(s) whose port(s) may be changed. When both Port
                            and SectionName are specified, the name and port of the selected listener
                            must match both specified values.



                            When the parent resource is a Service, this targets a specific port in the
                            Service spec. When both Port (experimental) and SectionName are specified,
                            the name and port of the selected port must match both specified values.



                            Implementations MAY choose to support other parent resources.
                            Implementations supporting other types of parent resources MUST clearly
                            document how/if Port is interpreted.


                            For the purpose of status, an attachment is considered successful as
                            long as the parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                            from the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.


                            Support: Extended
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: |-
                            SectionName is the name of a section within the target resource. In the
                            following resources, SectionName is interpreted as the following:


                            * Gateway: Listener name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.
                            * Service: Port name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.


                            Implementations MAY choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName is
                            interpreted.


                            When unspecified (empty string), this will reference the entire resource.
                            For the purpose of status, an attachment is considered successful if at
                            least one section in the parent resource accepts it. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                            the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route, the
                            Route MUST be considered detached from the Gateway.


                            Support: Core
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
# Source: linkerd-crds/templates/gateway.networking.k8s.io_tlsroutes.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    api-approved.kubernetes.io: https://github.com/kubernetes-sigs/gateway-api/pull/2997
    gateway.networking.k8s.io/bundle-version: v1.1.1
    gateway.networking.k8s.io/channel: experimental
    linkerd.io/created-by: linkerd/helm %!s(<nil>)
    helm.sh/resource-policy: keep
  labels:
    helm.sh/chart: linkerd-crds-2025.5.4
    linkerd.io/control-plane-ns: linkerd
  creationTimestamp: null
  name: tlsroutes.gateway.networking.k8s.io
spec:
  group: gateway.networking.k8s.io
  names:
    categories:
    - gateway-api
    kind: TLSRoute
    listKind: TLSRouteList
    plural: tlsroutes
    singular: tlsroute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: |-
          The TLSRoute resource is similar to TCPRoute, but can be configured
          to match against TLS-specific metadata. This allows more flexibility
          in matching streams for a given TLS listener.


          If you need to forward traffic to a single target for a TLS listener, you
          could choose to use a TCPRoute with a TLS listener.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of TLSRoute.
            properties:
              hostnames:
                description: |-
                  Hostnames defines a set of SNI names that should match against the
                  SNI attribute of TLS ClientHello message in TLS handshake. This matches
                  the RFC 1123 definition of a hostname with 2 notable exceptions:


                  1. IPs are not allowed in SNI names per RFC 6066.
                  2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                     label must appear by itself as the first label.


                  If a hostname is specified by both the Listener and TLSRoute, there
                  must be at least one intersecting hostname for the TLSRoute to be
                  attached to the Listener. For example:


                  * A Listener with `test.example.com` as the hostname matches TLSRoutes
                    that have either not specified any hostnames, or have specified at
                    least one of `test.example.com` or `*.example.com`.
                  * A Listener with `*.example.com` as the hostname matches TLSRoutes
                    that have either not specified any hostnames or have specified at least
                    one hostname that matches the Listener hostname. For example,
                    `test.example.com` and `*.example.com` would both match. On the other
                    hand, `example.com` and `test.example.net` would not match.


                  If both the Listener and TLSRoute have specified hostnames, any
                  TLSRoute hostnames that do not match the Listener hostname MUST be
                  ignored. For example, if a Listener specified `*.example.com`, and the
                  TLSRoute specified `test.example.com` and `test.example.net`,
                  `test.example.net` must not be considered for a match.


                  If both the Listener and TLSRoute have specified hostnames, and none
                  match with the criteria above, then the TLSRoute is not accepted. The
                  implementation must raise an 'Accepted' Condition with a status of
                  `False` in the corresponding RouteParentStatus.


                  Support: Core
                items:
                  description: |-
                    Hostname is the fully qualified domain name of a network host. This matches
                    the RFC 1123 definition of a hostname with 2 notable exceptions:


                     1. IPs are not allowed.
                     2. A hostname may be prefixed with a wildcard label (`*.`). The wildcard
                        label must appear by itself as the first label.


                    Hostname can be "precise" which is a domain name without the terminating
                    dot of a network host (e.g. "foo.example.com") or "wildcard", which is a
                    domain name prefixed with a single wildcard label (e.g. `*.example.com`).


                    Note that as per RFC1035 and RFC1123, a *label* must consist of lower case
                    alphanumeric characters or '-', and must start and end with an alphanumeric
                    character. No other punctuation is allowed.
                  maxLength: 253
                  minLength: 1
                  pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                maxItems: 16
                type: array
              parentRefs:
                description: |+
                  ParentRefs references the resources (usually Gateways) that a Route wants
                  to be attached to. Note that the referenced parent resource needs to
                  allow this for the attachment to be complete. For Gateways, that means
                  the Gateway needs to allow attachment from Routes of this kind and
                  namespace. For Services, that means the Service must either be in the same
                  namespace for a "producer" route, or the mesh implementation must support
                  and allow "consumer" routes for the referenced Service. ReferenceGrant is
                  not applicable for governing ParentRefs to Services - it is not possible to
                  create a "producer" route for a Service in a different namespace from the
                  Route.


                  There are two kinds of parent resources with "Core" support:


                  * Gateway (Gateway conformance profile)
                  * Service (Mesh conformance profile, ClusterIP Services only)


                  This API may be extended in the future to support additional kinds of parent
                  resources.


                  ParentRefs must be _distinct_. This means either that:


                  * They select different objects.  If this is the case, then parentRef
                    entries are distinct. In terms of fields, this means that the
                    multi-part key defined by `group`, `kind`, `namespace`, and `name` must
                    be unique across all parentRef entries in the Route.
                  * They do not select different objects, but for each optional field used,
                    each ParentRef that selects the same object must set the same set of
                    optional fields to different values. If one ParentRef sets a
                    combination of optional fields, all must set the same combination.


                  Some examples:


                  * If one ParentRef sets `sectionName`, all ParentRefs referencing the
                    same object must also set `sectionName`.
                  * If one ParentRef sets `port`, all ParentRefs referencing the same
                    object must also set `port`.
                  * If one ParentRef sets `sectionName` and `port`, all ParentRefs
                    referencing the same object must also set `sectionName` and `port`.


                  It is possible to separately reference multiple distinct objects that may
                  be collapsed by an implementation. For example, some implementations may
                  choose to merge compatible Gateway Listeners together. If that is the
                  case, the list of routes attached to those resources should also be
                  merged.


                  Note that for ParentRefs that cross namespace boundaries, there are specific
                  rules. Cross-namespace references are only valid if they are explicitly
                  allowed by something in the namespace they are referring to. For example,
                  Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                  generic way to enable other kinds of cross-namespace reference.



                  ParentRefs from a Route to a Service in the same namespace are "producer"
                  routes, which apply default routing rules to inbound connections from
                  any namespace to the Service.


                  ParentRefs from a Route to a Service in a different namespace are
                  "consumer" routes, and these routing rules are only applied to outbound
                  connections originating from the same namespace as the Route, for which
                  the intended destination of the connections are a Service targeted as a
                  ParentRef of the Route.






                items:
                  description: |-
                    ParentReference identifies an API object (usually a Gateway) that can be considered
                    a parent of this resource (usually a route). There are two kinds of parent resources
                    with "Core" support:


                    * Gateway (Gateway conformance profile)
                    * Service (Mesh conformance profile, ClusterIP Services only)


                    This API may be extended in the future to support additional kinds of parent
                    resources.


                    The API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid.
                  properties:
                    group:
                      default: gateway.networking.k8s.io
                      description: |-
                        Group is the group of the referent.
                        When unspecified, "gateway.networking.k8s.io" is inferred.
                        To set the core API group (such as for a "Service" kind referent),
                        Group must be explicitly set to "" (empty string).


                        Support: Core
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: |-
                        Kind is kind of the referent.


                        There are two kinds of parent resources with "Core" support:


                        * Gateway (Gateway conformance profile)
                        * Service (Mesh conformance profile, ClusterIP Services only)


                        Support for other resources is Implementation-Specific.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: |-
                        Name is the name of the referent.


                        Support: Core
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: |-
                        Namespace is the namespace of the referent. When unspecified, this refers
                        to the local namespace of the Route.


                        Note that there are specific rules for ParentRefs which cross namespace
                        boundaries. Cross-namespace references are only valid if they are explicitly
                        allowed by something in the namespace they are referring to. For example:
                        Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                        generic way to enable any other kind of cross-namespace reference.



                        ParentRefs from a Route to a Service in the same namespace are "producer"
                        routes, which apply default routing rules to inbound connections from
                        any namespace to the Service.


                        ParentRefs from a Route to a Service in a different namespace are
                        "consumer" routes, and these routing rules are only applied to outbound
                        connections originating from the same namespace as the Route, for which
                        the intended destination of the connections are a Service targeted as a
                        ParentRef of the Route.



                        Support: Core
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: |-
                        Port is the network port this Route targets. It can be interpreted
                        differently based on the type of parent resource.


                        When the parent resource is a Gateway, this targets all listeners
                        listening on the specified port that also support this kind of Route(and
                        select this Route). It's not recommended to set `Port` unless the
                        networking behaviors specified in a Route must apply to a specific port
                        as opposed to a listener(s) whose port(s) may be changed. When both Port
                        and SectionName are specified, the name and port of the selected listener
                        must match both specified values.



                        When the parent resource is a Service, this targets a specific port in the
                        Service spec. When both Port (experimental) and SectionName are specified,
                        the name and port of the selected port must match both specified values.



                        Implementations MAY choose to support other parent resources.
                        Implementations supporting other types of parent resources MUST clearly
                        document how/if Port is interpreted.


                        For the purpose of status, an attachment is considered successful as
                        long as the parent resource accepts it partially. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route,
                        the Route MUST be considered detached from the Gateway.


                        Support: Extended
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: |-
                        SectionName is the name of a section within the target resource. In the
                        following resources, SectionName is interpreted as the following:


                        * Gateway: Listener name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.
                        * Service: Port name. When both Port (experimental) and SectionName
                        are specified, the name and port of the selected listener must match
                        both specified values.


                        Implementations MAY choose to support attaching Routes to other resources.
                        If that is the case, they MUST clearly document how SectionName is
                        interpreted.


                        When unspecified (empty string), this will reference the entire resource.
                        For the purpose of status, an attachment is considered successful if at
                        least one section in the parent resource accepts it. For example, Gateway
                        listeners can restrict which Routes can attach to them by Route kind,
                        namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                        the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this Route, the
                        Route MUST be considered detached from the Gateway.


                        Support: Core
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
                x-kubernetes-validations:
                - message: sectionName or port must be specified when parentRefs includes
                    2 or more references to the same parent
                  rule: 'self.all(p1, self.all(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '''') && (!has(p2.__namespace__) || p2.__namespace__
                    == '''')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__)) ? ((!has(p1.sectionName)
                    || p1.sectionName == '''') == (!has(p2.sectionName) || p2.sectionName
                    == '''') && (!has(p1.port) || p1.port == 0) == (!has(p2.port)
                    || p2.port == 0)): true))'
                - message: sectionName or port must be unique when parentRefs includes
                    2 or more references to the same parent
                  rule: self.all(p1, self.exists_one(p2, p1.group == p2.group && p1.kind
                    == p2.kind && p1.name == p2.name && (((!has(p1.__namespace__)
                    || p1.__namespace__ == '') && (!has(p2.__namespace__) || p2.__namespace__
                    == '')) || (has(p1.__namespace__) && has(p2.__namespace__) &&
                    p1.__namespace__ == p2.__namespace__ )) && (((!has(p1.sectionName)
                    || p1.sectionName == '') && (!has(p2.sectionName) || p2.sectionName
                    == '')) || ( has(p1.sectionName) && has(p2.sectionName) && p1.sectionName
                    == p2.sectionName)) && (((!has(p1.port) || p1.port == 0) && (!has(p2.port)
                    || p2.port == 0)) || (has(p1.port) && has(p2.port) && p1.port
                    == p2.port))))
              rules:
                description: Rules are a list of TLS matchers and actions.
                items:
                  description: TLSRouteRule is the configuration for a given rule.
                  properties:
                    backendRefs:
                      description: |-
                        BackendRefs defines the backend(s) where matching requests should be
                        sent. If unspecified or invalid (refers to a non-existent resource or
                        a Service with no endpoints), the rule performs no forwarding; if no
                        filters are specified that would result in a response being sent, the
                        underlying implementation must actively reject request attempts to this
                        backend, by rejecting the connection or returning a 500 status code.
                        Request rejections must respect weight; if an invalid backend is
                        requested to have 80% of requests, then 80% of requests must be rejected
                        instead.


                        Support: Core for Kubernetes Service


                        Support: Extended for Kubernetes ServiceImport


                        Support: Implementation-specific for any other resource


                        Support for weight: Extended
                      items:
                        description: |-
                          BackendRef defines how a Route should forward a request to a Kubernetes
                          resource.


                          Note that when a namespace different than the local namespace is specified, a
                          ReferenceGrant object is required in the referent namespace to allow that
                          namespace's owner to accept the reference. See the ReferenceGrant
                          documentation for details.


                          <gateway:experimental:description>


                          When the BackendRef points to a Kubernetes Service, implementations SHOULD
                          honor the appProtocol field if it is set for the target Service Port.


                          Implementations supporting appProtocol SHOULD recognize the Kubernetes
                          Standard Application Protocols defined in KEP-3726.


                          If a Service appProtocol isn't specified, an implementation MAY infer the
                          backend protocol through its own means. Implementations MAY infer the
                          protocol from the Route type referring to the backend Service.


                          If a Route is not able to send traffic to the backend using the specified
                          protocol then the backend is considered invalid. Implementations MUST set the
                          "ResolvedRefs" condition to "False" with the "UnsupportedProtocol" reason.


                          </gateway:experimental:description>


                          Note that when the BackendTLSPolicy object is enabled by the implementation,
                          there are some extra rules about validity to consider here. See the fields
                          where this struct is used for more information about the exact behavior.
                        properties:
                          group:
                            default: ""
                            description: |-
                              Group is the group of the referent. For example, "gateway.networking.k8s.io".
                              When unspecified or empty string, core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: |-
                              Kind is the Kubernetes resource kind of the referent. For example
                              "Service".


                              Defaults to "Service" when not specified.


                              ExternalName services can refer to CNAME DNS records that may live
                              outside of the cluster and as such are difficult to reason about in
                              terms of conformance. They also may not be safe to forward to (see
                              CVE-2021-25740 for more information). Implementations SHOULD NOT
                              support ExternalName Services.


                              Support: Core (Services with a type other than ExternalName)


                              Support: Implementation-specific (Services with type ExternalName)
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: |-
                              Namespace is the namespace of the backend. When unspecified, the local
                              namespace is inferred.


                              Note that when a namespace different than the local namespace is specified,
                              a ReferenceGrant object is required in the referent namespace to allow that
                              namespace's owner to accept the reference. See the ReferenceGrant
                              documentation for details.


                              Support: Core
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: |-
                              Port specifies the destination port number to use for this resource.
                              Port is required when the referent is a Kubernetes Service. In this
                              case, the port number is the service port number, not the target port.
                              For other resources, destination port might be derived from the referent
                              resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: |-
                              Weight specifies the proportion of requests forwarded to the referenced
                              backend. This is computed as weight/(sum of all weights in this
                              BackendRefs list). For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision an
                              implementation supports. Weight is not a percentage and the sum of
                              weights does not need to equal 100.


                              If only one backend is specified and it has a weight greater than 0, 100%
                              of the traffic is forwarded to that backend. If weight is set to 0, no
                              traffic should be forwarded for this entry. If unspecified, weight
                              defaults to 1.


                              Support for this field varies based on the context where used.
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                        required:
                        - name
                        type: object
                        x-kubernetes-validations:
                        - message: Must have port for Service reference
                          rule: '(size(self.group) == 0 && self.kind == ''Service'')
                            ? has(self.port) : true'
                      maxItems: 16
                      minItems: 1
                      type: array
                  type: object
                maxItems: 16
                minItems: 1
                type: array
            required:
            - rules
            type: object
          status:
            description: Status defines the current state of TLSRoute.
            properties:
              parents:
                description: |-
                  Parents is a list of parent resources (usually Gateways) that are
                  associated with the route, and the status of the route with respect to
                  each parent. When this route attaches to a parent, the controller that
                  manages the parent must add an entry to this list when the controller
                  first sees the route and should update the entry as appropriate when the
                  route or gateway is modified.


                  Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this API
                  can only populate Route status for the Gateways/parent resources they are
                  responsible for.


                  A maximum of 32 Gateways will be represented in this list. An empty list
                  means the route has not been attached to any Gateway.
                items:
                  description: |-
                    RouteParentStatus describes the status of a route with respect to an
                    associated Parent.
                  properties:
                    conditions:
                      description: |-
                        Conditions describes the status of the route with respect to the Gateway.
                        Note that the route's availability is also subject to the Gateway's own
                        status conditions and listener status.


                        If the Route's ParentRef specifies an existing Gateway that supports
                        Routes of this kind AND that Gateway's controller has sufficient access,
                        then that Gateway's controller MUST set the "Accepted" condition on the
                        Route, to indicate whether the route has been accepted or rejected by the
                        Gateway, and why.


                        A Route MUST be considered "Accepted" if at least one of the Route's
                        rules is implemented by the Gateway.


                        There are a number of cases where the "Accepted" condition may not be set
                        due to lack of controller visibility, that includes when:


                        * The Route refers to a non-existent parent.
                        * The Route is of a type that the controller does not support.
                        * The Route is in a namespace the controller does not have access to.
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource.\n---\nThis struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example,\n\n\n\ttype FooStatus
                          struct{\n\t    // Represents the observations of a foo's
                          current state.\n\t    // Known .status.conditions.type are:
                          \"Available\", \"Progressing\", and \"Degraded\"\n\t    //
                          +patchMergeKey=type\n\t    // +patchStrategy=merge\n\t    //
                          +listType=map\n\t    // +listMapKey=type\n\t    Conditions
                          []metav1.Condition `json:\"conditions,omitempty\" patchStrategy:\"merge\"
                          patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`\n\n\n\t
                          \   // other fields\n\t}"
                        properties:
                          lastTransitionTime:
                            description: |-
                              lastTransitionTime is the last time the condition transitioned from one status to another.
                              This should be when the underlying condition changed.  If that is not known, then using the time when the API field changed is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: |-
                              message is a human readable message indicating details about the transition.
                              This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: |-
                              observedGeneration represents the .metadata.generation that the condition was set based upon.
                              For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date
                              with respect to the current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: |-
                              reason contains a programmatic identifier indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected values and meanings for this field,
                              and whether the values are considered a guaranteed API.
                              The value should be a CamelCase string.
                              This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: |-
                              type of condition in CamelCase or in foo.example.com/CamelCase.
                              ---
                              Many .condition.type values are consistent across resources like Available, but because arbitrary conditions can be
                              useful (see .node.status.conditions), the ability to deconflict is important.
                              The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: |-
                        ControllerName is a domain/path string that indicates the name of the
                        controller that wrote this status. This corresponds with the
                        controllerName field on GatewayClass.


                        Example: "example.net/gateway-controller".


                        The format of this field is DOMAIN "/" PATH, where DOMAIN and PATH are
                        valid Kubernetes names
                        (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).


                        Controllers MUST populate this field when writing status. Controllers should ensure that
                        entries to status populated with their ControllerName are cleaned up when they are no
                        longer necessary.
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: |-
                        ParentRef corresponds with a ParentRef in the spec that this
                        RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: gateway.networking.k8s.io
                          description: |-
                            Group is the group of the referent.
                            When unspecified, "gateway.networking.k8s.io" is inferred.
                            To set the core API group (such as for a "Service" kind referent),
                            Group must be explicitly set to "" (empty string).


                            Support: Core
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: |-
                            Kind is kind of the referent.


                            There are two kinds of parent resources with "Core" support:


                            * Gateway (Gateway conformance profile)
                            * Service (Mesh conformance profile, ClusterIP Services only)


                            Support for other resources is Implementation-Specific.
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: |-
                            Name is the name of the referent.


                            Support: Core
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: |-
                            Namespace is the namespace of the referent. When unspecified, this refers
                            to the local namespace of the Route.


                            Note that there are specific rules for ParentRefs which cross namespace
                            boundaries. Cross-namespace references are only valid if they are explicitly
                            allowed by something in the namespace they are referring to. For example:
                            Gateway has the AllowedRoutes field, and ReferenceGrant provides a
                            generic way to enable any other kind of cross-namespace reference.



                            ParentRefs from a Route to a Service in the same namespace are "producer"
                            routes, which apply default routing rules to inbound connections from
                            any namespace to the Service.


                            ParentRefs from a Route to a Service in a different namespace are
                            "consumer" routes, and these routing rules are only applied to outbound
                            connections originating from the same namespace as the Route, for which
                            the intended destination of the connections are a Service targeted as a
                            ParentRef of the Route.



                            Support: Core
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: |-
                            Port is the network port this Route targets. It can be interpreted
                            differently based on the type of parent resource.


                            When the parent resource is a Gateway, this targets all listeners
                            listening on the specified port that also support this kind of Route(and
                            select this Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to a specific port
                            as opposed to a listener(s) whose port(s) may be changed. When both Port
                            and SectionName are specified, the name and port of the selected listener
                            must match both specified values.



                            When the parent resource is a Service, this targets a specific port in the
                            Service spec. When both Port (experimental) and SectionName are specified,
                            the name and port of the selected port must match both specified values.



                            Implementations MAY choose to support other parent resources.
                            Implementations supporting other types of parent resources MUST clearly
                            document how/if Port is interpreted.


                            For the purpose of status, an attachment is considered successful as
                            long as the parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment
                            from the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.


                            Support: Extended
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: |-
                            SectionName is the name of a section within the target resource. In the
                            following resources, SectionName is interpreted as the following:


                            * Gateway: Listener name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.
                            * Service: Port name. When both Port (experimental) and SectionName
                            are specified, the name and port of the selected listener must match
                            both specified values.


                            Implementations MAY choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName is
                            interpreted.


                            When unspecified (empty string), this will reference the entire resource.
                            For the purpose of status, an attachment is considered successful if at
                            least one section in the parent resource accepts it. For example, Gateway
                            listeners can restrict which Routes can attach to them by Route kind,
                            namespace, or hostname. If 1 of 2 Gateway listeners accept attachment from
                            the referencing Route, the Route MUST be considered successfully
                            attached. If no Gateway listeners accept attachment from this Route, the
                            Route MUST be considered detached from the Gateway.


                            Support: Core
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: null
  storedVersions: null
---
# Source: linkerd-crds/templates/policy/authorization-policy.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: authorizationpolicies.policy.linkerd.io
  annotations:
    linkerd.io/created-by: linkerd/helm %!s(<nil>)
  labels:
    helm.sh/chart: linkerd-crds-2025.5.4
    linkerd.io/control-plane-ns: linkerd
spec:
  group: policy.linkerd.io
  scope: Namespaced
  names:
    kind: AuthorizationPolicy
    plural: authorizationpolicies
    singular: authorizationpolicy
    shortNames: [authzpolicy]
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          required: [spec]
          properties:
            spec:
              description: >-
                Authorizes clients to communicate with Linkerd-proxied server
                resources.
              type: object
              required: [targetRef, requiredAuthenticationRefs]
              properties:
                targetRef:
                  description: >-
                    TargetRef references a resource to which the authorization
                    policy applies.
                  type: object
                  required: [kind, name]
                  # Modified from the gateway API.
                  # Copyright 2020 The Kubernetes Authors
                  properties:
                    group:
                      description: >-
                        Group is the group of the referent. When empty, the
                        Kubernetes core API group is inferred.
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: >-
                        Kind is the kind of the referent.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: Name is the name of the referent.
                      maxLength: 253
                      minLength: 1
                      type: string
                requiredAuthenticationRefs:
                  description: >-
                    RequiredAuthenticationRefs enumerates a set of required
                    authentications. ALL authentications must be satisfied for
                    the authorization to apply. If any of the referred objects
                    cannot be found, the authorization will be ignored.
                  type: array
                  items:
                    type: object
                    required: [kind, name]
                    properties:
                      group:
                        description: >-
                          Group is the group of the referent. When empty, the
                          Kubernetes core API group is inferred."
                        maxLength: 253
                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      kind:
                        description: >-
                          Kind is the kind of the referent.
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                        type: string
                      name:
                        description: >-
                          Name is the name of the referent.
                        maxLength: 253
                        minLength: 1
                        type: string
                      namespace:
                        description: >-
                          Name is the name of the referent. When unspecified,
                          this authentication refers to the local namespace.
                        maxLength: 253
                        type: string
---
# Source: linkerd-crds/templates/policy/egress-network.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: egressnetworks.policy.linkerd.io
  annotations:
    linkerd.io/created-by: linkerd/helm %!s(<nil>)
  labels:
    helm.sh/chart: linkerd-crds-2025.5.4
    linkerd.io/control-plane-ns: linkerd
spec:
  group: policy.linkerd.io
  names:
    categories:
    - policy
    kind: EgressNetwork
    listKind: EgressNetworkList
    plural: egressnetworks
    singular: egressnetwork
  scope: Namespaced
  versions:
  - name: v1alpha1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        description: >-
          An EgressNetwork captures traffic to egress destinations
        type: object
        required: [spec]
        properties:
          apiVerson:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            properties:
              trafficPolicy:
                description: >-
                  This field controls the traffic policy enforced upon traffic
                  that does not match any explicit route resources associated
                  with an instance of this object. The values that are allowed
                  currently are:
                   - Allow - permits all traffic, even if it has not been
                                explicitly described via attaching an xRoute
                                resources.
                   - Deny -  blocks all traffic that has not been described via
                                attaching an xRoute resource.
                type: string
                enum:
                - Allow
                - Deny
              networks:
                type: array
                items:
                  type: object
                  required: [cidr]
                  properties:
                    cidr:
                      description: >-
                        The CIDR of the network to be authorized.
                      type: string
                    except:
                      description: >-
                        A list of IP networks/addresses not to be included in
                        the above `cidr`.
                      type: array
                      items:
                        type: string
            type: object
            required:
            - trafficPolicy
          status:
            type: object
            properties:
              conditions:
                type: array
                items:
                  type: object
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the
                        condition transitioned from one status to another.
                      format: date-time
                      type: string
                    status:
                      description: status of the condition (one of True, False, Unknown)
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of the condition in CamelCase or in
                        foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                    reason:
                      description: reason contains a programmatic identifier
                        indicating the reason for the condition's last
                        transition. Producers of specific condition types may
                        define expected values and meanings for this field, and
                        whether the values are considered a guaranteed API. The
                        value should be a CamelCase string. This field may not
                        be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    message:
                      description: message is a human readable message
                        indicating details about the transition. This may be an
                        empty string.
                      maxLength: 32768
                      type: string
                required:
                - status
                - type
---
# Source: linkerd-crds/templates/policy/http-local-ratelimit-policy.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: httplocalratelimitpolicies.policy.linkerd.io
  annotations:
    linkerd.io/created-by: linkerd/helm %!s(<nil>)
  labels:
    helm.sh/chart: linkerd-crds-2025.5.4
    linkerd.io/control-plane-ns: linkerd
spec:
  group: policy.linkerd.io
  names:
    kind: HTTPLocalRateLimitPolicy
    listKind: HTTPLocalRateLimitPolicyList
    plural: httplocalratelimitpolicies
    singular: httplocalratelimitpolicy
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: true
      subresources:
        status: {}
      schema:
        openAPIV3Schema:
          type: object
          required: [spec]
          properties:
            spec:
              type: object
              required: [targetRef]
              properties:
                targetRef:
                  description: >-
                    TargetRef references a resource to which the rate limit
                    policy applies. Only Server is allowed.
                  type: object
                  required: [kind, name]
                  properties:
                    group:
                      description: >-
                        Group is the group of the referent. When empty, the
                        Kubernetes core API group is inferred.
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      description: Kind is the kind of the referent.
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: Name is the name of the referent.
                      maxLength: 253
                      minLength: 1
                      type: string
                total:
                  description: >-
                    Overall rate-limit, which all traffic coming to this
                    target should abide.
                    If unset no overall limit is applied.
                  type: object
                  required: [requestsPerSecond]
                  properties:
                    requestsPerSecond:
                      format: int64
                      type: integer
                identity:
                  description: >-
                    Fairness for individual identities; each separate client,
                    grouped by identity, will have this rate-limit. The
                    requestsPerSecond value should be less than or equal to the
                    total requestsPerSecond (if set).
                  type: object
                  required: [requestsPerSecond]
                  properties:
                    requestsPerSecond:
                      format: int64
                      type: integer
                overrides:
                  description: >-
                    Overrides for traffic from a specific client. The
                    requestsPerSecond value should be less than or equal to the
                    total requestsPerSecond (if set).
                  type: array
                  items:
                    type: object
                    required: [requestsPerSecond, clientRefs]
                    properties:
                      requestsPerSecond:
                        format: int64
                        type: integer
                      clientRefs:
                        type: array
                        items:
                          type: object
                          required: [kind, name]
                          properties:
                            group:
                              description: >-
                                Group is the group of the referent. When empty, the
                                Kubernetes core API group is inferred.
                              maxLength: 253
                              pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                              type: string
                            kind:
                              description: Kind is the kind of the referent.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                              type: string
                            namespace:
                              description: >-
                                  Namespace is the namespace of the referent.
                                  When unspecified (or empty string), this refers to the
                                  local namespace of the Policy.
                              maxLength: 63
                              minLength: 1
                              pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                              type: string
                            name:
                              description: Name is the name of the referent.
                              maxLength: 253
                              minLength: 1
                              type: string
            status:
              type: object
              properties:
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      lastTransitionTime:
                        description: lastTransitionTime is the last time the
                          condition transitioned from one status to another.
                        format: date-time
                        type: string
                      status:
                        description: status of the condition (one of True, False, Unknown)
                        enum:
                        - "True"
                        - "False"
                        - Unknown
                        type: string
                      type:
                        description: type of the condition in CamelCase or in
                          foo.example.com/CamelCase.
                        maxLength: 316
                        pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                        type: string
                      reason:
                        description: reason contains a programmatic identifier
                          indicating the reason for the condition's last
                          transition. Producers of specific condition types may
                          define expected values and meanings for this field, and
                          whether the values are considered a guaranteed API. The
                          value should be a CamelCase string. This field may not
                          be empty.
                        maxLength: 1024
                        minLength: 1
                        pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                        type: string
                      message:
                        description: message is a human readable message
                          indicating details about the transition. This may be an
                          empty string.
                        maxLength: 32768
                        type: string
                  required:
                  - status
                  - type
                targetRef:
                  properties:
                    group:
                      default: policy.linkerd.io
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Server
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      maxLength: 253
                      minLength: 1
                      type: string
                  required:
                  - name
                  type: object
              required:
              - targetRef
      additionalPrinterColumns:
      - name: Target_kind
        description: The resource kind to which the rate-limit applies
        type: string
        jsonPath: .spec.targetRef.kind
      - name: Target_name
        type: string
        description: The resource name to which the rate-limit applies
        jsonPath: .spec.targetRef.name
      - name: Total_RPS
        description: The overall rate-limit
        type: integer
        format: int32
        jsonPath: .spec.total.requestsPerSecond
      - name: Identity_RPS
        description: The rate-limit per identity
        type: integer
        format: int32
        jsonPath: .spec.identity.requestsPerSecond
---
# Source: linkerd-crds/templates/policy/httproute.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: httproutes.policy.linkerd.io
  annotations:
    linkerd.io/created-by: linkerd/helm %!s(<nil>)
  labels:
    helm.sh/chart: linkerd-crds-2025.5.4
    linkerd.io/control-plane-ns: linkerd
spec:
  group: policy.linkerd.io
  names:
    kind: HTTPRoute
    listKind: HTTPRouteList
    plural: httproutes
    singular: httproute
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.hostnames
      name: Hostnames
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: HTTPRoute provides a way to route HTTP requests. This includes
          the capability to match requests by hostname, path, header, or query param.
          Filters can be used to specify additional processing steps. Backends specify
          where matching requests should be routed.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of HTTPRoute.
            properties:
              hostnames:
                description: "Hostnames defines a set of hostname that should match
                  against the HTTP Host header to select a HTTPRoute to process the
                  request. This matches the RFC 1123 definition of a hostname with
                  2 notable exceptions: \n 1. IPs are not allowed. 2. A hostname may
                  be prefixed with a wildcard label (`*.`). The wildcard    label
                  must appear by itself as the first label. \n If a hostname is specified
                  by both the Listener and HTTPRoute, there must be at least one intersecting
                  hostname for the HTTPRoute to be attached to the Listener. For example:
                  \n * A Listener with `test.example.com` as the hostname matches
                  HTTPRoutes   that have either not specified any hostnames, or have
                  specified at   least one of `test.example.com` or `*.example.com`.
                  * A Listener with `*.example.com` as the hostname matches HTTPRoutes
                  \  that have either not specified any hostnames or have specified
                  at least   one hostname that matches the Listener hostname. For
                  example,   `*.example.com`, `test.example.com`, and `foo.test.example.com`
                  would   all match. On the other hand, `example.com` and `test.example.net`
                  would   not match. \n Hostnames that are prefixed with a wildcard
                  label (`*.`) are interpreted as a suffix match. That means that
                  a match for `*.example.com` would match both `test.example.com`,
                  and `foo.test.example.com`, but not `example.com`. \n If both the
                  Listener and HTTPRoute have specified hostnames, any HTTPRoute hostnames
                  that do not match the Listener hostname MUST be ignored. For example,
                  if a Listener specified `*.example.com`, and the HTTPRoute specified
                  `test.example.com` and `test.example.net`, `test.example.net` must
                  not be considered for a match. \n If both the Listener and HTTPRoute
                  have specified hostnames, and none match with the criteria above,
                  then the HTTPRoute is not accepted. The implementation must raise
                  an 'Accepted' Condition with a status of `False` in the corresponding
                  RouteParentStatus. \n Support: Core"
                items:
                  description: "Hostname is the fully qualified domain name of a network
                    host. This matches the RFC 1123 definition of a hostname with
                    2 notable exceptions: \n 1. IPs are not allowed. 2. A hostname
                    may be prefixed with a wildcard label (`*.`). The wildcard    label
                    must appear by itself as the first label. \n Hostname can be \"precise\"
                    which is a domain name without the terminating dot of a network
                    host (e.g. \"foo.example.com\") or \"wildcard\", which is a domain
                    name prefixed with a single wildcard label (e.g. `*.example.com`).
                    \n Note that as per RFC1035 and RFC1123, a *label* must consist
                    of lower case alphanumeric characters or '-', and must start and
                    end with an alphanumeric character. No other punctuation is allowed."
                  maxLength: 253
                  minLength: 1
                  pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                maxItems: 16
                type: array
              parentRefs:
                description: "ParentRefs references the resources (usually Gateways)
                  that a Route wants to be attached to. Note that the referenced parent
                  resource needs to allow this for the attachment to be complete.
                  For Gateways, that means the Gateway needs to allow attachment from
                  Routes of this kind and namespace. \n The only kind of parent resource
                  with \"Core\" support is Gateway. This API may be extended in the
                  future to support additional kinds of parent resources such as one
                  of the route kinds. \n It is invalid to reference an identical parent
                  more than once. It is valid to reference multiple distinct sections
                  within the same parent resource, such as 2 Listeners within a Gateway.
                  \n It is possible to separately reference multiple distinct objects
                  that may be collapsed by an implementation. For example, some implementations
                  may choose to merge compatible Gateway Listeners together. If that
                  is the case, the list of routes attached to those resources should
                  also be merged."
                items:
                  description: "ParentReference identifies an API object (usually
                    a Gateway) that can be considered a parent of this resource (usually
                    a route). The only kind of parent resource with \"Core\" support
                    is Gateway. This API may be extended in the future to support
                    additional kinds of parent resources, such as HTTPRoute. \n The
                    API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid."
                  properties:
                    group:
                      default: policy.linkerd.io
                      description: "Group is the group of the referent. \n Support:
                        Core"
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: "Kind is kind of the referent. \n Support: Core
                        (Gateway) Support: Custom (Other Resources)"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: "Name is the name of the referent. \n Support:
                        Core"
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: "Namespace is the namespace of the referent. When
                        unspecified (or empty string), this refers to the local namespace
                        of the Route. \n Support: Core"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: "port"
                      type: integer
                    sectionName:
                      description: "SectionName is the name of a section within the
                        target resource. In the following resources, SectionName is
                        interpreted as the following: \n * Gateway: Listener Name.
                        When both Port (experimental) and SectionName are specified,
                        the name and port of the selected listener must match both
                        specified values. \n Implementations MAY choose to support
                        attaching Routes to other resources. If that is the case,
                        they MUST clearly document how SectionName is interpreted.
                        \n When unspecified (empty string), this will reference the
                        entire resource. For the purpose of status, an attachment
                        is considered successful if at least one section in the parent
                        resource accepts it. For example, Gateway listeners can restrict
                        which Routes can attach to them by Route kind, namespace,
                        or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this
                        Route, the Route MUST be considered detached from the Gateway.
                        \n Support: Core"
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
              rules:
                default:
                - matches:
                  - path:
                      type: PathPrefix
                      value: /
                description: Rules are a list of HTTP matchers, filters and actions.
                items:
                  description: HTTPRouteRule defines semantics for matching an HTTP
                    request based on conditions (matches) and processing it (filters).
                  properties:
                    backendRefs:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          port:
                            type: integer
                          namespace:
                            type: string
                            default: "default"
                          filters:
                            description: "Filters defined at this level should be
                              executed if and only if the request is being forwarded
                              to the backend defined here. \n Support: Implementation-specific
                              (For broader support of filters, use the Filters field
                              in HTTPRouteRule.)"
                            items:
                              description: HTTPRouteFilter defines processing steps
                                that must be completed during the request or response
                                lifecycle. HTTPRouteFilters are meant as an extension
                                point to express processing that may be done in Gateway
                                implementations. Some examples include request or
                                response modification, implementing authentication
                                strategies, rate-limiting, and traffic shaping. API
                                guarantee/conformance is defined based on the type
                                of the filter.
                              properties:
                                requestHeaderModifier:
                                  description: "RequestHeaderModifier defines a schema
                                    for a filter that modifies request headers. \n
                                    Support: Core"
                                  properties:
                                    add:
                                      description: "Add adds the given header(s) (name,
                                        value) to the request before the action. It
                                        appends to any existing values associated
                                        with the header name. \n Input: GET /foo HTTP/1.1
                                        my-header: foo \n Config: add: - name: \"my-header\"
                                        value: \"bar,baz\" \n Output: GET /foo HTTP/1.1
                                        my-header: foo,bar,baz"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: "Remove the given header(s) from
                                        the HTTP request before the action. The value
                                        of Remove is a list of HTTP header names.
                                        Note that the header names are case-insensitive
                                        (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                        \n Input: GET /foo HTTP/1.1 my-header1: foo
                                        my-header2: bar my-header3: baz \n Config:
                                        remove: [\"my-header1\", \"my-header3\"] \n
                                        Output: GET /foo HTTP/1.1 my-header2: bar"
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                    set:
                                      description: "Set overwrites the request with
                                        the given header (name, value) before the
                                        action. \n Input: GET /foo HTTP/1.1 my-header:
                                        foo \n Config: set: - name: \"my-header\"
                                        value: \"bar\" \n Output: GET /foo HTTP/1.1
                                        my-header: bar"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                requestRedirect:
                                  description: "RequestRedirect defines a schema for
                                    a filter that responds to the request with an
                                    HTTP redirection. \n Support: Core"
                                  properties:
                                    hostname:
                                      description: "Hostname is the hostname to be
                                        used in the value of the `Location` header
                                        in the response. When empty, the hostname
                                        in the `Host` header of the request is used.
                                        \n Support: Core"
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: "Path defines parameters used to
                                        modify the path of the incoming request. The
                                        modified path is then used to construct the
                                        `Location` header. When empty, the request
                                        path is used as-is. \n Support: Extended"
                                      properties:
                                        replaceFullPath:
                                          description: ReplaceFullPath specifies the
                                            value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: "ReplacePrefixMatch specifies
                                            the value with which to replace the prefix
                                            match of a request during a rewrite or
                                            redirect. For example, a request to \"/foo/bar\"
                                            with a prefix match of \"/foo\" and a
                                            ReplacePrefixMatch of \"/xyz\" would be
                                            modified to \"/xyz/bar\". \n Note that
                                            this matches the behavior of the PathPrefix
                                            match type. This matches full path elements.
                                            A path element refers to the list of labels
                                            in the path split by the `/` separator.
                                            When specified, a trailing `/` is ignored.
                                            For example, the paths `/abc`, `/abc/`,
                                            and `/abc/def` would all match the prefix
                                            `/abc`, but the path `/abcd` would not.
                                            \n Request Path | Prefix Match | Replace
                                            Prefix | Modified Path -------------|--------------|----------------|----------
                                            /foo/bar     | /foo         | /xyz           |
                                            /xyz/bar /foo/bar     | /foo         |
                                            /xyz/          | /xyz/bar /foo/bar     |
                                            /foo/        | /xyz           | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz/          |
                                            /xyz/bar /foo         | /foo         |
                                            /xyz           | /xyz /foo/        | /foo
                                            \        | /xyz           | /xyz/ /foo/bar
                                            \    | /foo         | <empty string> |
                                            /bar /foo/        | /foo         | <empty
                                            string> | / /foo         | /foo         |
                                            <empty string> | / /foo/        | /foo
                                            \        | /              | / /foo         |
                                            /foo         | /              | /"
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: "Type defines the type of path
                                            modifier. Additional types may be added
                                            in a future release of the API. \n Note
                                            that values may be added to this enum,
                                            implementations must ensure that unknown
                                            values will not cause a crash. \n Unknown
                                            values here must result in the implementation
                                            setting the Accepted Condition for the
                                            Route to `status: False`, with a Reason
                                            of `UnsupportedValue`."
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    port:
                                      description: "Port is the port to be used in
                                        the value of the `Location` header in the
                                        response. \n If no port is specified, the
                                        redirect port MUST be derived using the following
                                        rules: \n * If redirect scheme is not-empty,
                                        the redirect port MUST be the well-known port
                                        associated with the redirect scheme. Specifically
                                        \"http\" to port 80 and \"https\" to port
                                        443. If the redirect scheme does not have
                                        a well-known port, the listener port of the
                                        Gateway SHOULD be used. * If redirect scheme
                                        is empty, the redirect port MUST be the Gateway
                                        Listener port. \n Implementations SHOULD NOT
                                        add the port number in the 'Location' header
                                        in the following cases: \n * A Location header
                                        that will use HTTP (whether that is determined
                                        via the Listener protocol or the Scheme field)
                                        _and_ use port 80. * A Location header that
                                        will use HTTPS (whether that is determined
                                        via the Listener protocol or the Scheme field)
                                        _and_ use port 443. \n Support: Extended"
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                    scheme:
                                      description: "Scheme is the scheme to be used
                                        in the value of the `Location` header in the
                                        response. When empty, the scheme of the request
                                        is used. \n Scheme redirects can affect the
                                        port of the redirect, for more information,
                                        refer to the documentation for the port field
                                        of this filter. \n Note that values may be
                                        added to this enum, implementations must ensure
                                        that unknown values will not cause a crash.
                                        \n Unknown values here must result in the
                                        implementation setting the Accepted Condition
                                        for the Route to `status: False`, with a Reason
                                        of `UnsupportedValue`. \n Support: Extended"
                                      enum:
                                      - http
                                      - https
                                      type: string
                                    statusCode:
                                      default: 302
                                      description: "StatusCode is the HTTP status
                                        code to be used in response. \n Note that
                                        values may be added to this enum, implementations
                                        must ensure that unknown values will not cause
                                        a crash. \n Unknown values here must result
                                        in the implementation setting the Accepted
                                        Condition for the Route to `status: False`,
                                        with a Reason of `UnsupportedValue`. \n Support:
                                        Core"
                                      enum:
                                      - 301
                                      - 302
                                      type: integer
                                  type: object
                                responseHeaderModifier:
                                  description: "ResponseHeaderModifier defines a schema
                                    for a filter that modifies response headers. \n
                                    Support: Extended"
                                  properties:
                                    add:
                                      description: "Add adds the given header(s) (name,
                                        value) to the request before the action. It
                                        appends to any existing values associated
                                        with the header name. \n Input: GET /foo HTTP/1.1
                                        my-header: foo \n Config: add: - name: \"my-header\"
                                        value: \"bar,baz\" \n Output: GET /foo HTTP/1.1
                                        my-header: foo,bar,baz"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: "Remove the given header(s) from
                                        the HTTP request before the action. The value
                                        of Remove is a list of HTTP header names.
                                        Note that the header names are case-insensitive
                                        (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                        \n Input: GET /foo HTTP/1.1 my-header1: foo
                                        my-header2: bar my-header3: baz \n Config:
                                        remove: [\"my-header1\", \"my-header3\"] \n
                                        Output: GET /foo HTTP/1.1 my-header2: bar"
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                    set:
                                      description: "Set overwrites the request with
                                        the given header (name, value) before the
                                        action. \n Input: GET /foo HTTP/1.1 my-header:
                                        foo \n Config: set: - name: \"my-header\"
                                        value: \"bar\" \n Output: GET /foo HTTP/1.1
                                        my-header: bar"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                type:
                                  description: "Type identifies the type of filter
                                    to apply. As with other API fields, types are
                                    classified into three conformance levels: \n -
                                    Core: Filter types and their corresponding configuration
                                    defined by \"Support: Core\" in this package,
                                    e.g. \"RequestHeaderModifier\". All implementations
                                    must support core filters. \n - Extended: Filter
                                    types and their corresponding configuration defined
                                    by \"Support: Extended\" in this package, e.g.
                                    \"RequestMirror\". Implementers are encouraged
                                    to support extended filters. \n - Implementation-specific:
                                    Filters that are defined and supported by specific
                                    vendors. In the future, filters showing convergence
                                    in behavior across multiple implementations will
                                    be considered for inclusion in extended or core
                                    conformance levels. Filter-specific configuration
                                    for such filters is specified using the ExtensionRef
                                    field. `Type` should be set to \"ExtensionRef\"
                                    for custom filters. \n Implementers are encouraged
                                    to define custom implementation types to extend
                                    the core API with implementation-specific behavior.
                                    \n If a reference to a custom filter type cannot
                                    be resolved, the filter MUST NOT be skipped. Instead,
                                    requests that would have been processed by that
                                    filter MUST receive a HTTP error response. \n
                                    Note that values may be added to this enum, implementations
                                    must ensure that unknown values will not cause
                                    a crash. \n Unknown values here must result in
                                    the implementation setting the Accepted Condition
                                    for the Route to `status: False`, with a Reason
                                    of `UnsupportedValue`."
                                  enum:
                                  - RequestHeaderModifier
                                  - ResponseHeaderModifier
                                  - RequestRedirect
                                  type: string
                              required:
                              - type
                              type: object
                            maxItems: 16
                            type: array
                    filters:
                      description: "Filters define the filters that are applied to
                        requests that match this rule. \n The effects of ordering
                        of multiple behaviors are currently unspecified. This can
                        change in the future based on feedback during the alpha stage.
                        \n Conformance-levels at this level are defined based on the
                        type of filter: \n - ALL core filters MUST be supported by
                        all implementations. - Implementers are encouraged to support
                        extended filters. - Implementation-specific custom filters
                        have no API guarantees across   implementations. \n Specifying
                        a core filter multiple times has unspecified or custom conformance.
                        \n All filters are expected to be compatible with each other
                        except for the URLRewrite and RequestRedirect filters, which
                        may not be combined. If an implementation can not support
                        other combinations of filters, they must clearly document
                        that limitation. In all cases where incompatible or unsupported
                        filters are specified, implementations MUST add a warning
                        condition to status. \n Support: Core"
                      items:
                        description: HTTPRouteFilter defines processing steps that
                          must be completed during the request or response lifecycle.
                          HTTPRouteFilters are meant as an extension point to express
                          processing that may be done in Gateway implementations.
                          Some examples include request or response modification,
                          implementing authentication strategies, rate-limiting, and
                          traffic shaping. API guarantee/conformance is defined based
                          on the type of the filter.
                        properties:
                          requestHeaderModifier:
                            description: "RequestHeaderModifier defines a schema for
                              a filter that modifies request headers. \n Support:
                              Core"
                            properties:
                              add:
                                description: "Add adds the given header(s) (name,
                                  value) to the request before the action. It appends
                                  to any existing values associated with the header
                                  name. \n Input:   GET /foo HTTP/1.1   my-header:
                                  foo \n Config:   add:   - name: \"my-header\"     value:
                                  \"bar\" \n Output:   GET /foo HTTP/1.1   my-header:
                                  foo   my-header: bar"
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: "Name is the name of the HTTP Header
                                        to be matched. Name matching MUST be case
                                        insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                        \n If multiple entries specify equivalent
                                        header names, the first entry with an equivalent
                                        name MUST be considered for a match. Subsequent
                                        entries with an equivalent header name MUST
                                        be ignored. Due to the case-insensitivity
                                        of header names, \"foo\" and \"Foo\" are considered
                                        equivalent."
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: "Remove the given header(s) from the
                                  HTTP request before the action. The value of Remove
                                  is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                  \n Input:   GET /foo HTTP/1.1   my-header1: foo
                                  \  my-header2: bar   my-header3: baz \n Config:
                                  \  remove: [\"my-header1\", \"my-header3\"] \n Output:
                                  \  GET /foo HTTP/1.1   my-header2: bar"
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                              set:
                                description: "Set overwrites the request with the
                                  given header (name, value) before the action. \n
                                  Input:   GET /foo HTTP/1.1   my-header: foo \n Config:
                                  \  set:   - name: \"my-header\"     value: \"bar\"
                                  \n Output:   GET /foo HTTP/1.1   my-header: bar"
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: "Name is the name of the HTTP Header
                                        to be matched. Name matching MUST be case
                                        insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                        \n If multiple entries specify equivalent
                                        header names, the first entry with an equivalent
                                        name MUST be considered for a match. Subsequent
                                        entries with an equivalent header name MUST
                                        be ignored. Due to the case-insensitivity
                                        of header names, \"foo\" and \"Foo\" are considered
                                        equivalent."
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          requestRedirect:
                            description: "RequestRedirect defines a schema for a filter
                              that responds to the request with an HTTP redirection.
                              \n Support: Core"
                            properties:
                              hostname:
                                description: "Hostname is the hostname to be used
                                  in the value of the `Location` header in the response.
                                  When empty, the hostname of the request is used.
                                  \n Support: Core"
                                maxLength: 253
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              path:
                                description: "Path defines parameters used to
                                  modify the path of the incoming request. The
                                  modified path is then used to construct the
                                  `Location` header. When empty, the request
                                  path is used as-is. \n Support: Extended"
                                properties:
                                  replaceFullPath:
                                    description: ReplaceFullPath specifies the
                                      value with which to replace the full path
                                      of a request during a rewrite or redirect.
                                    maxLength: 1024
                                    type: string
                                  replacePrefixMatch:
                                    description: "ReplacePrefixMatch specifies
                                      the value with which to replace the prefix
                                      match of a request during a rewrite or
                                      redirect. For example, a request to \"/foo/bar\"
                                      with a prefix match of \"/foo\" and a
                                      ReplacePrefixMatch of \"/xyz\" would be
                                      modified to \"/xyz/bar\". \n Note that
                                      this matches the behavior of the PathPrefix
                                      match type. This matches full path elements.
                                      A path element refers to the list of labels
                                      in the path split by the `/` separator.
                                      When specified, a trailing `/` is ignored.
                                      For example, the paths `/abc`, `/abc/`,
                                      and `/abc/def` would all match the prefix
                                      `/abc`, but the path `/abcd` would not.
                                      \n Request Path | Prefix Match | Replace
                                      Prefix | Modified Path -------------|--------------|----------------|----------
                                      /foo/bar     | /foo         | /xyz           |
                                      /xyz/bar /foo/bar     | /foo         |
                                      /xyz/          | /xyz/bar /foo/bar     |
                                      /foo/        | /xyz           | /xyz/bar
                                      /foo/bar     | /foo/        | /xyz/          |
                                      /xyz/bar /foo         | /foo         |
                                      /xyz           | /xyz /foo/        | /foo
                                      \        | /xyz           | /xyz/ /foo/bar
                                      \    | /foo         | <empty string> |
                                      /bar /foo/        | /foo         | <empty
                                      string> | / /foo         | /foo         |
                                      <empty string> | / /foo/        | /foo
                                      \        | /              | / /foo         |
                                      /foo         | /              | /"
                                    maxLength: 1024
                                    type: string
                                  type:
                                    description: "Type defines the type of path
                                      modifier. Additional types may be added
                                      in a future release of the API. \n Note
                                      that values may be added to this enum,
                                      implementations must ensure that unknown
                                      values will not cause a crash. \n Unknown
                                      values here must result in the implementation
                                      setting the Accepted Condition for the
                                      Route to `status: False`, with a Reason
                                      of `UnsupportedValue`."
                                    enum:
                                    - ReplaceFullPath
                                    - ReplacePrefixMatch
                                    type: string
                                required:
                                - type
                                type: object
                              port:
                                description: "Port is the port to be used in the value
                                  of the `Location` header in the response. When empty,
                                  port (if specified) of the request is used. \n Support:
                                  Extended"
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              scheme:
                                description: "Scheme is the scheme to be used in the
                                  value of the `Location` header in the response.
                                  When empty, the scheme of the request is used. \n
                                  Support: Extended"
                                enum:
                                - http
                                - https
                                type: string
                              statusCode:
                                default: 302
                                description: "StatusCode is the HTTP status code to
                                  be used in response. \n Support: Core"
                                enum:
                                - 301
                                - 302
                                type: integer
                            type: object
                          type:
                            description: "Type identifies the type of filter to apply.
                              As with other API fields, types are classified into
                              three conformance levels: \n - Core: Filter types and
                              their corresponding configuration defined by   \"Support:
                              Core\" in this package, e.g. \"RequestHeaderModifier\".
                              All   implementations must support core filters. \n\n "
                            enum:
                            - RequestHeaderModifier
                            - RequestRedirect
                            type: string
                        required:
                        - type
                        type: object
                      maxItems: 16
                      type: array
                    matches:
                      default:
                      - path:
                          type: PathPrefix
                          value: /
                      description: "Matches define conditions used for matching the
                        rule against incoming HTTP requests. Each match is independent,
                        i.e. this rule will be matched if **any** one of the matches
                        is satisfied. \n For example, take the following matches configuration:
                        \n ``` matches: - path:     value: \"/foo\"   headers:   -
                        name: \"version\"     value: \"v2\" - path:     value: \"/v2/foo\"
                        ``` \n For a request to match against this rule, a request
                        must satisfy EITHER of the two conditions: \n - path prefixed
                        with `/foo` AND contains the header `version: v2` - path prefix
                        of `/v2/foo` \n See the documentation for HTTPRouteMatch on
                        how to specify multiple match conditions that should be ANDed
                        together. \n If no matches are specified, the default is a
                        prefix path match on \"/\", which has the effect of matching
                        every HTTP request. \n Proxy or Load Balancer routing configuration
                        generated from HTTPRoutes MUST prioritize rules based on the
                        following criteria, continuing on ties. Precedence must be
                        given to the the Rule with the largest number of: \n * Characters
                        in a matching non-wildcard hostname. * Characters in a matching
                        hostname. * Characters in a matching path. * Header matches.
                        * Query param matches. \n If ties still exist across multiple
                        Routes, matching precedence MUST be determined in order of
                        the following criteria, continuing on ties: \n * The oldest
                        Route based on creation timestamp. * The Route appearing first
                        in alphabetical order by   \"{namespace}/{name}\". \n If ties
                        still exist within the Route that has been given precedence,
                        matching precedence MUST be granted to the first matching
                        rule meeting the above criteria. \n When no rules matching
                        a request have been successfully attached to the parent a
                        request is coming from, a HTTP 404 status code MUST be returned."
                      items:
                        description: "HTTPRouteMatch defines the predicate used to
                          match requests to a given action. Multiple match types are
                          ANDed together, i.e. the match will evaluate to true only
                          if all conditions are satisfied. \n For example, the match
                          below will match a HTTP request only if its path starts
                          with `/foo` AND it contains the `version: v1` header: \n
                          ``` match:   path:     value: \"/foo\"   headers:   - name:
                          \"version\"     value \"v1\" ```"
                        properties:
                          headers:
                            description: Headers specifies HTTP request header matchers.
                              Multiple match values are ANDed together, meaning, a
                              request must match all the specified headers to select
                              the route.
                            items:
                              description: HTTPHeaderMatch describes how to select
                                a HTTP route by matching HTTP request headers.
                              properties:
                                name:
                                  description: "Name is the name of the HTTP Header
                                    to be matched. Name matching MUST be case insensitive.
                                    (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                    \n If multiple entries specify equivalent header
                                    names, only the first entry with an equivalent
                                    name MUST be considered for a match. Subsequent
                                    entries with an equivalent header name MUST be
                                    ignored. Due to the case-insensitivity of header
                                    names, \"foo\" and \"Foo\" are considered equivalent.
                                    \n When a header is repeated in an HTTP request,
                                    it is implementation-specific behavior as to how
                                    this is represented. Generally, proxies should
                                    follow the guidance from the RFC: https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2
                                    regarding processing a repeated header, with special
                                    handling for \"Set-Cookie\"."
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: "Type specifies how to match against
                                    the value of the header. \n Support: Core (Exact)
                                    \n Support: Custom (RegularExpression) \n Since
                                    RegularExpression HeaderMatchType has custom conformance,
                                    implementations can support POSIX, PCRE or any
                                    other dialects of regular expressions. Please
                                    read the implementation's documentation to determine
                                    the supported dialect."
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP Header to
                                    be matched.
                                  maxLength: 4096
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          method:
                            description: "Method specifies HTTP method matcher. When
                              specified, this route will be matched only if the request
                              has the specified method. \n Support: Extended"
                            enum:
                            - GET
                            - HEAD
                            - POST
                            - PUT
                            - DELETE
                            - CONNECT
                            - OPTIONS
                            - TRACE
                            - PATCH
                            type: string
                          path:
                            default:
                              type: PathPrefix
                              value: /
                            description: Path specifies a HTTP request path matcher.
                              If this field is not specified, a default prefix match
                              on the "/" path is provided.
                            properties:
                              type:
                                default: PathPrefix
                                description: "Type specifies how to match against
                                  the path Value. \n Support: Core (Exact, PathPrefix)
                                  \n Support: Custom (RegularExpression)"
                                enum:
                                - Exact
                                - PathPrefix
                                - RegularExpression
                                type: string
                              value:
                                default: /
                                description: Value of the HTTP path to match against.
                                maxLength: 1024
                                type: string
                            type: object
                          queryParams:
                            description: QueryParams specifies HTTP query parameter
                              matchers. Multiple match values are ANDed together,
                              meaning, a request must match all the specified query
                              parameters to select the route.
                            items:
                              description: HTTPQueryParamMatch describes how to select
                                a HTTP route by matching HTTP query parameters.
                              properties:
                                name:
                                  description: Name is the name of the HTTP query
                                    param to be matched. This must be an exact string
                                    match. (See https://tools.ietf.org/html/rfc7230#section-2.7.3).
                                  maxLength: 256
                                  minLength: 1
                                  type: string
                                type:
                                  default: Exact
                                  description: "Type specifies how to match against
                                    the value of the query parameter. \n Support:
                                    Extended (Exact) \n Support: Custom (RegularExpression)
                                    \n Since RegularExpression QueryParamMatchType
                                    has custom conformance, implementations can support
                                    POSIX, PCRE or any other dialects of regular expressions.
                                    Please read the implementation's documentation
                                    to determine the supported dialect."
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP query param
                                    to be matched.
                                  maxLength: 1024
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                        type: object
                      maxItems: 8
                      type: array
                  type: object
                maxItems: 16
                type: array
            type: object
          status:
            description: Status defines the current state of HTTPRoute.
            properties:
              parents:
                description: "Parents is a list of parent resources (usually Gateways)
                  that are associated with the route, and the status of the route
                  with respect to each parent. When this route attaches to a parent,
                  the controller that manages the parent must add an entry to this
                  list when the controller first sees the route and should update
                  the entry as appropriate when the route or gateway is modified.
                  \n Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this
                  API can only populate Route status for the Gateways/parent resources
                  they are responsible for. \n A maximum of 32 Gateways will be represented
                  in this list. An empty list means the route has not been attached
                  to any Gateway."
                items:
                  description: RouteParentStatus describes the status of a route with
                    respect to an associated Parent.
                  properties:
                    conditions:
                      description: "Conditions describes the status of the route with
                        respect to the Gateway. Note that the route's availability
                        is also subject to the Gateway's own status conditions and
                        listener status. \n If the Route's ParentRef specifies an
                        existing Gateway that supports Routes of this kind AND that
                        Gateway's controller has sufficient access, then that Gateway's
                        controller MUST set the \"Accepted\" condition on the Route,
                        to indicate whether the route has been accepted or rejected
                        by the Gateway, and why. \n A Route MUST be considered \"Accepted\"
                        if at least one of the Route's rules is implemented by the
                        Gateway. \n There are a number of cases where the \"Accepted\"
                        condition may not be set due to lack of controller visibility,
                        that includes when: \n * The Route refers to a non-existent
                        parent. * The Route is of a type that the controller does
                        not support. * The Route is in a namespace the the controller
                        does not have access to."
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource. --- This struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example, type FooStatus struct{
                          \    // Represents the observations of a foo's current state.
                          \    // Known .status.conditions.type are: \"Available\",
                          \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                          \    // +patchStrategy=merge     // +listType=map     //
                          +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                          patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                          \n     // other fields }"
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime is the last time the condition
                              transitioned from one status to another. This should
                              be when the underlying condition changed.  If that is
                              not known, then using the time when the API field changed
                              is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: message is a human readable message indicating
                              details about the transition. This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation
                              that the condition was set based upon. For instance,
                              if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                              is 9, the condition is out of date with respect to the
                              current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. The value should
                              be a CamelCase string. This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              --- Many .condition.type values are consistent across
                              resources like Available, but because arbitrary conditions
                              can be useful (see .node.status.conditions), the ability
                              to deconflict is important. The regex it matches is
                              (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: "ControllerName is a domain/path string that indicates
                        the name of the controller that wrote this status. This corresponds
                        with the controllerName field on GatewayClass. \n Example:
                        \"example.net/gateway-controller\". \n The format of this
                        field is DOMAIN \"/\" PATH, where DOMAIN and PATH are valid
                        Kubernetes names (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                        \n Controllers MUST populate this field when writing status.
                        Controllers should ensure that entries to status populated
                        with their ControllerName are cleaned up when they are no
                        longer necessary."
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: ParentRef corresponds with a ParentRef in the spec
                        that this RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: policy.linkerd.io
                          description: "Group is the group of the referent. \n Support:
                            Core"
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: "Kind is kind of the referent. \n Support:
                            Core (Gateway) Support: Custom (Other Resources)"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: "Name is the name of the referent. \n Support:
                            Core"
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: "Namespace is the namespace of the referent.
                            When unspecified (or empty string), this refers to the
                            local namespace of the Route. \n Support: Core"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: "Port is the network port this Route targets.
                            It can be interpreted differently based on the type of
                            parent resource. \n When the parent resource is a Gateway,
                            this targets all listeners listening on the specified
                            port that also support this kind of Route(and select this
                            Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to
                            a specific port as opposed to a listener(s) whose port(s)
                            may be changed. When both Port and SectionName are specified,
                            the name and port of the selected listener must match
                            both specified values. \n Implementations MAY choose to
                            support other parent resources. Implementations supporting
                            other types of parent resources MUST clearly document
                            how/if Port is interpreted. \n For the purpose of status,
                            an attachment is considered successful as long as the
                            parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them
                            by Route kind, namespace, or hostname. If 1 of 2 Gateway
                            listeners accept attachment from the referencing Route,
                            the Route MUST be considered successfully attached. If
                            no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.
                            \n Support: Extended \n <gateway:experimental>"
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: "SectionName is the name of a section within
                            the target resource. In the following resources, SectionName
                            is interpreted as the following: \n * Gateway: Listener
                            Name. When both Port (experimental) and SectionName are
                            specified, the name and port of the selected listener
                            must match both specified values. \n Implementations MAY
                            choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName
                            is interpreted. \n When unspecified (empty string), this
                            will reference the entire resource. For the purpose of
                            status, an attachment is considered successful if at least
                            one section in the parent resource accepts it. For example,
                            Gateway listeners can restrict which Routes can attach
                            to them by Route kind, namespace, or hostname. If 1 of
                            2 Gateway listeners accept attachment from the referencing
                            Route, the Route MUST be considered successfully attached.
                            If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.
                            \n Support: Core"
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .spec.hostnames
      name: Hostnames
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: HTTPRoute provides a way to route HTTP requests. This includes
          the capability to match requests by hostname, path, header, or query param.
          Filters can be used to specify additional processing steps. Backends specify
          where matching requests should be routed.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of HTTPRoute.
            properties:
              hostnames:
                description: "Hostnames defines a set of hostname that should match
                  against the HTTP Host header to select a HTTPRoute to process the
                  request. This matches the RFC 1123 definition of a hostname with
                  2 notable exceptions: \n 1. IPs are not allowed. 2. A hostname may
                  be prefixed with a wildcard label (`*.`). The wildcard    label
                  must appear by itself as the first label. \n If a hostname is specified
                  by both the Listener and HTTPRoute, there must be at least one intersecting
                  hostname for the HTTPRoute to be attached to the Listener. For example:
                  \n * A Listener with `test.example.com` as the hostname matches
                  HTTPRoutes   that have either not specified any hostnames, or have
                  specified at   least one of `test.example.com` or `*.example.com`.
                  * A Listener with `*.example.com` as the hostname matches HTTPRoutes
                  \  that have either not specified any hostnames or have specified
                  at least   one hostname that matches the Listener hostname. For
                  example,   `*.example.com`, `test.example.com`, and `foo.test.example.com`
                  would   all match. On the other hand, `example.com` and `test.example.net`
                  would   not match. \n Hostnames that are prefixed with a wildcard
                  label (`*.`) are interpreted as a suffix match. That means that
                  a match for `*.example.com` would match both `test.example.com`,
                  and `foo.test.example.com`, but not `example.com`. \n If both the
                  Listener and HTTPRoute have specified hostnames, any HTTPRoute hostnames
                  that do not match the Listener hostname MUST be ignored. For example,
                  if a Listener specified `*.example.com`, and the HTTPRoute specified
                  `test.example.com` and `test.example.net`, `test.example.net` must
                  not be considered for a match. \n If both the Listener and HTTPRoute
                  have specified hostnames, and none match with the criteria above,
                  then the HTTPRoute is not accepted. The implementation must raise
                  an 'Accepted' Condition with a status of `False` in the corresponding
                  RouteParentStatus. \n Support: Core"
                items:
                  description: "Hostname is the fully qualified domain name of a network
                    host. This matches the RFC 1123 definition of a hostname with
                    2 notable exceptions: \n 1. IPs are not allowed. 2. A hostname
                    may be prefixed with a wildcard label (`*.`). The wildcard    label
                    must appear by itself as the first label. \n Hostname can be \"precise\"
                    which is a domain name without the terminating dot of a network
                    host (e.g. \"foo.example.com\") or \"wildcard\", which is a domain
                    name prefixed with a single wildcard label (e.g. `*.example.com`).
                    \n Note that as per RFC1035 and RFC1123, a *label* must consist
                    of lower case alphanumeric characters or '-', and must start and
                    end with an alphanumeric character. No other punctuation is allowed."
                  maxLength: 253
                  minLength: 1
                  pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                maxItems: 16
                type: array
              parentRefs:
                description: "ParentRefs references the resources (usually Gateways)
                  that a Route wants to be attached to. Note that the referenced parent
                  resource needs to allow this for the attachment to be complete.
                  For Gateways, that means the Gateway needs to allow attachment from
                  Routes of this kind and namespace. \n The only kind of parent resource
                  with \"Core\" support is Gateway. This API may be extended in the
                  future to support additional kinds of parent resources such as one
                  of the route kinds. \n It is invalid to reference an identical parent
                  more than once. It is valid to reference multiple distinct sections
                  within the same parent resource, such as 2 Listeners within a Gateway.
                  \n It is possible to separately reference multiple distinct objects
                  that may be collapsed by an implementation. For example, some implementations
                  may choose to merge compatible Gateway Listeners together. If that
                  is the case, the list of routes attached to those resources should
                  also be merged."
                items:
                  description: "ParentReference identifies an API object (usually
                    a Gateway) that can be considered a parent of this resource (usually
                    a route). The only kind of parent resource with \"Core\" support
                    is Gateway. This API may be extended in the future to support
                    additional kinds of parent resources, such as HTTPRoute. \n The
                    API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid."
                  properties:
                    group:
                      default: policy.linkerd.io
                      description: "Group is the group of the referent. \n Support:
                        Core"
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: "Kind is kind of the referent. \n Support: Core
                        (Gateway) Support: Custom (Other Resources)"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: "Name is the name of the referent. \n Support:
                        Core"
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: "Namespace is the namespace of the referent. When
                        unspecified (or empty string), this refers to the local namespace
                        of the Route. \n Support: Core"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: "port"
                      type: integer
                    sectionName:
                      description: "SectionName is the name of a section within the
                        target resource. In the following resources, SectionName is
                        interpreted as the following: \n * Gateway: Listener Name.
                        When both Port (experimental) and SectionName are specified,
                        the name and port of the selected listener must match both
                        specified values. \n Implementations MAY choose to support
                        attaching Routes to other resources. If that is the case,
                        they MUST clearly document how SectionName is interpreted.
                        \n When unspecified (empty string), this will reference the
                        entire resource. For the purpose of status, an attachment
                        is considered successful if at least one section in the parent
                        resource accepts it. For example, Gateway listeners can restrict
                        which Routes can attach to them by Route kind, namespace,
                        or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this
                        Route, the Route MUST be considered detached from the Gateway.
                        \n Support: Core"
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
              rules:
                default:
                - matches:
                  - path:
                      type: PathPrefix
                      value: /
                description: Rules are a list of HTTP matchers, filters and actions.
                items:
                  description: HTTPRouteRule defines semantics for matching an HTTP
                    request based on conditions (matches) and processing it (filters).
                  properties:
                    backendRefs:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          port:
                            type: integer
                          namespace:
                            type: string
                            default: "default"
                          filters:
                            description: "Filters defined at this level should be
                              executed if and only if the request is being forwarded
                              to the backend defined here. \n Support: Implementation-specific
                              (For broader support of filters, use the Filters field
                              in HTTPRouteRule.)"
                            items:
                              description: HTTPRouteFilter defines processing steps
                                that must be completed during the request or response
                                lifecycle. HTTPRouteFilters are meant as an extension
                                point to express processing that may be done in Gateway
                                implementations. Some examples include request or
                                response modification, implementing authentication
                                strategies, rate-limiting, and traffic shaping. API
                                guarantee/conformance is defined based on the type
                                of the filter.
                              properties:
                                requestHeaderModifier:
                                  description: "RequestHeaderModifier defines a schema
                                    for a filter that modifies request headers. \n
                                    Support: Core"
                                  properties:
                                    add:
                                      description: "Add adds the given header(s) (name,
                                        value) to the request before the action. It
                                        appends to any existing values associated
                                        with the header name. \n Input: GET /foo HTTP/1.1
                                        my-header: foo \n Config: add: - name: \"my-header\"
                                        value: \"bar,baz\" \n Output: GET /foo HTTP/1.1
                                        my-header: foo,bar,baz"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: "Remove the given header(s) from
                                        the HTTP request before the action. The value
                                        of Remove is a list of HTTP header names.
                                        Note that the header names are case-insensitive
                                        (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                        \n Input: GET /foo HTTP/1.1 my-header1: foo
                                        my-header2: bar my-header3: baz \n Config:
                                        remove: [\"my-header1\", \"my-header3\"] \n
                                        Output: GET /foo HTTP/1.1 my-header2: bar"
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                    set:
                                      description: "Set overwrites the request with
                                        the given header (name, value) before the
                                        action. \n Input: GET /foo HTTP/1.1 my-header:
                                        foo \n Config: set: - name: \"my-header\"
                                        value: \"bar\" \n Output: GET /foo HTTP/1.1
                                        my-header: bar"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                requestRedirect:
                                  description: "RequestRedirect defines a schema for
                                    a filter that responds to the request with an
                                    HTTP redirection. \n Support: Core"
                                  properties:
                                    hostname:
                                      description: "Hostname is the hostname to be
                                        used in the value of the `Location` header
                                        in the response. When empty, the hostname
                                        in the `Host` header of the request is used.
                                        \n Support: Core"
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: "Path defines parameters used to
                                        modify the path of the incoming request. The
                                        modified path is then used to construct the
                                        `Location` header. When empty, the request
                                        path is used as-is. \n Support: Extended"
                                      properties:
                                        replaceFullPath:
                                          description: ReplaceFullPath specifies the
                                            value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: "ReplacePrefixMatch specifies
                                            the value with which to replace the prefix
                                            match of a request during a rewrite or
                                            redirect. For example, a request to \"/foo/bar\"
                                            with a prefix match of \"/foo\" and a
                                            ReplacePrefixMatch of \"/xyz\" would be
                                            modified to \"/xyz/bar\". \n Note that
                                            this matches the behavior of the PathPrefix
                                            match type. This matches full path elements.
                                            A path element refers to the list of labels
                                            in the path split by the `/` separator.
                                            When specified, a trailing `/` is ignored.
                                            For example, the paths `/abc`, `/abc/`,
                                            and `/abc/def` would all match the prefix
                                            `/abc`, but the path `/abcd` would not.
                                            \n Request Path | Prefix Match | Replace
                                            Prefix | Modified Path -------------|--------------|----------------|----------
                                            /foo/bar     | /foo         | /xyz           |
                                            /xyz/bar /foo/bar     | /foo         |
                                            /xyz/          | /xyz/bar /foo/bar     |
                                            /foo/        | /xyz           | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz/          |
                                            /xyz/bar /foo         | /foo         |
                                            /xyz           | /xyz /foo/        | /foo
                                            \        | /xyz           | /xyz/ /foo/bar
                                            \    | /foo         | <empty string> |
                                            /bar /foo/        | /foo         | <empty
                                            string> | / /foo         | /foo         |
                                            <empty string> | / /foo/        | /foo
                                            \        | /              | / /foo         |
                                            /foo         | /              | /"
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: "Type defines the type of path
                                            modifier. Additional types may be added
                                            in a future release of the API. \n Note
                                            that values may be added to this enum,
                                            implementations must ensure that unknown
                                            values will not cause a crash. \n Unknown
                                            values here must result in the implementation
                                            setting the Accepted Condition for the
                                            Route to `status: False`, with a Reason
                                            of `UnsupportedValue`."
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    port:
                                      description: "Port is the port to be used in
                                        the value of the `Location` header in the
                                        response. \n If no port is specified, the
                                        redirect port MUST be derived using the following
                                        rules: \n * If redirect scheme is not-empty,
                                        the redirect port MUST be the well-known port
                                        associated with the redirect scheme. Specifically
                                        \"http\" to port 80 and \"https\" to port
                                        443. If the redirect scheme does not have
                                        a well-known port, the listener port of the
                                        Gateway SHOULD be used. * If redirect scheme
                                        is empty, the redirect port MUST be the Gateway
                                        Listener port. \n Implementations SHOULD NOT
                                        add the port number in the 'Location' header
                                        in the following cases: \n * A Location header
                                        that will use HTTP (whether that is determined
                                        via the Listener protocol or the Scheme field)
                                        _and_ use port 80. * A Location header that
                                        will use HTTPS (whether that is determined
                                        via the Listener protocol or the Scheme field)
                                        _and_ use port 443. \n Support: Extended"
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                    scheme:
                                      description: "Scheme is the scheme to be used
                                        in the value of the `Location` header in the
                                        response. When empty, the scheme of the request
                                        is used. \n Scheme redirects can affect the
                                        port of the redirect, for more information,
                                        refer to the documentation for the port field
                                        of this filter. \n Note that values may be
                                        added to this enum, implementations must ensure
                                        that unknown values will not cause a crash.
                                        \n Unknown values here must result in the
                                        implementation setting the Accepted Condition
                                        for the Route to `status: False`, with a Reason
                                        of `UnsupportedValue`. \n Support: Extended"
                                      enum:
                                      - http
                                      - https
                                      type: string
                                    statusCode:
                                      default: 302
                                      description: "StatusCode is the HTTP status
                                        code to be used in response. \n Note that
                                        values may be added to this enum, implementations
                                        must ensure that unknown values will not cause
                                        a crash. \n Unknown values here must result
                                        in the implementation setting the Accepted
                                        Condition for the Route to `status: False`,
                                        with a Reason of `UnsupportedValue`. \n Support:
                                        Core"
                                      enum:
                                      - 301
                                      - 302
                                      type: integer
                                  type: object
                                responseHeaderModifier:
                                  description: "ResponseHeaderModifier defines a schema
                                    for a filter that modifies response headers. \n
                                    Support: Extended"
                                  properties:
                                    add:
                                      description: "Add adds the given header(s) (name,
                                        value) to the request before the action. It
                                        appends to any existing values associated
                                        with the header name. \n Input: GET /foo HTTP/1.1
                                        my-header: foo \n Config: add: - name: \"my-header\"
                                        value: \"bar,baz\" \n Output: GET /foo HTTP/1.1
                                        my-header: foo,bar,baz"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: "Remove the given header(s) from
                                        the HTTP request before the action. The value
                                        of Remove is a list of HTTP header names.
                                        Note that the header names are case-insensitive
                                        (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                        \n Input: GET /foo HTTP/1.1 my-header1: foo
                                        my-header2: bar my-header3: baz \n Config:
                                        remove: [\"my-header1\", \"my-header3\"] \n
                                        Output: GET /foo HTTP/1.1 my-header2: bar"
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                    set:
                                      description: "Set overwrites the request with
                                        the given header (name, value) before the
                                        action. \n Input: GET /foo HTTP/1.1 my-header:
                                        foo \n Config: set: - name: \"my-header\"
                                        value: \"bar\" \n Output: GET /foo HTTP/1.1
                                        my-header: bar"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                type:
                                  description: "Type identifies the type of filter
                                    to apply. As with other API fields, types are
                                    classified into three conformance levels: \n -
                                    Core: Filter types and their corresponding configuration
                                    defined by \"Support: Core\" in this package,
                                    e.g. \"RequestHeaderModifier\". All implementations
                                    must support core filters. \n - Extended: Filter
                                    types and their corresponding configuration defined
                                    by \"Support: Extended\" in this package, e.g.
                                    \"RequestMirror\". Implementers are encouraged
                                    to support extended filters. \n - Implementation-specific:
                                    Filters that are defined and supported by specific
                                    vendors. In the future, filters showing convergence
                                    in behavior across multiple implementations will
                                    be considered for inclusion in extended or core
                                    conformance levels. Filter-specific configuration
                                    for such filters is specified using the ExtensionRef
                                    field. `Type` should be set to \"ExtensionRef\"
                                    for custom filters. \n Implementers are encouraged
                                    to define custom implementation types to extend
                                    the core API with implementation-specific behavior.
                                    \n If a reference to a custom filter type cannot
                                    be resolved, the filter MUST NOT be skipped. Instead,
                                    requests that would have been processed by that
                                    filter MUST receive a HTTP error response. \n
                                    Note that values may be added to this enum, implementations
                                    must ensure that unknown values will not cause
                                    a crash. \n Unknown values here must result in
                                    the implementation setting the Accepted Condition
                                    for the Route to `status: False`, with a Reason
                                    of `UnsupportedValue`."
                                  enum:
                                  - RequestHeaderModifier
                                  - ResponseHeaderModifier
                                  - RequestRedirect
                                  type: string
                              required:
                              - type
                              type: object
                            maxItems: 16
                            type: array
                    filters:
                      description: "Filters define the filters that are applied to
                        requests that match this rule. \n The effects of ordering
                        of multiple behaviors are currently unspecified. This can
                        change in the future based on feedback during the alpha stage.
                        \n Conformance-levels at this level are defined based on the
                        type of filter: \n - ALL core filters MUST be supported by
                        all implementations. - Implementers are encouraged to support
                        extended filters. - Implementation-specific custom filters
                        have no API guarantees across   implementations. \n Specifying
                        a core filter multiple times has unspecified or custom conformance.
                        \n All filters are expected to be compatible with each other
                        except for the URLRewrite and RequestRedirect filters, which
                        may not be combined. If an implementation can not support
                        other combinations of filters, they must clearly document
                        that limitation. In all cases where incompatible or unsupported
                        filters are specified, implementations MUST add a warning
                        condition to status. \n Support: Core"
                      items:
                        description: HTTPRouteFilter defines processing steps that
                          must be completed during the request or response lifecycle.
                          HTTPRouteFilters are meant as an extension point to express
                          processing that may be done in Gateway implementations.
                          Some examples include request or response modification,
                          implementing authentication strategies, rate-limiting, and
                          traffic shaping. API guarantee/conformance is defined based
                          on the type of the filter.
                        properties:
                          requestHeaderModifier:
                            description: "RequestHeaderModifier defines a schema for
                              a filter that modifies request headers. \n Support:
                              Core"
                            properties:
                              add:
                                description: "Add adds the given header(s) (name,
                                  value) to the request before the action. It appends
                                  to any existing values associated with the header
                                  name. \n Input:   GET /foo HTTP/1.1   my-header:
                                  foo \n Config:   add:   - name: \"my-header\"     value:
                                  \"bar\" \n Output:   GET /foo HTTP/1.1   my-header:
                                  foo   my-header: bar"
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: "Name is the name of the HTTP Header
                                        to be matched. Name matching MUST be case
                                        insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                        \n If multiple entries specify equivalent
                                        header names, the first entry with an equivalent
                                        name MUST be considered for a match. Subsequent
                                        entries with an equivalent header name MUST
                                        be ignored. Due to the case-insensitivity
                                        of header names, \"foo\" and \"Foo\" are considered
                                        equivalent."
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: "Remove the given header(s) from the
                                  HTTP request before the action. The value of Remove
                                  is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                  \n Input:   GET /foo HTTP/1.1   my-header1: foo
                                  \  my-header2: bar   my-header3: baz \n Config:
                                  \  remove: [\"my-header1\", \"my-header3\"] \n Output:
                                  \  GET /foo HTTP/1.1   my-header2: bar"
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                              set:
                                description: "Set overwrites the request with the
                                  given header (name, value) before the action. \n
                                  Input:   GET /foo HTTP/1.1   my-header: foo \n Config:
                                  \  set:   - name: \"my-header\"     value: \"bar\"
                                  \n Output:   GET /foo HTTP/1.1   my-header: bar"
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: "Name is the name of the HTTP Header
                                        to be matched. Name matching MUST be case
                                        insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                        \n If multiple entries specify equivalent
                                        header names, the first entry with an equivalent
                                        name MUST be considered for a match. Subsequent
                                        entries with an equivalent header name MUST
                                        be ignored. Due to the case-insensitivity
                                        of header names, \"foo\" and \"Foo\" are considered
                                        equivalent."
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          requestRedirect:
                            description: "RequestRedirect defines a schema for a filter
                              that responds to the request with an HTTP redirection.
                              \n Support: Core"
                            properties:
                              hostname:
                                description: "Hostname is the hostname to be used
                                  in the value of the `Location` header in the response.
                                  When empty, the hostname of the request is used.
                                  \n Support: Core"
                                maxLength: 253
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              path:
                                description: "Path defines parameters used to
                                  modify the path of the incoming request. The
                                  modified path is then used to construct the
                                  `Location` header. When empty, the request
                                  path is used as-is. \n Support: Extended"
                                properties:
                                  replaceFullPath:
                                    description: ReplaceFullPath specifies the
                                      value with which to replace the full path
                                      of a request during a rewrite or redirect.
                                    maxLength: 1024
                                    type: string
                                  replacePrefixMatch:
                                    description: "ReplacePrefixMatch specifies
                                      the value with which to replace the prefix
                                      match of a request during a rewrite or
                                      redirect. For example, a request to \"/foo/bar\"
                                      with a prefix match of \"/foo\" and a
                                      ReplacePrefixMatch of \"/xyz\" would be
                                      modified to \"/xyz/bar\". \n Note that
                                      this matches the behavior of the PathPrefix
                                      match type. This matches full path elements.
                                      A path element refers to the list of labels
                                      in the path split by the `/` separator.
                                      When specified, a trailing `/` is ignored.
                                      For example, the paths `/abc`, `/abc/`,
                                      and `/abc/def` would all match the prefix
                                      `/abc`, but the path `/abcd` would not.
                                      \n Request Path | Prefix Match | Replace
                                      Prefix | Modified Path -------------|--------------|----------------|----------
                                      /foo/bar     | /foo         | /xyz           |
                                      /xyz/bar /foo/bar     | /foo         |
                                      /xyz/          | /xyz/bar /foo/bar     |
                                      /foo/        | /xyz           | /xyz/bar
                                      /foo/bar     | /foo/        | /xyz/          |
                                      /xyz/bar /foo         | /foo         |
                                      /xyz           | /xyz /foo/        | /foo
                                      \        | /xyz           | /xyz/ /foo/bar
                                      \    | /foo         | <empty string> |
                                      /bar /foo/        | /foo         | <empty
                                      string> | / /foo         | /foo         |
                                      <empty string> | / /foo/        | /foo
                                      \        | /              | / /foo         |
                                      /foo         | /              | /"
                                    maxLength: 1024
                                    type: string
                                  type:
                                    description: "Type defines the type of path
                                      modifier. Additional types may be added
                                      in a future release of the API. \n Note
                                      that values may be added to this enum,
                                      implementations must ensure that unknown
                                      values will not cause a crash. \n Unknown
                                      values here must result in the implementation
                                      setting the Accepted Condition for the
                                      Route to `status: False`, with a Reason
                                      of `UnsupportedValue`."
                                    enum:
                                    - ReplaceFullPath
                                    - ReplacePrefixMatch
                                    type: string
                                required:
                                - type
                                type: object
                              port:
                                description: "Port is the port to be used in the value
                                  of the `Location` header in the response. When empty,
                                  port (if specified) of the request is used. \n Support:
                                  Extended"
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              scheme:
                                description: "Scheme is the scheme to be used in the
                                  value of the `Location` header in the response.
                                  When empty, the scheme of the request is used. \n
                                  Support: Extended"
                                enum:
                                - http
                                - https
                                type: string
                              statusCode:
                                default: 302
                                description: "StatusCode is the HTTP status code to
                                  be used in response. \n Support: Core"
                                enum:
                                - 301
                                - 302
                                type: integer
                            type: object
                          type:
                            description: "Type identifies the type of filter to apply.
                              As with other API fields, types are classified into
                              three conformance levels: \n - Core: Filter types and
                              their corresponding configuration defined by   \"Support:
                              Core\" in this package, e.g. \"RequestHeaderModifier\"."
                            enum:
                            - RequestHeaderModifier
                            - RequestRedirect
                            type: string
                        required:
                        - type
                        type: object
                      maxItems: 16
                      type: array
                    matches:
                      default:
                      - path:
                          type: PathPrefix
                          value: /
                      description: "Matches define conditions used for matching the
                        rule against incoming HTTP requests. Each match is independent,
                        i.e. this rule will be matched if **any** one of the matches
                        is satisfied. \n For example, take the following matches configuration:
                        \n ``` matches: - path:     value: \"/foo\"   headers:   -
                        name: \"version\"     value: \"v2\" - path:     value: \"/v2/foo\"
                        ``` \n For a request to match against this rule, a request
                        must satisfy EITHER of the two conditions: \n - path prefixed
                        with `/foo` AND contains the header `version: v2` - path prefix
                        of `/v2/foo` \n See the documentation for HTTPRouteMatch on
                        how to specify multiple match conditions that should be ANDed
                        together. \n If no matches are specified, the default is a
                        prefix path match on \"/\", which has the effect of matching
                        every HTTP request. \n Proxy or Load Balancer routing configuration
                        generated from HTTPRoutes MUST prioritize rules based on the
                        following criteria, continuing on ties. Precedence must be
                        given to the the Rule with the largest number of: \n * Characters
                        in a matching non-wildcard hostname. * Characters in a matching
                        hostname. * Characters in a matching path. * Header matches.
                        * Query param matches. \n If ties still exist across multiple
                        Routes, matching precedence MUST be determined in order of
                        the following criteria, continuing on ties: \n * The oldest
                        Route based on creation timestamp. * The Route appearing first
                        in alphabetical order by   \"{namespace}/{name}\". \n If ties
                        still exist within the Route that has been given precedence,
                        matching precedence MUST be granted to the first matching
                        rule meeting the above criteria. \n When no rules matching
                        a request have been successfully attached to the parent a
                        request is coming from, a HTTP 404 status code MUST be returned."
                      items:
                        description: "HTTPRouteMatch defines the predicate used to
                          match requests to a given action. Multiple match types are
                          ANDed together, i.e. the match will evaluate to true only
                          if all conditions are satisfied. \n For example, the match
                          below will match a HTTP request only if its path starts
                          with `/foo` AND it contains the `version: v1` header: \n
                          ``` match:   path:     value: \"/foo\"   headers:   - name:
                          \"version\"     value \"v1\" ```"
                        properties:
                          headers:
                            description: Headers specifies HTTP request header matchers.
                              Multiple match values are ANDed together, meaning, a
                              request must match all the specified headers to select
                              the route.
                            items:
                              description: HTTPHeaderMatch describes how to select
                                a HTTP route by matching HTTP request headers.
                              properties:
                                name:
                                  description: "Name is the name of the HTTP Header
                                    to be matched. Name matching MUST be case insensitive.
                                    (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                    \n If multiple entries specify equivalent header
                                    names, only the first entry with an equivalent
                                    name MUST be considered for a match. Subsequent
                                    entries with an equivalent header name MUST be
                                    ignored. Due to the case-insensitivity of header
                                    names, \"foo\" and \"Foo\" are considered equivalent.
                                    \n When a header is repeated in an HTTP request,
                                    it is implementation-specific behavior as to how
                                    this is represented. Generally, proxies should
                                    follow the guidance from the RFC: https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2
                                    regarding processing a repeated header, with special
                                    handling for \"Set-Cookie\"."
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: "Type specifies how to match against
                                    the value of the header. \n Support: Core (Exact)
                                    \n Support: Custom (RegularExpression) \n Since
                                    RegularExpression HeaderMatchType has custom conformance,
                                    implementations can support POSIX, PCRE or any
                                    other dialects of regular expressions. Please
                                    read the implementation's documentation to determine
                                    the supported dialect."
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP Header to
                                    be matched.
                                  maxLength: 4096
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          method:
                            description: "Method specifies HTTP method matcher. When
                              specified, this route will be matched only if the request
                              has the specified method. \n Support: Extended"
                            enum:
                            - GET
                            - HEAD
                            - POST
                            - PUT
                            - DELETE
                            - CONNECT
                            - OPTIONS
                            - TRACE
                            - PATCH
                            type: string
                          path:
                            default:
                              type: PathPrefix
                              value: /
                            description: Path specifies a HTTP request path matcher.
                              If this field is not specified, a default prefix match
                              on the "/" path is provided.
                            properties:
                              type:
                                default: PathPrefix
                                description: "Type specifies how to match against
                                  the path Value. \n Support: Core (Exact, PathPrefix)
                                  \n Support: Custom (RegularExpression)"
                                enum:
                                - Exact
                                - PathPrefix
                                - RegularExpression
                                type: string
                              value:
                                default: /
                                description: Value of the HTTP path to match against.
                                maxLength: 1024
                                type: string
                            type: object
                          queryParams:
                            description: QueryParams specifies HTTP query parameter
                              matchers. Multiple match values are ANDed together,
                              meaning, a request must match all the specified query
                              parameters to select the route.
                            items:
                              description: HTTPQueryParamMatch describes how to select
                                a HTTP route by matching HTTP query parameters.
                              properties:
                                name:
                                  description: Name is the name of the HTTP query
                                    param to be matched. This must be an exact string
                                    match. (See https://tools.ietf.org/html/rfc7230#section-2.7.3).
                                  maxLength: 256
                                  minLength: 1
                                  type: string
                                type:
                                  default: Exact
                                  description: "Type specifies how to match against
                                    the value of the query parameter. \n Support:
                                    Extended (Exact) \n Support: Custom (RegularExpression)
                                    \n Since RegularExpression QueryParamMatchType
                                    has custom conformance, implementations can support
                                    POSIX, PCRE or any other dialects of regular expressions.
                                    Please read the implementation's documentation
                                    to determine the supported dialect."
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP query param
                                    to be matched.
                                  maxLength: 1024
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                        type: object
                      maxItems: 8
                      type: array
                  type: object
                maxItems: 16
                type: array
            type: object
          status:
            description: Status defines the current state of HTTPRoute.
            properties:
              parents:
                description: "Parents is a list of parent resources (usually Gateways)
                  that are associated with the route, and the status of the route
                  with respect to each parent. When this route attaches to a parent,
                  the controller that manages the parent must add an entry to this
                  list when the controller first sees the route and should update
                  the entry as appropriate when the route or gateway is modified.
                  \n Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this
                  API can only populate Route status for the Gateways/parent resources
                  they are responsible for. \n A maximum of 32 Gateways will be represented
                  in this list. An empty list means the route has not been attached
                  to any Gateway."
                items:
                  description: RouteParentStatus describes the status of a route with
                    respect to an associated Parent.
                  properties:
                    conditions:
                      description: "Conditions describes the status of the route with
                        respect to the Gateway. Note that the route's availability
                        is also subject to the Gateway's own status conditions and
                        listener status. \n If the Route's ParentRef specifies an
                        existing Gateway that supports Routes of this kind AND that
                        Gateway's controller has sufficient access, then that Gateway's
                        controller MUST set the \"Accepted\" condition on the Route,
                        to indicate whether the route has been accepted or rejected
                        by the Gateway, and why. \n A Route MUST be considered \"Accepted\"
                        if at least one of the Route's rules is implemented by the
                        Gateway. \n There are a number of cases where the \"Accepted\"
                        condition may not be set due to lack of controller visibility,
                        that includes when: \n * The Route refers to a non-existent
                        parent. * The Route is of a type that the controller does
                        not support. * The Route is in a namespace the the controller
                        does not have access to."
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource. --- This struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example, type FooStatus struct{
                          \    // Represents the observations of a foo's current state.
                          \    // Known .status.conditions.type are: \"Available\",
                          \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                          \    // +patchStrategy=merge     // +listType=map     //
                          +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                          patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                          \n     // other fields }"
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime is the last time the condition
                              transitioned from one status to another. This should
                              be when the underlying condition changed.  If that is
                              not known, then using the time when the API field changed
                              is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: message is a human readable message indicating
                              details about the transition. This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation
                              that the condition was set based upon. For instance,
                              if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                              is 9, the condition is out of date with respect to the
                              current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. The value should
                              be a CamelCase string. This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              --- Many .condition.type values are consistent across
                              resources like Available, but because arbitrary conditions
                              can be useful (see .node.status.conditions), the ability
                              to deconflict is important. The regex it matches is
                              (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: "ControllerName is a domain/path string that indicates
                        the name of the controller that wrote this status. This corresponds
                        with the controllerName field on GatewayClass. \n Example:
                        \"example.net/gateway-controller\". \n The format of this
                        field is DOMAIN \"/\" PATH, where DOMAIN and PATH are valid
                        Kubernetes names (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                        \n Controllers MUST populate this field when writing status.
                        Controllers should ensure that entries to status populated
                        with their ControllerName are cleaned up when they are no
                        longer necessary."
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: ParentRef corresponds with a ParentRef in the spec
                        that this RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: policy.linkerd.io
                          description: "Group is the group of the referent. \n Support:
                            Core"
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: "Kind is kind of the referent. \n Support:
                            Core (Gateway) Support: Custom (Other Resources)"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: "Name is the name of the referent. \n Support:
                            Core"
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: "Namespace is the namespace of the referent.
                            When unspecified (or empty string), this refers to the
                            local namespace of the Route. \n Support: Core"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: "Port is the network port this Route targets.
                            It can be interpreted differently based on the type of
                            parent resource. \n When the parent resource is a Gateway,
                            this targets all listeners listening on the specified
                            port that also support this kind of Route(and select this
                            Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to
                            a specific port as opposed to a listener(s) whose port(s)
                            may be changed. When both Port and SectionName are specified,
                            the name and port of the selected listener must match
                            both specified values. \n Implementations MAY choose to
                            support other parent resources. Implementations supporting
                            other types of parent resources MUST clearly document
                            how/if Port is interpreted. \n For the purpose of status,
                            an attachment is considered successful as long as the
                            parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them
                            by Route kind, namespace, or hostname. If 1 of 2 Gateway
                            listeners accept attachment from the referencing Route,
                            the Route MUST be considered successfully attached. If
                            no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.
                            \n Support: Extended \n <gateway:experimental>"
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: "SectionName is the name of a section within
                            the target resource. In the following resources, SectionName
                            is interpreted as the following: \n * Gateway: Listener
                            Name. When both Port (experimental) and SectionName are
                            specified, the name and port of the selected listener
                            must match both specified values. \n Implementations MAY
                            choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName
                            is interpreted. \n When unspecified (empty string), this
                            will reference the entire resource. For the purpose of
                            status, an attachment is considered successful if at least
                            one section in the parent resource accepts it. For example,
                            Gateway listeners can restrict which Routes can attach
                            to them by Route kind, namespace, or hostname. If 1 of
                            2 Gateway listeners accept attachment from the referencing
                            Route, the Route MUST be considered successfully attached.
                            If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.
                            \n Support: Core"
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .spec.hostnames
      name: Hostnames
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta2
    schema:
      openAPIV3Schema:
        description: HTTPRoute provides a way to route HTTP requests. This includes
          the capability to match requests by hostname, path, header, or query param.
          Filters can be used to specify additional processing steps. Backends specify
          where matching requests should be routed.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of HTTPRoute.
            properties:
              hostnames:
                description: "Hostnames defines a set of hostname that should match
                  against the HTTP Host header to select a HTTPRoute to process the
                  request. This matches the RFC 1123 definition of a hostname with
                  2 notable exceptions: \n 1. IPs are not allowed. 2. A hostname may
                  be prefixed with a wildcard label (`*.`). The wildcard    label
                  must appear by itself as the first label. \n If a hostname is specified
                  by both the Listener and HTTPRoute, there must be at least one intersecting
                  hostname for the HTTPRoute to be attached to the Listener. For example:
                  \n * A Listener with `test.example.com` as the hostname matches
                  HTTPRoutes   that have either not specified any hostnames, or have
                  specified at   least one of `test.example.com` or `*.example.com`.
                  * A Listener with `*.example.com` as the hostname matches HTTPRoutes
                  \  that have either not specified any hostnames or have specified
                  at least   one hostname that matches the Listener hostname. For
                  example,   `*.example.com`, `test.example.com`, and `foo.test.example.com`
                  would   all match. On the other hand, `example.com` and `test.example.net`
                  would   not match. \n Hostnames that are prefixed with a wildcard
                  label (`*.`) are interpreted as a suffix match. That means that
                  a match for `*.example.com` would match both `test.example.com`,
                  and `foo.test.example.com`, but not `example.com`. \n If both the
                  Listener and HTTPRoute have specified hostnames, any HTTPRoute hostnames
                  that do not match the Listener hostname MUST be ignored. For example,
                  if a Listener specified `*.example.com`, and the HTTPRoute specified
                  `test.example.com` and `test.example.net`, `test.example.net` must
                  not be considered for a match. \n If both the Listener and HTTPRoute
                  have specified hostnames, and none match with the criteria above,
                  then the HTTPRoute is not accepted. The implementation must raise
                  an 'Accepted' Condition with a status of `False` in the corresponding
                  RouteParentStatus. \n Support: Core"
                items:
                  description: "Hostname is the fully qualified domain name of a network
                    host. This matches the RFC 1123 definition of a hostname with
                    2 notable exceptions: \n 1. IPs are not allowed. 2. A hostname
                    may be prefixed with a wildcard label (`*.`). The wildcard    label
                    must appear by itself as the first label. \n Hostname can be \"precise\"
                    which is a domain name without the terminating dot of a network
                    host (e.g. \"foo.example.com\") or \"wildcard\", which is a domain
                    name prefixed with a single wildcard label (e.g. `*.example.com`).
                    \n Note that as per RFC1035 and RFC1123, a *label* must consist
                    of lower case alphanumeric characters or '-', and must start and
                    end with an alphanumeric character. No other punctuation is allowed."
                  maxLength: 253
                  minLength: 1
                  pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                maxItems: 16
                type: array
              parentRefs:
                description: "ParentRefs references the resources (usually Gateways)
                  that a Route wants to be attached to. Note that the referenced parent
                  resource needs to allow this for the attachment to be complete.
                  For Gateways, that means the Gateway needs to allow attachment from
                  Routes of this kind and namespace. \n The only kind of parent resource
                  with \"Core\" support is Gateway. This API may be extended in the
                  future to support additional kinds of parent resources such as one
                  of the route kinds. \n It is invalid to reference an identical parent
                  more than once. It is valid to reference multiple distinct sections
                  within the same parent resource, such as 2 Listeners within a Gateway.
                  \n It is possible to separately reference multiple distinct objects
                  that may be collapsed by an implementation. For example, some implementations
                  may choose to merge compatible Gateway Listeners together. If that
                  is the case, the list of routes attached to those resources should
                  also be merged."
                items:
                  description: "ParentReference identifies an API object (usually
                    a Gateway) that can be considered a parent of this resource (usually
                    a route). The only kind of parent resource with \"Core\" support
                    is Gateway. This API may be extended in the future to support
                    additional kinds of parent resources, such as HTTPRoute. \n The
                    API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid."
                  properties:
                    group:
                      default: policy.linkerd.io
                      description: "Group is the group of the referent. \n Support:
                        Core"
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: "Kind is kind of the referent. \n Support: Core
                        (Gateway) Support: Custom (Other Resources)"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: "Name is the name of the referent. \n Support:
                        Core"
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: "Namespace is the namespace of the referent. When
                        unspecified (or empty string), this refers to the local namespace
                        of the Route. \n Support: Core"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: "Port specifies the destination
                        port number to use for this resource.
                        Port is required when the referent is
                        a Kubernetes Service. In this case, the
                        port number is the service port number,
                        not the target port. For other resources,
                        destination port might be derived from
                        the referent resource or this field. \n Support: Extended"
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: "SectionName is the name of a section within the
                        target resource. In the following resources, SectionName is
                        interpreted as the following: \n * Gateway: Listener Name.
                        When both Port (experimental) and SectionName are specified,
                        the name and port of the selected listener must match both
                        specified values. \n Implementations MAY choose to support
                        attaching Routes to other resources. If that is the case,
                        they MUST clearly document how SectionName is interpreted.
                        \n When unspecified (empty string), this will reference the
                        entire resource. For the purpose of status, an attachment
                        is considered successful if at least one section in the parent
                        resource accepts it. For example, Gateway listeners can restrict
                        which Routes can attach to them by Route kind, namespace,
                        or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this
                        Route, the Route MUST be considered detached from the Gateway.
                        \n Support: Core"
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
              rules:
                default:
                - matches:
                  - path:
                      type: PathPrefix
                      value: /
                description: Rules are a list of HTTP matchers, filters and actions.
                items:
                  description: HTTPRouteRule defines semantics for matching an HTTP
                    request based on conditions (matches) and processing it (filters).
                  properties:
                    backendRefs:
                      description: "BackendRefs defines the backend(s) where matching
                        requests should be sent. \n Failure behavior here depends
                        on how many BackendRefs are specified and how many are invalid.
                        \n If *all* entries in BackendRefs are invalid, and there
                        are also no filters specified in this route rule, *all* traffic
                        which matches this rule MUST receive a 500 status code. \n
                        See the HTTPBackendRef definition for the rules about what
                        makes a single HTTPBackendRef invalid. \n When a HTTPBackendRef
                        is invalid, 500 status codes MUST be returned for requests
                        that would have otherwise been routed to an invalid backend.
                        If multiple backends are specified, and some are invalid,
                        the proportion of requests that would otherwise have been
                        routed to an invalid backend MUST receive a 500 status code.
                        \n For example, if two backends are specified with equal weights,
                        and one is invalid, 50 percent of traffic must receive a 500.
                        Implementations may choose how that 50 percent is determined.
                        \n Support: Core for Kubernetes Service \n Support: Implementation-specific
                        for any other resource \n Support for weight: Core"
                      items:
                        description: HTTPBackendRef defines how a HTTPRoute should
                          forward an HTTP request.
                        properties:
                          group:
                            default: ""
                            description: Group is the group of the referent. For example,
                              "gateway.networking.k8s.io". When unspecified or empty
                              string, core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: Kind is kind of the referent. For example
                              "HTTPRoute" or "Service". Defaults to "Service" when
                              not specified.
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: "Namespace is the namespace of the backend.
                              When unspecified, the local namespace is inferred. \n
                              Note that when a namespace is specified, a ReferenceGrant
                              object is required in the referent namespace to allow
                              that namespace's owner to accept the reference. See
                              the ReferenceGrant documentation for details. \n Support:
                              Core"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: Port specifies the destination port number
                              to use for this resource. Port is required when the
                              referent is a Kubernetes Service. In this case, the
                              port number is the service port number, not the target
                              port. For other resources, destination port might be
                              derived from the referent resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: "Weight specifies the proportion of requests
                              forwarded to the referenced backend. This is computed
                              as weight/(sum of all weights in this BackendRefs list).
                              For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision
                              an implementation supports. Weight is not a percentage
                              and the sum of weights does not need to equal 100. \n
                              If only one backend is specified and it has a weight
                              greater than 0, 100% of the traffic is forwarded to
                              that backend. If weight is set to 0, no traffic should
                              be forwarded for this entry. If unspecified, weight
                              defaults to 1. \n Support for this field varies based
                              on the context where used."
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                          filters:
                            description: "Filters defined at this level should be
                              executed if and only if the request is being forwarded
                              to the backend defined here. \n Support: Implementation-specific
                              (For broader support of filters, use the Filters field
                              in HTTPRouteRule.)"
                            items:
                              description: HTTPRouteFilter defines processing steps
                                that must be completed during the request or response
                                lifecycle. HTTPRouteFilters are meant as an extension
                                point to express processing that may be done in Gateway
                                implementations. Some examples include request or
                                response modification, implementing authentication
                                strategies, rate-limiting, and traffic shaping. API
                                guarantee/conformance is defined based on the type
                                of the filter.
                              properties:
                                requestHeaderModifier:
                                  description: "RequestHeaderModifier defines a schema
                                    for a filter that modifies request headers. \n
                                    Support: Core"
                                  properties:
                                    add:
                                      description: "Add adds the given header(s) (name,
                                        value) to the request before the action. It
                                        appends to any existing values associated
                                        with the header name. \n Input: GET /foo HTTP/1.1
                                        my-header: foo \n Config: add: - name: \"my-header\"
                                        value: \"bar,baz\" \n Output: GET /foo HTTP/1.1
                                        my-header: foo,bar,baz"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: "Remove the given header(s) from
                                        the HTTP request before the action. The value
                                        of Remove is a list of HTTP header names.
                                        Note that the header names are case-insensitive
                                        (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                        \n Input: GET /foo HTTP/1.1 my-header1: foo
                                        my-header2: bar my-header3: baz \n Config:
                                        remove: [\"my-header1\", \"my-header3\"] \n
                                        Output: GET /foo HTTP/1.1 my-header2: bar"
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                    set:
                                      description: "Set overwrites the request with
                                        the given header (name, value) before the
                                        action. \n Input: GET /foo HTTP/1.1 my-header:
                                        foo \n Config: set: - name: \"my-header\"
                                        value: \"bar\" \n Output: GET /foo HTTP/1.1
                                        my-header: bar"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                requestRedirect:
                                  description: "RequestRedirect defines a schema for
                                    a filter that responds to the request with an
                                    HTTP redirection. \n Support: Core"
                                  properties:
                                    hostname:
                                      description: "Hostname is the hostname to be
                                        used in the value of the `Location` header
                                        in the response. When empty, the hostname
                                        in the `Host` header of the request is used.
                                        \n Support: Core"
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: "Path defines parameters used to
                                        modify the path of the incoming request. The
                                        modified path is then used to construct the
                                        `Location` header. When empty, the request
                                        path is used as-is. \n Support: Extended"
                                      properties:
                                        replaceFullPath:
                                          description: ReplaceFullPath specifies the
                                            value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: "ReplacePrefixMatch specifies
                                            the value with which to replace the prefix
                                            match of a request during a rewrite or
                                            redirect. For example, a request to \"/foo/bar\"
                                            with a prefix match of \"/foo\" and a
                                            ReplacePrefixMatch of \"/xyz\" would be
                                            modified to \"/xyz/bar\". \n Note that
                                            this matches the behavior of the PathPrefix
                                            match type. This matches full path elements.
                                            A path element refers to the list of labels
                                            in the path split by the `/` separator.
                                            When specified, a trailing `/` is ignored.
                                            For example, the paths `/abc`, `/abc/`,
                                            and `/abc/def` would all match the prefix
                                            `/abc`, but the path `/abcd` would not.
                                            \n Request Path | Prefix Match | Replace
                                            Prefix | Modified Path -------------|--------------|----------------|----------
                                            /foo/bar     | /foo         | /xyz           |
                                            /xyz/bar /foo/bar     | /foo         |
                                            /xyz/          | /xyz/bar /foo/bar     |
                                            /foo/        | /xyz           | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz/          |
                                            /xyz/bar /foo         | /foo         |
                                            /xyz           | /xyz /foo/        | /foo
                                            \        | /xyz           | /xyz/ /foo/bar
                                            \    | /foo         | <empty string> |
                                            /bar /foo/        | /foo         | <empty
                                            string> | / /foo         | /foo         |
                                            <empty string> | / /foo/        | /foo
                                            \        | /              | / /foo         |
                                            /foo         | /              | /"
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: "Type defines the type of path
                                            modifier. Additional types may be added
                                            in a future release of the API. \n Note
                                            that values may be added to this enum,
                                            implementations must ensure that unknown
                                            values will not cause a crash. \n Unknown
                                            values here must result in the implementation
                                            setting the Accepted Condition for the
                                            Route to `status: False`, with a Reason
                                            of `UnsupportedValue`."
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    port:
                                      description: "Port is the port to be used in
                                        the value of the `Location` header in the
                                        response. \n If no port is specified, the
                                        redirect port MUST be derived using the following
                                        rules: \n * If redirect scheme is not-empty,
                                        the redirect port MUST be the well-known port
                                        associated with the redirect scheme. Specifically
                                        \"http\" to port 80 and \"https\" to port
                                        443. If the redirect scheme does not have
                                        a well-known port, the listener port of the
                                        Gateway SHOULD be used. * If redirect scheme
                                        is empty, the redirect port MUST be the Gateway
                                        Listener port. \n Implementations SHOULD NOT
                                        add the port number in the 'Location' header
                                        in the following cases: \n * A Location header
                                        that will use HTTP (whether that is determined
                                        via the Listener protocol or the Scheme field)
                                        _and_ use port 80. * A Location header that
                                        will use HTTPS (whether that is determined
                                        via the Listener protocol or the Scheme field)
                                        _and_ use port 443. \n Support: Extended"
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                    scheme:
                                      description: "Scheme is the scheme to be used
                                        in the value of the `Location` header in the
                                        response. When empty, the scheme of the request
                                        is used. \n Scheme redirects can affect the
                                        port of the redirect, for more information,
                                        refer to the documentation for the port field
                                        of this filter. \n Note that values may be
                                        added to this enum, implementations must ensure
                                        that unknown values will not cause a crash.
                                        \n Unknown values here must result in the
                                        implementation setting the Accepted Condition
                                        for the Route to `status: False`, with a Reason
                                        of `UnsupportedValue`. \n Support: Extended"
                                      enum:
                                      - http
                                      - https
                                      type: string
                                    statusCode:
                                      default: 302
                                      description: "StatusCode is the HTTP status
                                        code to be used in response. \n Note that
                                        values may be added to this enum, implementations
                                        must ensure that unknown values will not cause
                                        a crash. \n Unknown values here must result
                                        in the implementation setting the Accepted
                                        Condition for the Route to `status: False`,
                                        with a Reason of `UnsupportedValue`. \n Support:
                                        Core"
                                      enum:
                                      - 301
                                      - 302
                                      type: integer
                                  type: object
                                responseHeaderModifier:
                                  description: "ResponseHeaderModifier defines a schema
                                    for a filter that modifies response headers. \n
                                    Support: Extended"
                                  properties:
                                    add:
                                      description: "Add adds the given header(s) (name,
                                        value) to the request before the action. It
                                        appends to any existing values associated
                                        with the header name. \n Input: GET /foo HTTP/1.1
                                        my-header: foo \n Config: add: - name: \"my-header\"
                                        value: \"bar,baz\" \n Output: GET /foo HTTP/1.1
                                        my-header: foo,bar,baz"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: "Remove the given header(s) from
                                        the HTTP request before the action. The value
                                        of Remove is a list of HTTP header names.
                                        Note that the header names are case-insensitive
                                        (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                        \n Input: GET /foo HTTP/1.1 my-header1: foo
                                        my-header2: bar my-header3: baz \n Config:
                                        remove: [\"my-header1\", \"my-header3\"] \n
                                        Output: GET /foo HTTP/1.1 my-header2: bar"
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                    set:
                                      description: "Set overwrites the request with
                                        the given header (name, value) before the
                                        action. \n Input: GET /foo HTTP/1.1 my-header:
                                        foo \n Config: set: - name: \"my-header\"
                                        value: \"bar\" \n Output: GET /foo HTTP/1.1
                                        my-header: bar"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                type:
                                  description: "Type identifies the type of filter
                                    to apply. As with other API fields, types are
                                    classified into three conformance levels: \n -
                                    Core: Filter types and their corresponding configuration
                                    defined by \"Support: Core\" in this package,
                                    e.g. \"RequestHeaderModifier\". All implementations
                                    must support core filters. \n - Extended: Filter
                                    types and their corresponding configuration defined
                                    by \"Support: Extended\" in this package, e.g.
                                    \"RequestMirror\". Implementers are encouraged
                                    to support extended filters. \n - Implementation-specific:
                                    Filters that are defined and supported by specific
                                    vendors. In the future, filters showing convergence
                                    in behavior across multiple implementations will
                                    be considered for inclusion in extended or core
                                    conformance levels. Filter-specific configuration
                                    for such filters is specified using the ExtensionRef
                                    field. `Type` should be set to \"ExtensionRef\"
                                    for custom filters. \n Implementers are encouraged
                                    to define custom implementation types to extend
                                    the core API with implementation-specific behavior.
                                    \n If a reference to a custom filter type cannot
                                    be resolved, the filter MUST NOT be skipped. Instead,
                                    requests that would have been processed by that
                                    filter MUST receive a HTTP error response. \n
                                    Note that values may be added to this enum, implementations
                                    must ensure that unknown values will not cause
                                    a crash. \n Unknown values here must result in
                                    the implementation setting the Accepted Condition
                                    for the Route to `status: False`, with a Reason
                                    of `UnsupportedValue`."
                                  enum:
                                  - RequestHeaderModifier
                                  - ResponseHeaderModifier
                                  - RequestRedirect
                                  type: string
                              required:
                              - type
                              type: object
                            maxItems: 16
                            type: array
                        required:
                        - name
                        type: object
                      maxItems: 16
                      type: array
                    filters:
                      description: "Filters define the filters that are applied to
                        requests that match this rule. \n The effects of ordering
                        of multiple behaviors are currently unspecified. This can
                        change in the future based on feedback during the alpha stage.
                        \n Conformance-levels at this level are defined based on the
                        type of filter: \n - ALL core filters MUST be supported by
                        all implementations. - Implementers are encouraged to support
                        extended filters. - Implementation-specific custom filters
                        have no API guarantees across   implementations. \n Specifying
                        a core filter multiple times has unspecified or custom conformance.
                        \n All filters are expected to be compatible with each other
                        except for the URLRewrite and RequestRedirect filters, which
                        may not be combined. If an implementation can not support
                        other combinations of filters, they must clearly document
                        that limitation. In all cases where incompatible or unsupported
                        filters are specified, implementations MUST add a warning
                        condition to status. \n Support: Core"
                      items:
                        description: HTTPRouteFilter defines processing steps that
                          must be completed during the request or response lifecycle.
                          HTTPRouteFilters are meant as an extension point to express
                          processing that may be done in Gateway implementations.
                          Some examples include request or response modification,
                          implementing authentication strategies, rate-limiting, and
                          traffic shaping. API guarantee/conformance is defined based
                          on the type of the filter.
                        properties:
                          requestHeaderModifier:
                            description: "RequestHeaderModifier defines a schema for
                              a filter that modifies request headers. \n Support:
                              Core"
                            properties:
                              add:
                                description: "Add adds the given header(s) (name,
                                  value) to the request before the action. It appends
                                  to any existing values associated with the header
                                  name. \n Input:   GET /foo HTTP/1.1   my-header:
                                  foo \n Config:   add:   - name: \"my-header\"     value:
                                  \"bar\" \n Output:   GET /foo HTTP/1.1   my-header:
                                  foo   my-header: bar"
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: "Name is the name of the HTTP Header
                                        to be matched. Name matching MUST be case
                                        insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                        \n If multiple entries specify equivalent
                                        header names, the first entry with an equivalent
                                        name MUST be considered for a match. Subsequent
                                        entries with an equivalent header name MUST
                                        be ignored. Due to the case-insensitivity
                                        of header names, \"foo\" and \"Foo\" are considered
                                        equivalent."
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: "Remove the given header(s) from the
                                  HTTP request before the action. The value of Remove
                                  is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                  \n Input:   GET /foo HTTP/1.1   my-header1: foo
                                  \  my-header2: bar   my-header3: baz \n Config:
                                  \  remove: [\"my-header1\", \"my-header3\"] \n Output:
                                  \  GET /foo HTTP/1.1   my-header2: bar"
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                              set:
                                description: "Set overwrites the request with the
                                  given header (name, value) before the action. \n
                                  Input:   GET /foo HTTP/1.1   my-header: foo \n Config:
                                  \  set:   - name: \"my-header\"     value: \"bar\"
                                  \n Output:   GET /foo HTTP/1.1   my-header: bar"
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: "Name is the name of the HTTP Header
                                        to be matched. Name matching MUST be case
                                        insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                        \n If multiple entries specify equivalent
                                        header names, the first entry with an equivalent
                                        name MUST be considered for a match. Subsequent
                                        entries with an equivalent header name MUST
                                        be ignored. Due to the case-insensitivity
                                        of header names, \"foo\" and \"Foo\" are considered
                                        equivalent."
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          requestRedirect:
                            description: "RequestRedirect defines a schema for a filter
                              that responds to the request with an HTTP redirection.
                              \n Support: Core"
                            properties:
                              hostname:
                                description: "Hostname is the hostname to be used
                                  in the value of the `Location` header in the response.
                                  When empty, the hostname of the request is used.
                                  \n Support: Core"
                                maxLength: 253
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              path:
                                description: "Path defines parameters used to
                                  modify the path of the incoming request. The
                                  modified path is then used to construct the
                                  `Location` header. When empty, the request
                                  path is used as-is. \n Support: Extended"
                                properties:
                                  replaceFullPath:
                                    description: ReplaceFullPath specifies the
                                      value with which to replace the full path
                                      of a request during a rewrite or redirect.
                                    maxLength: 1024
                                    type: string
                                  replacePrefixMatch:
                                    description: "ReplacePrefixMatch specifies
                                      the value with which to replace the prefix
                                      match of a request during a rewrite or
                                      redirect. For example, a request to \"/foo/bar\"
                                      with a prefix match of \"/foo\" and a
                                      ReplacePrefixMatch of \"/xyz\" would be
                                      modified to \"/xyz/bar\". \n Note that
                                      this matches the behavior of the PathPrefix
                                      match type. This matches full path elements.
                                      A path element refers to the list of labels
                                      in the path split by the `/` separator.
                                      When specified, a trailing `/` is ignored.
                                      For example, the paths `/abc`, `/abc/`,
                                      and `/abc/def` would all match the prefix
                                      `/abc`, but the path `/abcd` would not.
                                      \n Request Path | Prefix Match | Replace
                                      Prefix | Modified Path -------------|--------------|----------------|----------
                                      /foo/bar     | /foo         | /xyz           |
                                      /xyz/bar /foo/bar     | /foo         |
                                      /xyz/          | /xyz/bar /foo/bar     |
                                      /foo/        | /xyz           | /xyz/bar
                                      /foo/bar     | /foo/        | /xyz/          |
                                      /xyz/bar /foo         | /foo         |
                                      /xyz           | /xyz /foo/        | /foo
                                      \        | /xyz           | /xyz/ /foo/bar
                                      \    | /foo         | <empty string> |
                                      /bar /foo/        | /foo         | <empty
                                      string> | / /foo         | /foo         |
                                      <empty string> | / /foo/        | /foo
                                      \        | /              | / /foo         |
                                      /foo         | /              | /"
                                    maxLength: 1024
                                    type: string
                                  type:
                                    description: "Type defines the type of path
                                      modifier. Additional types may be added
                                      in a future release of the API. \n Note
                                      that values may be added to this enum,
                                      implementations must ensure that unknown
                                      values will not cause a crash. \n Unknown
                                      values here must result in the implementation
                                      setting the Accepted Condition for the
                                      Route to `status: False`, with a Reason
                                      of `UnsupportedValue`."
                                    enum:
                                    - ReplaceFullPath
                                    - ReplacePrefixMatch
                                    type: string
                                required:
                                - type
                                type: object
                              port:
                                description: "Port is the port to be used in the value
                                  of the `Location` header in the response. When empty,
                                  port (if specified) of the request is used. \n Support:
                                  Extended"
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              scheme:
                                description: "Scheme is the scheme to be used in the
                                  value of the `Location` header in the response.
                                  When empty, the scheme of the request is used. \n
                                  Support: Extended"
                                enum:
                                - http
                                - https
                                type: string
                              statusCode:
                                default: 302
                                description: "StatusCode is the HTTP status code to
                                  be used in response. \n Support: Core"
                                enum:
                                - 301
                                - 302
                                type: integer
                            type: object
                          type:
                            description: "Type identifies the type of filter to apply.
                              As with other API fields, types are classified into
                              three conformance levels: \n - Core: Filter types and
                              their corresponding configuration defined by   \"Support:
                              Core\" in this package, e.g. \"RequestHeaderModifier\"."
                            enum:
                            - RequestHeaderModifier
                            - RequestRedirect
                            type: string
                        required:
                        - type
                        type: object
                      maxItems: 16
                      type: array
                    matches:
                      default:
                      - path:
                          type: PathPrefix
                          value: /
                      description: "Matches define conditions used for matching the
                        rule against incoming HTTP requests. Each match is independent,
                        i.e. this rule will be matched if **any** one of the matches
                        is satisfied. \n For example, take the following matches configuration:
                        \n ``` matches: - path:     value: \"/foo\"   headers:   -
                        name: \"version\"     value: \"v2\" - path:     value: \"/v2/foo\"
                        ``` \n For a request to match against this rule, a request
                        must satisfy EITHER of the two conditions: \n - path prefixed
                        with `/foo` AND contains the header `version: v2` - path prefix
                        of `/v2/foo` \n See the documentation for HTTPRouteMatch on
                        how to specify multiple match conditions that should be ANDed
                        together. \n If no matches are specified, the default is a
                        prefix path match on \"/\", which has the effect of matching
                        every HTTP request. \n Proxy or Load Balancer routing configuration
                        generated from HTTPRoutes MUST prioritize rules based on the
                        following criteria, continuing on ties. Precedence must be
                        given to the the Rule with the largest number of: \n * Characters
                        in a matching non-wildcard hostname. * Characters in a matching
                        hostname. * Characters in a matching path. * Header matches.
                        * Query param matches. \n If ties still exist across multiple
                        Routes, matching precedence MUST be determined in order of
                        the following criteria, continuing on ties: \n * The oldest
                        Route based on creation timestamp. * The Route appearing first
                        in alphabetical order by   \"{namespace}/{name}\". \n If ties
                        still exist within the Route that has been given precedence,
                        matching precedence MUST be granted to the first matching
                        rule meeting the above criteria. \n When no rules matching
                        a request have been successfully attached to the parent a
                        request is coming from, a HTTP 404 status code MUST be returned."
                      items:
                        description: "HTTPRouteMatch defines the predicate used to
                          match requests to a given action. Multiple match types are
                          ANDed together, i.e. the match will evaluate to true only
                          if all conditions are satisfied. \n For example, the match
                          below will match a HTTP request only if its path starts
                          with `/foo` AND it contains the `version: v1` header: \n
                          ``` match:   path:     value: \"/foo\"   headers:   - name:
                          \"version\"     value \"v1\" ```"
                        properties:
                          headers:
                            description: Headers specifies HTTP request header matchers.
                              Multiple match values are ANDed together, meaning, a
                              request must match all the specified headers to select
                              the route.
                            items:
                              description: HTTPHeaderMatch describes how to select
                                a HTTP route by matching HTTP request headers.
                              properties:
                                name:
                                  description: "Name is the name of the HTTP Header
                                    to be matched. Name matching MUST be case insensitive.
                                    (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                    \n If multiple entries specify equivalent header
                                    names, only the first entry with an equivalent
                                    name MUST be considered for a match. Subsequent
                                    entries with an equivalent header name MUST be
                                    ignored. Due to the case-insensitivity of header
                                    names, \"foo\" and \"Foo\" are considered equivalent.
                                    \n When a header is repeated in an HTTP request,
                                    it is implementation-specific behavior as to how
                                    this is represented. Generally, proxies should
                                    follow the guidance from the RFC: https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2
                                    regarding processing a repeated header, with special
                                    handling for \"Set-Cookie\"."
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: "Type specifies how to match against
                                    the value of the header. \n Support: Core (Exact)
                                    \n Support: Custom (RegularExpression) \n Since
                                    RegularExpression HeaderMatchType has custom conformance,
                                    implementations can support POSIX, PCRE or any
                                    other dialects of regular expressions. Please
                                    read the implementation's documentation to determine
                                    the supported dialect."
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP Header to
                                    be matched.
                                  maxLength: 4096
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          method:
                            description: "Method specifies HTTP method matcher. When
                              specified, this route will be matched only if the request
                              has the specified method. \n Support: Extended"
                            enum:
                            - GET
                            - HEAD
                            - POST
                            - PUT
                            - DELETE
                            - CONNECT
                            - OPTIONS
                            - TRACE
                            - PATCH
                            type: string
                          path:
                            default:
                              type: PathPrefix
                              value: /
                            description: Path specifies a HTTP request path matcher.
                              If this field is not specified, a default prefix match
                              on the "/" path is provided.
                            properties:
                              type:
                                default: PathPrefix
                                description: "Type specifies how to match against
                                  the path Value. \n Support: Core (Exact, PathPrefix)
                                  \n Support: Custom (RegularExpression)"
                                enum:
                                - Exact
                                - PathPrefix
                                - RegularExpression
                                type: string
                              value:
                                default: /
                                description: Value of the HTTP path to match against.
                                maxLength: 1024
                                type: string
                            type: object
                          queryParams:
                            description: QueryParams specifies HTTP query parameter
                              matchers. Multiple match values are ANDed together,
                              meaning, a request must match all the specified query
                              parameters to select the route.
                            items:
                              description: HTTPQueryParamMatch describes how to select
                                a HTTP route by matching HTTP query parameters.
                              properties:
                                name:
                                  description: Name is the name of the HTTP query
                                    param to be matched. This must be an exact string
                                    match. (See https://tools.ietf.org/html/rfc7230#section-2.7.3).
                                  maxLength: 256
                                  minLength: 1
                                  type: string
                                type:
                                  default: Exact
                                  description: "Type specifies how to match against
                                    the value of the query parameter. \n Support:
                                    Extended (Exact) \n Support: Custom (RegularExpression)
                                    \n Since RegularExpression QueryParamMatchType
                                    has custom conformance, implementations can support
                                    POSIX, PCRE or any other dialects of regular expressions.
                                    Please read the implementation's documentation
                                    to determine the supported dialect."
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP query param
                                    to be matched.
                                  maxLength: 1024
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                        type: object
                      maxItems: 8
                      type: array
                  type: object
                maxItems: 16
                type: array
            type: object
          status:
            description: Status defines the current state of HTTPRoute.
            properties:
              parents:
                description: "Parents is a list of parent resources (usually Gateways)
                  that are associated with the route, and the status of the route
                  with respect to each parent. When this route attaches to a parent,
                  the controller that manages the parent must add an entry to this
                  list when the controller first sees the route and should update
                  the entry as appropriate when the route or gateway is modified.
                  \n Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this
                  API can only populate Route status for the Gateways/parent resources
                  they are responsible for. \n A maximum of 32 Gateways will be represented
                  in this list. An empty list means the route has not been attached
                  to any Gateway."
                items:
                  description: RouteParentStatus describes the status of a route with
                    respect to an associated Parent.
                  properties:
                    conditions:
                      description: "Conditions describes the status of the route with
                        respect to the Gateway. Note that the route's availability
                        is also subject to the Gateway's own status conditions and
                        listener status. \n If the Route's ParentRef specifies an
                        existing Gateway that supports Routes of this kind AND that
                        Gateway's controller has sufficient access, then that Gateway's
                        controller MUST set the \"Accepted\" condition on the Route,
                        to indicate whether the route has been accepted or rejected
                        by the Gateway, and why. \n A Route MUST be considered \"Accepted\"
                        if at least one of the Route's rules is implemented by the
                        Gateway. \n There are a number of cases where the \"Accepted\"
                        condition may not be set due to lack of controller visibility,
                        that includes when: \n * The Route refers to a non-existent
                        parent. * The Route is of a type that the controller does
                        not support. * The Route is in a namespace the the controller
                        does not have access to."
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource. --- This struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example, type FooStatus struct{
                          \    // Represents the observations of a foo's current state.
                          \    // Known .status.conditions.type are: \"Available\",
                          \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                          \    // +patchStrategy=merge     // +listType=map     //
                          +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                          patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                          \n     // other fields }"
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime is the last time the condition
                              transitioned from one status to another. This should
                              be when the underlying condition changed.  If that is
                              not known, then using the time when the API field changed
                              is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: message is a human readable message indicating
                              details about the transition. This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation
                              that the condition was set based upon. For instance,
                              if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                              is 9, the condition is out of date with respect to the
                              current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. The value should
                              be a CamelCase string. This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              --- Many .condition.type values are consistent across
                              resources like Available, but because arbitrary conditions
                              can be useful (see .node.status.conditions), the ability
                              to deconflict is important. The regex it matches is
                              (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: "ControllerName is a domain/path string that indicates
                        the name of the controller that wrote this status. This corresponds
                        with the controllerName field on GatewayClass. \n Example:
                        \"example.net/gateway-controller\". \n The format of this
                        field is DOMAIN \"/\" PATH, where DOMAIN and PATH are valid
                        Kubernetes names (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                        \n Controllers MUST populate this field when writing status.
                        Controllers should ensure that entries to status populated
                        with their ControllerName are cleaned up when they are no
                        longer necessary."
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: ParentRef corresponds with a ParentRef in the spec
                        that this RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: policy.linkerd.io
                          description: "Group is the group of the referent. \n Support:
                            Core"
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: "Kind is kind of the referent. \n Support:
                            Core (Gateway) Support: Custom (Other Resources)"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: "Name is the name of the referent. \n Support:
                            Core"
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: "Namespace is the namespace of the referent.
                            When unspecified (or empty string), this refers to the
                            local namespace of the Route. \n Support: Core"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: "Port is the network port this Route targets.
                            It can be interpreted differently based on the type of
                            parent resource. \n When the parent resource is a Gateway,
                            this targets all listeners listening on the specified
                            port that also support this kind of Route(and select this
                            Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to
                            a specific port as opposed to a listener(s) whose port(s)
                            may be changed. When both Port and SectionName are specified,
                            the name and port of the selected listener must match
                            both specified values. \n Implementations MAY choose to
                            support other parent resources. Implementations supporting
                            other types of parent resources MUST clearly document
                            how/if Port is interpreted. \n For the purpose of status,
                            an attachment is considered successful as long as the
                            parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them
                            by Route kind, namespace, or hostname. If 1 of 2 Gateway
                            listeners accept attachment from the referencing Route,
                            the Route MUST be considered successfully attached. If
                            no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.
                            \n Support: Extended \n <gateway:experimental>"
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: "SectionName is the name of a section within
                            the target resource. In the following resources, SectionName
                            is interpreted as the following: \n * Gateway: Listener
                            Name. When both Port (experimental) and SectionName are
                            specified, the name and port of the selected listener
                            must match both specified values. \n Implementations MAY
                            choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName
                            is interpreted. \n When unspecified (empty string), this
                            will reference the entire resource. For the purpose of
                            status, an attachment is considered successful if at least
                            one section in the parent resource accepts it. For example,
                            Gateway listeners can restrict which Routes can attach
                            to them by Route kind, namespace, or hostname. If 1 of
                            2 Gateway listeners accept attachment from the referencing
                            Route, the Route MUST be considered successfully attached.
                            If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.
                            \n Support: Core"
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        required:
        - spec
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .spec.hostnames
      name: Hostnames
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1beta3
    schema:
      openAPIV3Schema:
        description: HTTPRoute provides a way to route HTTP requests. This includes
          the capability to match requests by hostname, path, header, or query param.
          Filters can be used to specify additional processing steps. Backends specify
          where matching requests should be routed.
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of HTTPRoute.
            properties:
              hostnames:
                description: "Hostnames defines a set of hostname that should match
                  against the HTTP Host header to select a HTTPRoute to process the
                  request. This matches the RFC 1123 definition of a hostname with
                  2 notable exceptions: \n 1. IPs are not allowed. 2. A hostname may
                  be prefixed with a wildcard label (`*.`). The wildcard    label
                  must appear by itself as the first label. \n If a hostname is specified
                  by both the Listener and HTTPRoute, there must be at least one intersecting
                  hostname for the HTTPRoute to be attached to the Listener. For example:
                  \n * A Listener with `test.example.com` as the hostname matches
                  HTTPRoutes   that have either not specified any hostnames, or have
                  specified at   least one of `test.example.com` or `*.example.com`.
                  * A Listener with `*.example.com` as the hostname matches HTTPRoutes
                  \  that have either not specified any hostnames or have specified
                  at least   one hostname that matches the Listener hostname. For
                  example,   `*.example.com`, `test.example.com`, and `foo.test.example.com`
                  would   all match. On the other hand, `example.com` and `test.example.net`
                  would   not match. \n Hostnames that are prefixed with a wildcard
                  label (`*.`) are interpreted as a suffix match. That means that
                  a match for `*.example.com` would match both `test.example.com`,
                  and `foo.test.example.com`, but not `example.com`. \n If both the
                  Listener and HTTPRoute have specified hostnames, any HTTPRoute hostnames
                  that do not match the Listener hostname MUST be ignored. For example,
                  if a Listener specified `*.example.com`, and the HTTPRoute specified
                  `test.example.com` and `test.example.net`, `test.example.net` must
                  not be considered for a match. \n If both the Listener and HTTPRoute
                  have specified hostnames, and none match with the criteria above,
                  then the HTTPRoute is not accepted. The implementation must raise
                  an 'Accepted' Condition with a status of `False` in the corresponding
                  RouteParentStatus. \n Support: Core"
                items:
                  description: "Hostname is the fully qualified domain name of a network
                    host. This matches the RFC 1123 definition of a hostname with
                    2 notable exceptions: \n 1. IPs are not allowed. 2. A hostname
                    may be prefixed with a wildcard label (`*.`). The wildcard    label
                    must appear by itself as the first label. \n Hostname can be \"precise\"
                    which is a domain name without the terminating dot of a network
                    host (e.g. \"foo.example.com\") or \"wildcard\", which is a domain
                    name prefixed with a single wildcard label (e.g. `*.example.com`).
                    \n Note that as per RFC1035 and RFC1123, a *label* must consist
                    of lower case alphanumeric characters or '-', and must start and
                    end with an alphanumeric character. No other punctuation is allowed."
                  maxLength: 253
                  minLength: 1
                  pattern: ^(\*\.)?[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                  type: string
                maxItems: 16
                type: array
              parentRefs:
                description: "ParentRefs references the resources (usually Gateways)
                  that a Route wants to be attached to. Note that the referenced parent
                  resource needs to allow this for the attachment to be complete.
                  For Gateways, that means the Gateway needs to allow attachment from
                  Routes of this kind and namespace. \n The only kind of parent resource
                  with \"Core\" support is Gateway. This API may be extended in the
                  future to support additional kinds of parent resources such as one
                  of the route kinds. \n It is invalid to reference an identical parent
                  more than once. It is valid to reference multiple distinct sections
                  within the same parent resource, such as 2 Listeners within a Gateway.
                  \n It is possible to separately reference multiple distinct objects
                  that may be collapsed by an implementation. For example, some implementations
                  may choose to merge compatible Gateway Listeners together. If that
                  is the case, the list of routes attached to those resources should
                  also be merged."
                items:
                  description: "ParentReference identifies an API object (usually
                    a Gateway) that can be considered a parent of this resource (usually
                    a route). The only kind of parent resource with \"Core\" support
                    is Gateway. This API may be extended in the future to support
                    additional kinds of parent resources, such as HTTPRoute. \n The
                    API object must be valid in the cluster; the Group and Kind must
                    be registered in the cluster for this reference to be valid."
                  properties:
                    group:
                      default: policy.linkerd.io
                      description: "Group is the group of the referent. \n Support:
                        Core"
                      maxLength: 253
                      pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                    kind:
                      default: Gateway
                      description: "Kind is kind of the referent. \n Support: Core
                        (Gateway) Support: Custom (Other Resources)"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                      type: string
                    name:
                      description: "Name is the name of the referent. \n Support:
                        Core"
                      maxLength: 253
                      minLength: 1
                      type: string
                    namespace:
                      description: "Namespace is the namespace of the referent. When
                        unspecified (or empty string), this refers to the local namespace
                        of the Route. \n Support: Core"
                      maxLength: 63
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                      type: string
                    port:
                      description: "Port specifies the destination
                        port number to use for this resource.
                        Port is required when the referent is
                        a Kubernetes Service. In this case, the
                        port number is the service port number,
                        not the target port. For other resources,
                        destination port might be derived from
                        the referent resource or this field. \n Support: Extended"
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    sectionName:
                      description: "SectionName is the name of a section within the
                        target resource. In the following resources, SectionName is
                        interpreted as the following: \n * Gateway: Listener Name.
                        When both Port (experimental) and SectionName are specified,
                        the name and port of the selected listener must match both
                        specified values. \n Implementations MAY choose to support
                        attaching Routes to other resources. If that is the case,
                        they MUST clearly document how SectionName is interpreted.
                        \n When unspecified (empty string), this will reference the
                        entire resource. For the purpose of status, an attachment
                        is considered successful if at least one section in the parent
                        resource accepts it. For example, Gateway listeners can restrict
                        which Routes can attach to them by Route kind, namespace,
                        or hostname. If 1 of 2 Gateway listeners accept attachment
                        from the referencing Route, the Route MUST be considered successfully
                        attached. If no Gateway listeners accept attachment from this
                        Route, the Route MUST be considered detached from the Gateway.
                        \n Support: Core"
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                      type: string
                  required:
                  - name
                  type: object
                maxItems: 32
                type: array
              rules:
                default:
                - matches:
                  - path:
                      type: PathPrefix
                      value: /
                description: Rules are a list of HTTP matchers, filters and actions.
                items:
                  description: HTTPRouteRule defines semantics for matching an HTTP
                    request based on conditions (matches) and processing it (filters).
                  properties:
                    backendRefs:
                      description: "BackendRefs defines the backend(s) where matching
                        requests should be sent. \n Failure behavior here depends
                        on how many BackendRefs are specified and how many are invalid.
                        \n If *all* entries in BackendRefs are invalid, and there
                        are also no filters specified in this route rule, *all* traffic
                        which matches this rule MUST receive a 500 status code. \n
                        See the HTTPBackendRef definition for the rules about what
                        makes a single HTTPBackendRef invalid. \n When a HTTPBackendRef
                        is invalid, 500 status codes MUST be returned for requests
                        that would have otherwise been routed to an invalid backend.
                        If multiple backends are specified, and some are invalid,
                        the proportion of requests that would otherwise have been
                        routed to an invalid backend MUST receive a 500 status code.
                        \n For example, if two backends are specified with equal weights,
                        and one is invalid, 50 percent of traffic must receive a 500.
                        Implementations may choose how that 50 percent is determined.
                        \n Support: Core for Kubernetes Service \n Support: Implementation-specific
                        for any other resource \n Support for weight: Core"
                      items:
                        description: HTTPBackendRef defines how a HTTPRoute should
                          forward an HTTP request.
                        properties:
                          group:
                            default: ""
                            description: Group is the group of the referent. For example,
                              "gateway.networking.k8s.io". When unspecified or empty
                              string, core API group is inferred.
                            maxLength: 253
                            pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                            type: string
                          kind:
                            default: Service
                            description: Kind is kind of the referent. For example
                              "HTTPRoute" or "Service". Defaults to "Service" when
                              not specified.
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                            type: string
                          name:
                            description: Name is the name of the referent.
                            maxLength: 253
                            minLength: 1
                            type: string
                          namespace:
                            description: "Namespace is the namespace of the backend.
                              When unspecified, the local namespace is inferred. \n
                              Note that when a namespace is specified, a ReferenceGrant
                              object is required in the referent namespace to allow
                              that namespace's owner to accept the reference. See
                              the ReferenceGrant documentation for details. \n Support:
                              Core"
                            maxLength: 63
                            minLength: 1
                            pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                            type: string
                          port:
                            description: Port specifies the destination port number
                              to use for this resource. Port is required when the
                              referent is a Kubernetes Service. In this case, the
                              port number is the service port number, not the target
                              port. For other resources, destination port might be
                              derived from the referent resource or this field.
                            format: int32
                            maximum: 65535
                            minimum: 1
                            type: integer
                          weight:
                            default: 1
                            description: "Weight specifies the proportion of requests
                              forwarded to the referenced backend. This is computed
                              as weight/(sum of all weights in this BackendRefs list).
                              For non-zero values, there may be some epsilon from
                              the exact proportion defined here depending on the precision
                              an implementation supports. Weight is not a percentage
                              and the sum of weights does not need to equal 100. \n
                              If only one backend is specified and it has a weight
                              greater than 0, 100% of the traffic is forwarded to
                              that backend. If weight is set to 0, no traffic should
                              be forwarded for this entry. If unspecified, weight
                              defaults to 1. \n Support for this field varies based
                              on the context where used."
                            format: int32
                            maximum: 1000000
                            minimum: 0
                            type: integer
                          filters:
                            description: "Filters defined at this level should be
                              executed if and only if the request is being forwarded
                              to the backend defined here. \n Support: Implementation-specific
                              (For broader support of filters, use the Filters field
                              in HTTPRouteRule.)"
                            items:
                              description: HTTPRouteFilter defines processing steps
                                that must be completed during the request or response
                                lifecycle. HTTPRouteFilters are meant as an extension
                                point to express processing that may be done in Gateway
                                implementations. Some examples include request or
                                response modification, implementing authentication
                                strategies, rate-limiting, and traffic shaping. API
                                guarantee/conformance is defined based on the type
                                of the filter.
                              properties:
                                requestHeaderModifier:
                                  description: "RequestHeaderModifier defines a schema
                                    for a filter that modifies request headers. \n
                                    Support: Core"
                                  properties:
                                    add:
                                      description: "Add adds the given header(s) (name,
                                        value) to the request before the action. It
                                        appends to any existing values associated
                                        with the header name. \n Input: GET /foo HTTP/1.1
                                        my-header: foo \n Config: add: - name: \"my-header\"
                                        value: \"bar,baz\" \n Output: GET /foo HTTP/1.1
                                        my-header: foo,bar,baz"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: "Remove the given header(s) from
                                        the HTTP request before the action. The value
                                        of Remove is a list of HTTP header names.
                                        Note that the header names are case-insensitive
                                        (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                        \n Input: GET /foo HTTP/1.1 my-header1: foo
                                        my-header2: bar my-header3: baz \n Config:
                                        remove: [\"my-header1\", \"my-header3\"] \n
                                        Output: GET /foo HTTP/1.1 my-header2: bar"
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                    set:
                                      description: "Set overwrites the request with
                                        the given header (name, value) before the
                                        action. \n Input: GET /foo HTTP/1.1 my-header:
                                        foo \n Config: set: - name: \"my-header\"
                                        value: \"bar\" \n Output: GET /foo HTTP/1.1
                                        my-header: bar"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                requestRedirect:
                                  description: "RequestRedirect defines a schema for
                                    a filter that responds to the request with an
                                    HTTP redirection. \n Support: Core"
                                  properties:
                                    hostname:
                                      description: "Hostname is the hostname to be
                                        used in the value of the `Location` header
                                        in the response. When empty, the hostname
                                        in the `Host` header of the request is used.
                                        \n Support: Core"
                                      maxLength: 253
                                      minLength: 1
                                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                      type: string
                                    path:
                                      description: "Path defines parameters used to
                                        modify the path of the incoming request. The
                                        modified path is then used to construct the
                                        `Location` header. When empty, the request
                                        path is used as-is. \n Support: Extended"
                                      properties:
                                        replaceFullPath:
                                          description: ReplaceFullPath specifies the
                                            value with which to replace the full path
                                            of a request during a rewrite or redirect.
                                          maxLength: 1024
                                          type: string
                                        replacePrefixMatch:
                                          description: "ReplacePrefixMatch specifies
                                            the value with which to replace the prefix
                                            match of a request during a rewrite or
                                            redirect. For example, a request to \"/foo/bar\"
                                            with a prefix match of \"/foo\" and a
                                            ReplacePrefixMatch of \"/xyz\" would be
                                            modified to \"/xyz/bar\". \n Note that
                                            this matches the behavior of the PathPrefix
                                            match type. This matches full path elements.
                                            A path element refers to the list of labels
                                            in the path split by the `/` separator.
                                            When specified, a trailing `/` is ignored.
                                            For example, the paths `/abc`, `/abc/`,
                                            and `/abc/def` would all match the prefix
                                            `/abc`, but the path `/abcd` would not.
                                            \n Request Path | Prefix Match | Replace
                                            Prefix | Modified Path -------------|--------------|----------------|----------
                                            /foo/bar     | /foo         | /xyz           |
                                            /xyz/bar /foo/bar     | /foo         |
                                            /xyz/          | /xyz/bar /foo/bar     |
                                            /foo/        | /xyz           | /xyz/bar
                                            /foo/bar     | /foo/        | /xyz/          |
                                            /xyz/bar /foo         | /foo         |
                                            /xyz           | /xyz /foo/        | /foo
                                            \        | /xyz           | /xyz/ /foo/bar
                                            \    | /foo         | <empty string> |
                                            /bar /foo/        | /foo         | <empty
                                            string> | / /foo         | /foo         |
                                            <empty string> | / /foo/        | /foo
                                            \        | /              | / /foo         |
                                            /foo         | /              | /"
                                          maxLength: 1024
                                          type: string
                                        type:
                                          description: "Type defines the type of path
                                            modifier. Additional types may be added
                                            in a future release of the API. \n Note
                                            that values may be added to this enum,
                                            implementations must ensure that unknown
                                            values will not cause a crash. \n Unknown
                                            values here must result in the implementation
                                            setting the Accepted Condition for the
                                            Route to `status: False`, with a Reason
                                            of `UnsupportedValue`."
                                          enum:
                                          - ReplaceFullPath
                                          - ReplacePrefixMatch
                                          type: string
                                      required:
                                      - type
                                      type: object
                                    port:
                                      description: "Port is the port to be used in
                                        the value of the `Location` header in the
                                        response. \n If no port is specified, the
                                        redirect port MUST be derived using the following
                                        rules: \n * If redirect scheme is not-empty,
                                        the redirect port MUST be the well-known port
                                        associated with the redirect scheme. Specifically
                                        \"http\" to port 80 and \"https\" to port
                                        443. If the redirect scheme does not have
                                        a well-known port, the listener port of the
                                        Gateway SHOULD be used. * If redirect scheme
                                        is empty, the redirect port MUST be the Gateway
                                        Listener port. \n Implementations SHOULD NOT
                                        add the port number in the 'Location' header
                                        in the following cases: \n * A Location header
                                        that will use HTTP (whether that is determined
                                        via the Listener protocol or the Scheme field)
                                        _and_ use port 80. * A Location header that
                                        will use HTTPS (whether that is determined
                                        via the Listener protocol or the Scheme field)
                                        _and_ use port 443. \n Support: Extended"
                                      format: int32
                                      maximum: 65535
                                      minimum: 1
                                      type: integer
                                    scheme:
                                      description: "Scheme is the scheme to be used
                                        in the value of the `Location` header in the
                                        response. When empty, the scheme of the request
                                        is used. \n Scheme redirects can affect the
                                        port of the redirect, for more information,
                                        refer to the documentation for the port field
                                        of this filter. \n Note that values may be
                                        added to this enum, implementations must ensure
                                        that unknown values will not cause a crash.
                                        \n Unknown values here must result in the
                                        implementation setting the Accepted Condition
                                        for the Route to `status: False`, with a Reason
                                        of `UnsupportedValue`. \n Support: Extended"
                                      enum:
                                      - http
                                      - https
                                      type: string
                                    statusCode:
                                      default: 302
                                      description: "StatusCode is the HTTP status
                                        code to be used in response. \n Note that
                                        values may be added to this enum, implementations
                                        must ensure that unknown values will not cause
                                        a crash. \n Unknown values here must result
                                        in the implementation setting the Accepted
                                        Condition for the Route to `status: False`,
                                        with a Reason of `UnsupportedValue`. \n Support:
                                        Core"
                                      enum:
                                      - 301
                                      - 302
                                      type: integer
                                  type: object
                                responseHeaderModifier:
                                  description: "ResponseHeaderModifier defines a schema
                                    for a filter that modifies response headers. \n
                                    Support: Extended"
                                  properties:
                                    add:
                                      description: "Add adds the given header(s) (name,
                                        value) to the request before the action. It
                                        appends to any existing values associated
                                        with the header name. \n Input: GET /foo HTTP/1.1
                                        my-header: foo \n Config: add: - name: \"my-header\"
                                        value: \"bar,baz\" \n Output: GET /foo HTTP/1.1
                                        my-header: foo,bar,baz"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                    remove:
                                      description: "Remove the given header(s) from
                                        the HTTP request before the action. The value
                                        of Remove is a list of HTTP header names.
                                        Note that the header names are case-insensitive
                                        (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                        \n Input: GET /foo HTTP/1.1 my-header1: foo
                                        my-header2: bar my-header3: baz \n Config:
                                        remove: [\"my-header1\", \"my-header3\"] \n
                                        Output: GET /foo HTTP/1.1 my-header2: bar"
                                      items:
                                        type: string
                                      maxItems: 16
                                      type: array
                                    set:
                                      description: "Set overwrites the request with
                                        the given header (name, value) before the
                                        action. \n Input: GET /foo HTTP/1.1 my-header:
                                        foo \n Config: set: - name: \"my-header\"
                                        value: \"bar\" \n Output: GET /foo HTTP/1.1
                                        my-header: bar"
                                      items:
                                        description: HTTPHeader represents an HTTP
                                          Header name and value as defined by RFC
                                          7230.
                                        properties:
                                          name:
                                            description: "Name is the name of the
                                              HTTP Header to be matched. Name matching
                                              MUST be case insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                              \n If multiple entries specify equivalent
                                              header names, the first entry with an
                                              equivalent name MUST be considered for
                                              a match. Subsequent entries with an
                                              equivalent header name MUST be ignored.
                                              Due to the case-insensitivity of header
                                              names, \"foo\" and \"Foo\" are considered
                                              equivalent."
                                            maxLength: 256
                                            minLength: 1
                                            pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                            type: string
                                          value:
                                            description: Value is the value of HTTP
                                              Header to be matched.
                                            maxLength: 4096
                                            minLength: 1
                                            type: string
                                        required:
                                        - name
                                        - value
                                        type: object
                                      maxItems: 16
                                      type: array
                                      x-kubernetes-list-map-keys:
                                      - name
                                      x-kubernetes-list-type: map
                                  type: object
                                type:
                                  description: "Type identifies the type of filter
                                    to apply. As with other API fields, types are
                                    classified into three conformance levels: \n -
                                    Core: Filter types and their corresponding configuration
                                    defined by \"Support: Core\" in this package,
                                    e.g. \"RequestHeaderModifier\". All implementations
                                    must support core filters. \n - Extended: Filter
                                    types and their corresponding configuration defined
                                    by \"Support: Extended\" in this package, e.g.
                                    \"RequestMirror\". Implementers are encouraged
                                    to support extended filters. \n - Implementation-specific:
                                    Filters that are defined and supported by specific
                                    vendors. In the future, filters showing convergence
                                    in behavior across multiple implementations will
                                    be considered for inclusion in extended or core
                                    conformance levels. Filter-specific configuration
                                    for such filters is specified using the ExtensionRef
                                    field. `Type` should be set to \"ExtensionRef\"
                                    for custom filters. \n Implementers are encouraged
                                    to define custom implementation types to extend
                                    the core API with implementation-specific behavior.
                                    \n If a reference to a custom filter type cannot
                                    be resolved, the filter MUST NOT be skipped. Instead,
                                    requests that would have been processed by that
                                    filter MUST receive a HTTP error response. \n
                                    Note that values may be added to this enum, implementations
                                    must ensure that unknown values will not cause
                                    a crash. \n Unknown values here must result in
                                    the implementation setting the Accepted Condition
                                    for the Route to `status: False`, with a Reason
                                    of `UnsupportedValue`."
                                  enum:
                                  - RequestHeaderModifier
                                  - ResponseHeaderModifier
                                  - RequestRedirect
                                  type: string
                              required:
                              - type
                              type: object
                            maxItems: 16
                            type: array
                        required:
                        - name
                        type: object
                      maxItems: 16
                      type: array
                    filters:
                      description: "Filters define the filters that are applied to
                        requests that match this rule. \n The effects of ordering
                        of multiple behaviors are currently unspecified. This can
                        change in the future based on feedback during the alpha stage.
                        \n Conformance-levels at this level are defined based on the
                        type of filter: \n - ALL core filters MUST be supported by
                        all implementations. - Implementers are encouraged to support
                        extended filters. - Implementation-specific custom filters
                        have no API guarantees across   implementations. \n Specifying
                        a core filter multiple times has unspecified or custom conformance.
                        \n All filters are expected to be compatible with each other
                        except for the URLRewrite and RequestRedirect filters, which
                        may not be combined. If an implementation can not support
                        other combinations of filters, they must clearly document
                        that limitation. In all cases where incompatible or unsupported
                        filters are specified, implementations MUST add a warning
                        condition to status. \n Support: Core"
                      items:
                        description: HTTPRouteFilter defines processing steps that
                          must be completed during the request or response lifecycle.
                          HTTPRouteFilters are meant as an extension point to express
                          processing that may be done in Gateway implementations.
                          Some examples include request or response modification,
                          implementing authentication strategies, rate-limiting, and
                          traffic shaping. API guarantee/conformance is defined based
                          on the type of the filter.
                        properties:
                          requestHeaderModifier:
                            description: "RequestHeaderModifier defines a schema for
                              a filter that modifies request headers. \n Support:
                              Core"
                            properties:
                              add:
                                description: "Add adds the given header(s) (name,
                                  value) to the request before the action. It appends
                                  to any existing values associated with the header
                                  name. \n Input:   GET /foo HTTP/1.1   my-header:
                                  foo \n Config:   add:   - name: \"my-header\"     value:
                                  \"bar\" \n Output:   GET /foo HTTP/1.1   my-header:
                                  foo   my-header: bar"
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: "Name is the name of the HTTP Header
                                        to be matched. Name matching MUST be case
                                        insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                        \n If multiple entries specify equivalent
                                        header names, the first entry with an equivalent
                                        name MUST be considered for a match. Subsequent
                                        entries with an equivalent header name MUST
                                        be ignored. Due to the case-insensitivity
                                        of header names, \"foo\" and \"Foo\" are considered
                                        equivalent."
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                              remove:
                                description: "Remove the given header(s) from the
                                  HTTP request before the action. The value of Remove
                                  is a list of HTTP header names. Note that the header
                                  names are case-insensitive (see https://datatracker.ietf.org/doc/html/rfc2616#section-4.2).
                                  \n Input:   GET /foo HTTP/1.1   my-header1: foo
                                  \  my-header2: bar   my-header3: baz \n Config:
                                  \  remove: [\"my-header1\", \"my-header3\"] \n Output:
                                  \  GET /foo HTTP/1.1   my-header2: bar"
                                items:
                                  type: string
                                maxItems: 16
                                type: array
                              set:
                                description: "Set overwrites the request with the
                                  given header (name, value) before the action. \n
                                  Input:   GET /foo HTTP/1.1   my-header: foo \n Config:
                                  \  set:   - name: \"my-header\"     value: \"bar\"
                                  \n Output:   GET /foo HTTP/1.1   my-header: bar"
                                items:
                                  description: HTTPHeader represents an HTTP Header
                                    name and value as defined by RFC 7230.
                                  properties:
                                    name:
                                      description: "Name is the name of the HTTP Header
                                        to be matched. Name matching MUST be case
                                        insensitive. (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                        \n If multiple entries specify equivalent
                                        header names, the first entry with an equivalent
                                        name MUST be considered for a match. Subsequent
                                        entries with an equivalent header name MUST
                                        be ignored. Due to the case-insensitivity
                                        of header names, \"foo\" and \"Foo\" are considered
                                        equivalent."
                                      maxLength: 256
                                      minLength: 1
                                      pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                      type: string
                                    value:
                                      description: Value is the value of HTTP Header
                                        to be matched.
                                      maxLength: 4096
                                      minLength: 1
                                      type: string
                                  required:
                                  - name
                                  - value
                                  type: object
                                maxItems: 16
                                type: array
                                x-kubernetes-list-map-keys:
                                - name
                                x-kubernetes-list-type: map
                            type: object
                          requestRedirect:
                            description: "RequestRedirect defines a schema for a filter
                              that responds to the request with an HTTP redirection.
                              \n Support: Core"
                            properties:
                              hostname:
                                description: "Hostname is the hostname to be used
                                  in the value of the `Location` header in the response.
                                  When empty, the hostname of the request is used.
                                  \n Support: Core"
                                maxLength: 253
                                minLength: 1
                                pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                                type: string
                              path:
                                description: "Path defines parameters used to
                                  modify the path of the incoming request. The
                                  modified path is then used to construct the
                                  `Location` header. When empty, the request
                                  path is used as-is. \n Support: Extended"
                                properties:
                                  replaceFullPath:
                                    description: ReplaceFullPath specifies the
                                      value with which to replace the full path
                                      of a request during a rewrite or redirect.
                                    maxLength: 1024
                                    type: string
                                  replacePrefixMatch:
                                    description: "ReplacePrefixMatch specifies
                                      the value with which to replace the prefix
                                      match of a request during a rewrite or
                                      redirect. For example, a request to \"/foo/bar\"
                                      with a prefix match of \"/foo\" and a
                                      ReplacePrefixMatch of \"/xyz\" would be
                                      modified to \"/xyz/bar\". \n Note that
                                      this matches the behavior of the PathPrefix
                                      match type. This matches full path elements.
                                      A path element refers to the list of labels
                                      in the path split by the `/` separator.
                                      When specified, a trailing `/` is ignored.
                                      For example, the paths `/abc`, `/abc/`,
                                      and `/abc/def` would all match the prefix
                                      `/abc`, but the path `/abcd` would not.
                                      \n Request Path | Prefix Match | Replace
                                      Prefix | Modified Path -------------|--------------|----------------|----------
                                      /foo/bar     | /foo         | /xyz           |
                                      /xyz/bar /foo/bar     | /foo         |
                                      /xyz/          | /xyz/bar /foo/bar     |
                                      /foo/        | /xyz           | /xyz/bar
                                      /foo/bar     | /foo/        | /xyz/          |
                                      /xyz/bar /foo         | /foo         |
                                      /xyz           | /xyz /foo/        | /foo
                                      \        | /xyz           | /xyz/ /foo/bar
                                      \    | /foo         | <empty string> |
                                      /bar /foo/        | /foo         | <empty
                                      string> | / /foo         | /foo         |
                                      <empty string> | / /foo/        | /foo
                                      \        | /              | / /foo         |
                                      /foo         | /              | /"
                                    maxLength: 1024
                                    type: string
                                  type:
                                    description: "Type defines the type of path
                                      modifier. Additional types may be added
                                      in a future release of the API. \n Note
                                      that values may be added to this enum,
                                      implementations must ensure that unknown
                                      values will not cause a crash. \n Unknown
                                      values here must result in the implementation
                                      setting the Accepted Condition for the
                                      Route to `status: False`, with a Reason
                                      of `UnsupportedValue`."
                                    enum:
                                    - ReplaceFullPath
                                    - ReplacePrefixMatch
                                    type: string
                                required:
                                - type
                                type: object
                              port:
                                description: "Port is the port to be used in the value
                                  of the `Location` header in the response. When empty,
                                  port (if specified) of the request is used. \n Support:
                                  Extended"
                                format: int32
                                maximum: 65535
                                minimum: 1
                                type: integer
                              scheme:
                                description: "Scheme is the scheme to be used in the
                                  value of the `Location` header in the response.
                                  When empty, the scheme of the request is used. \n
                                  Support: Extended"
                                enum:
                                - http
                                - https
                                type: string
                              statusCode:
                                default: 302
                                description: "StatusCode is the HTTP status code to
                                  be used in response. \n Support: Core"
                                enum:
                                - 301
                                - 302
                                type: integer
                            type: object
                          type:
                            description: "Type identifies the type of filter to apply.
                              As with other API fields, types are classified into
                              three conformance levels: \n - Core: Filter types and
                              their corresponding configuration defined by   \"Support:
                              Core\" in this package, e.g. \"RequestHeaderModifier\"."
                            enum:
                            - RequestHeaderModifier
                            - RequestRedirect
                            type: string
                        required:
                        - type
                        type: object
                      maxItems: 16
                      type: array
                    matches:
                      default:
                      - path:
                          type: PathPrefix
                          value: /
                      description: "Matches define conditions used for matching the
                        rule against incoming HTTP requests. Each match is independent,
                        i.e. this rule will be matched if **any** one of the matches
                        is satisfied. \n For example, take the following matches configuration:
                        \n ``` matches: - path:     value: \"/foo\"   headers:   -
                        name: \"version\"     value: \"v2\" - path:     value: \"/v2/foo\"
                        ``` \n For a request to match against this rule, a request
                        must satisfy EITHER of the two conditions: \n - path prefixed
                        with `/foo` AND contains the header `version: v2` - path prefix
                        of `/v2/foo` \n See the documentation for HTTPRouteMatch on
                        how to specify multiple match conditions that should be ANDed
                        together. \n If no matches are specified, the default is a
                        prefix path match on \"/\", which has the effect of matching
                        every HTTP request. \n Proxy or Load Balancer routing configuration
                        generated from HTTPRoutes MUST prioritize rules based on the
                        following criteria, continuing on ties. Precedence must be
                        given to the the Rule with the largest number of: \n * Characters
                        in a matching non-wildcard hostname. * Characters in a matching
                        hostname. * Characters in a matching path. * Header matches.
                        * Query param matches. \n If ties still exist across multiple
                        Routes, matching precedence MUST be determined in order of
                        the following criteria, continuing on ties: \n * The oldest
                        Route based on creation timestamp. * The Route appearing first
                        in alphabetical order by   \"{namespace}/{name}\". \n If ties
                        still exist within the Route that has been given precedence,
                        matching precedence MUST be granted to the first matching
                        rule meeting the above criteria. \n When no rules matching
                        a request have been successfully attached to the parent a
                        request is coming from, a HTTP 404 status code MUST be returned."
                      items:
                        description: "HTTPRouteMatch defines the predicate used to
                          match requests to a given action. Multiple match types are
                          ANDed together, i.e. the match will evaluate to true only
                          if all conditions are satisfied. \n For example, the match
                          below will match a HTTP request only if its path starts
                          with `/foo` AND it contains the `version: v1` header: \n
                          ``` match:   path:     value: \"/foo\"   headers:   - name:
                          \"version\"     value \"v1\" ```"
                        properties:
                          headers:
                            description: Headers specifies HTTP request header matchers.
                              Multiple match values are ANDed together, meaning, a
                              request must match all the specified headers to select
                              the route.
                            items:
                              description: HTTPHeaderMatch describes how to select
                                a HTTP route by matching HTTP request headers.
                              properties:
                                name:
                                  description: "Name is the name of the HTTP Header
                                    to be matched. Name matching MUST be case insensitive.
                                    (See https://tools.ietf.org/html/rfc7230#section-3.2).
                                    \n If multiple entries specify equivalent header
                                    names, only the first entry with an equivalent
                                    name MUST be considered for a match. Subsequent
                                    entries with an equivalent header name MUST be
                                    ignored. Due to the case-insensitivity of header
                                    names, \"foo\" and \"Foo\" are considered equivalent.
                                    \n When a header is repeated in an HTTP request,
                                    it is implementation-specific behavior as to how
                                    this is represented. Generally, proxies should
                                    follow the guidance from the RFC: https://www.rfc-editor.org/rfc/rfc7230.html#section-3.2.2
                                    regarding processing a repeated header, with special
                                    handling for \"Set-Cookie\"."
                                  maxLength: 256
                                  minLength: 1
                                  pattern: ^[A-Za-z0-9!#$%&'*+\-.^_\x60|~]+$
                                  type: string
                                type:
                                  default: Exact
                                  description: "Type specifies how to match against
                                    the value of the header. \n Support: Core (Exact)
                                    \n Support: Custom (RegularExpression) \n Since
                                    RegularExpression HeaderMatchType has custom conformance,
                                    implementations can support POSIX, PCRE or any
                                    other dialects of regular expressions. Please
                                    read the implementation's documentation to determine
                                    the supported dialect."
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP Header to
                                    be matched.
                                  maxLength: 4096
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                          method:
                            description: "Method specifies HTTP method matcher. When
                              specified, this route will be matched only if the request
                              has the specified method. \n Support: Extended"
                            enum:
                            - GET
                            - HEAD
                            - POST
                            - PUT
                            - DELETE
                            - CONNECT
                            - OPTIONS
                            - TRACE
                            - PATCH
                            type: string
                          path:
                            default:
                              type: PathPrefix
                              value: /
                            description: Path specifies a HTTP request path matcher.
                              If this field is not specified, a default prefix match
                              on the "/" path is provided.
                            properties:
                              type:
                                default: PathPrefix
                                description: "Type specifies how to match against
                                  the path Value. \n Support: Core (Exact, PathPrefix)
                                  \n Support: Custom (RegularExpression)"
                                enum:
                                - Exact
                                - PathPrefix
                                - RegularExpression
                                type: string
                              value:
                                default: /
                                description: Value of the HTTP path to match against.
                                maxLength: 1024
                                type: string
                            type: object
                          queryParams:
                            description: QueryParams specifies HTTP query parameter
                              matchers. Multiple match values are ANDed together,
                              meaning, a request must match all the specified query
                              parameters to select the route.
                            items:
                              description: HTTPQueryParamMatch describes how to select
                                a HTTP route by matching HTTP query parameters.
                              properties:
                                name:
                                  description: Name is the name of the HTTP query
                                    param to be matched. This must be an exact string
                                    match. (See https://tools.ietf.org/html/rfc7230#section-2.7.3).
                                  maxLength: 256
                                  minLength: 1
                                  type: string
                                type:
                                  default: Exact
                                  description: "Type specifies how to match against
                                    the value of the query parameter. \n Support:
                                    Extended (Exact) \n Support: Custom (RegularExpression)
                                    \n Since RegularExpression QueryParamMatchType
                                    has custom conformance, implementations can support
                                    POSIX, PCRE or any other dialects of regular expressions.
                                    Please read the implementation's documentation
                                    to determine the supported dialect."
                                  enum:
                                  - Exact
                                  - RegularExpression
                                  type: string
                                value:
                                  description: Value is the value of HTTP query param
                                    to be matched.
                                  maxLength: 1024
                                  minLength: 1
                                  type: string
                              required:
                              - name
                              - value
                              type: object
                            maxItems: 16
                            type: array
                            x-kubernetes-list-map-keys:
                            - name
                            x-kubernetes-list-type: map
                        type: object
                      maxItems: 8
                      type: array
                    timeouts:
                      description: "Timeouts defines the timeouts that can be configured
                        for an HTTP request. \n Support: Core \n <gateway:experimental>"
                      properties:
                        backendRequest:
                          description: "BackendRequest specifies a timeout for an
                            individual request from the gateway to a backend service.
                            Typically used in conjunction with automatic retries,
                            if supported by an implementation. Default is the value
                            of Request timeout. \n Support: Extended"
                          format: duration
                          type: string
                        request:
                          description: "Request specifies a timeout for responding
                            to client HTTP requests, disabled by default. \n For example,
                            the following rule will timeout if a client request is
                            taking longer than 10 seconds to complete: \n ``` rules:
                            - timeouts: request: 10s backendRefs: ... ``` \n Support:
                            Core"
                          format: duration
                          type: string
                      type: object
                  type: object
                maxItems: 16
                type: array
            type: object
          status:
            description: Status defines the current state of HTTPRoute.
            properties:
              parents:
                description: "Parents is a list of parent resources (usually Gateways)
                  that are associated with the route, and the status of the route
                  with respect to each parent. When this route attaches to a parent,
                  the controller that manages the parent must add an entry to this
                  list when the controller first sees the route and should update
                  the entry as appropriate when the route or gateway is modified.
                  \n Note that parent references that cannot be resolved by an implementation
                  of this API will not be added to this list. Implementations of this
                  API can only populate Route status for the Gateways/parent resources
                  they are responsible for. \n A maximum of 32 Gateways will be represented
                  in this list. An empty list means the route has not been attached
                  to any Gateway."
                items:
                  description: RouteParentStatus describes the status of a route with
                    respect to an associated Parent.
                  properties:
                    conditions:
                      description: "Conditions describes the status of the route with
                        respect to the Gateway. Note that the route's availability
                        is also subject to the Gateway's own status conditions and
                        listener status. \n If the Route's ParentRef specifies an
                        existing Gateway that supports Routes of this kind AND that
                        Gateway's controller has sufficient access, then that Gateway's
                        controller MUST set the \"Accepted\" condition on the Route,
                        to indicate whether the route has been accepted or rejected
                        by the Gateway, and why. \n A Route MUST be considered \"Accepted\"
                        if at least one of the Route's rules is implemented by the
                        Gateway. \n There are a number of cases where the \"Accepted\"
                        condition may not be set due to lack of controller visibility,
                        that includes when: \n * The Route refers to a non-existent
                        parent. * The Route is of a type that the controller does
                        not support. * The Route is in a namespace the the controller
                        does not have access to."
                      items:
                        description: "Condition contains details for one aspect of
                          the current state of this API Resource. --- This struct
                          is intended for direct use as an array at the field path
                          .status.conditions.  For example, type FooStatus struct{
                          \    // Represents the observations of a foo's current state.
                          \    // Known .status.conditions.type are: \"Available\",
                          \"Progressing\", and \"Degraded\"     // +patchMergeKey=type
                          \    // +patchStrategy=merge     // +listType=map     //
                          +listMapKey=type     Conditions []metav1.Condition `json:\"conditions,omitempty\"
                          patchStrategy:\"merge\" patchMergeKey:\"type\" protobuf:\"bytes,1,rep,name=conditions\"`
                          \n     // other fields }"
                        properties:
                          lastTransitionTime:
                            description: lastTransitionTime is the last time the condition
                              transitioned from one status to another. This should
                              be when the underlying condition changed.  If that is
                              not known, then using the time when the API field changed
                              is acceptable.
                            format: date-time
                            type: string
                          message:
                            description: message is a human readable message indicating
                              details about the transition. This may be an empty string.
                            maxLength: 32768
                            type: string
                          observedGeneration:
                            description: observedGeneration represents the .metadata.generation
                              that the condition was set based upon. For instance,
                              if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration
                              is 9, the condition is out of date with respect to the
                              current state of the instance.
                            format: int64
                            minimum: 0
                            type: integer
                          reason:
                            description: reason contains a programmatic identifier
                              indicating the reason for the condition's last transition.
                              Producers of specific condition types may define expected
                              values and meanings for this field, and whether the
                              values are considered a guaranteed API. The value should
                              be a CamelCase string. This field may not be empty.
                            maxLength: 1024
                            minLength: 1
                            pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                            type: string
                          status:
                            description: status of the condition, one of True, False,
                              Unknown.
                            enum:
                            - "True"
                            - "False"
                            - Unknown
                            type: string
                          type:
                            description: type of condition in CamelCase or in foo.example.com/CamelCase.
                              --- Many .condition.type values are consistent across
                              resources like Available, but because arbitrary conditions
                              can be useful (see .node.status.conditions), the ability
                              to deconflict is important. The regex it matches is
                              (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                            maxLength: 316
                            pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                            type: string
                        required:
                        - lastTransitionTime
                        - message
                        - reason
                        - status
                        - type
                        type: object
                      maxItems: 8
                      minItems: 1
                      type: array
                      x-kubernetes-list-map-keys:
                      - type
                      x-kubernetes-list-type: map
                    controllerName:
                      description: "ControllerName is a domain/path string that indicates
                        the name of the controller that wrote this status. This corresponds
                        with the controllerName field on GatewayClass. \n Example:
                        \"example.net/gateway-controller\". \n The format of this
                        field is DOMAIN \"/\" PATH, where DOMAIN and PATH are valid
                        Kubernetes names (https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                        \n Controllers MUST populate this field when writing status.
                        Controllers should ensure that entries to status populated
                        with their ControllerName are cleaned up when they are no
                        longer necessary."
                      maxLength: 253
                      minLength: 1
                      pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*\/[A-Za-z0-9\/\-._~%!$&'()*+,;=:]+$
                      type: string
                    parentRef:
                      description: ParentRef corresponds with a ParentRef in the spec
                        that this RouteParentStatus struct describes the status of.
                      properties:
                        group:
                          default: policy.linkerd.io
                          description: "Group is the group of the referent. \n Support:
                            Core"
                          maxLength: 253
                          pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                        kind:
                          default: Gateway
                          description: "Kind is kind of the referent. \n Support:
                            Core (Gateway) Support: Custom (Other Resources)"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                          type: string
                        name:
                          description: "Name is the name of the referent. \n Support:
                            Core"
                          maxLength: 253
                          minLength: 1
                          type: string
                        namespace:
                          description: "Namespace is the namespace of the referent.
                            When unspecified (or empty string), this refers to the
                            local namespace of the Route. \n Support: Core"
                          maxLength: 63
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?$
                          type: string
                        port:
                          description: "Port is the network port this Route targets.
                            It can be interpreted differently based on the type of
                            parent resource. \n When the parent resource is a Gateway,
                            this targets all listeners listening on the specified
                            port that also support this kind of Route(and select this
                            Route). It's not recommended to set `Port` unless the
                            networking behaviors specified in a Route must apply to
                            a specific port as opposed to a listener(s) whose port(s)
                            may be changed. When both Port and SectionName are specified,
                            the name and port of the selected listener must match
                            both specified values. \n Implementations MAY choose to
                            support other parent resources. Implementations supporting
                            other types of parent resources MUST clearly document
                            how/if Port is interpreted. \n For the purpose of status,
                            an attachment is considered successful as long as the
                            parent resource accepts it partially. For example, Gateway
                            listeners can restrict which Routes can attach to them
                            by Route kind, namespace, or hostname. If 1 of 2 Gateway
                            listeners accept attachment from the referencing Route,
                            the Route MUST be considered successfully attached. If
                            no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.
                            \n Support: Extended \n <gateway:experimental>"
                          format: int32
                          maximum: 65535
                          minimum: 1
                          type: integer
                        sectionName:
                          description: "SectionName is the name of a section within
                            the target resource. In the following resources, SectionName
                            is interpreted as the following: \n * Gateway: Listener
                            Name. When both Port (experimental) and SectionName are
                            specified, the name and port of the selected listener
                            must match both specified values. \n Implementations MAY
                            choose to support attaching Routes to other resources.
                            If that is the case, they MUST clearly document how SectionName
                            is interpreted. \n When unspecified (empty string), this
                            will reference the entire resource. For the purpose of
                            status, an attachment is considered successful if at least
                            one section in the parent resource accepts it. For example,
                            Gateway listeners can restrict which Routes can attach
                            to them by Route kind, namespace, or hostname. If 1 of
                            2 Gateway listeners accept attachment from the referencing
                            Route, the Route MUST be considered successfully attached.
                            If no Gateway listeners accept attachment from this Route,
                            the Route MUST be considered detached from the Gateway.
                            \n Support: Core"
                          maxLength: 253
                          minLength: 1
                          pattern: ^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                          type: string
                      required:
                      - name
                      type: object
                  required:
                  - controllerName
                  - parentRef
                  type: object
                maxItems: 32
                type: array
            required:
            - parents
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
# Source: linkerd-crds/templates/policy/meshtls-authentication.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: meshtlsauthentications.policy.linkerd.io
  annotations:
    linkerd.io/created-by: linkerd/helm %!s(<nil>)
  labels:
    helm.sh/chart: linkerd-crds-2025.5.4
    linkerd.io/control-plane-ns: linkerd
spec:
  group: policy.linkerd.io
  scope: Namespaced
  names:
    kind: MeshTLSAuthentication
    plural: meshtlsauthentications
    singular: meshtlsauthentication
    shortNames: [meshtlsauthn]
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          required: [spec]
          properties:
            spec:
              description: >-
                MeshTLSAuthentication defines a list of authenticated client IDs
                to be referenced by an `AuthorizationPolicy`. If a client
                connection has the mutually-authenticated identity that matches
                ANY of the of the provided identities, the connection is
                considered authenticated.
              type: object
              oneOf:
                - required: [identities]
                - required: [identityRefs]
              properties:
                identities:
                  description: >-
                    Authorizes clients with the provided proxy identity strings
                    (as provided via MTLS)

                    The `*` prefix can be used to match all identities in
                    a domain. An identity string of `*` indicates that
                    all authentication clients are authorized.
                  type: array
                  minItems: 1
                  items:
                    type: string
                identityRefs:
                  type: array
                  minItems: 1
                  items:
                    type: object
                    required:
                      - kind
                    properties:
                      group:
                        description: >-
                          Group is the group of the referent. When empty, the
                          Kubernetes core API group is inferred."
                        maxLength: 253
                        pattern: ^$|^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$
                        type: string
                      kind:
                        description: >-
                          Kind is the kind of the referent.
                        maxLength: 63
                        minLength: 1
                        pattern: ^[a-zA-Z]([-a-zA-Z0-9]*[a-zA-Z0-9])?$
                        type: string
                      name:
                        description: >-
                          Name is the name of the referent. When unspecified,
                          this refers to all resources of the specified Group
                          and Kind in the specified namespace.
                        maxLength: 253
                        minLength: 1
                        type: string
                      namespace:
                        description: >-
                          Name is the name of the referent. When unspecified,
                          this authentication refers to the local namespace.
                        maxLength: 253
                        type: string
---
# Source: linkerd-crds/templates/policy/network-authentication.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: networkauthentications.policy.linkerd.io
  annotations:
    linkerd.io/created-by: linkerd/helm %!s(<nil>)
  labels:
    helm.sh/chart: linkerd-crds-2025.5.4
    linkerd.io/control-plane-ns: linkerd
spec:
  group: policy.linkerd.io
  scope: Namespaced
  names:
    kind: NetworkAuthentication
    plural: networkauthentications
    singular: networkauthentication
    shortNames: [netauthn, networkauthn]
  versions:
    - name: v1alpha1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          required: [spec]
          properties:
            spec:
              description: >-
                NetworkAuthentication defines a list of authenticated client
                networks to be referenced by an `AuthorizationPolicy`. If a
                client connection originates from ANY of the of the provided
                networks, the connection is considered authenticated.
              type: object
              required: [networks]
              properties:
                networks:
                  type: array
                  items:
                    type: object
                    required: [cidr]
                    properties:
                      cidr:
                        description: >-
                          The CIDR of the network to be authorized.
                        type: string
                      except:
                        description: >-
                          A list of IP networks/addresses not to be included in
                          the above `cidr`.
                        type: array
                        items:
                          type: string
---
# Source: linkerd-crds/templates/policy/server-authorization.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: serverauthorizations.policy.linkerd.io
  annotations:
    linkerd.io/created-by: linkerd/helm %!s(<nil>)
  labels:
    helm.sh/chart: linkerd-crds-2025.5.4
    linkerd.io/control-plane-ns: linkerd
spec:
  group: policy.linkerd.io
  scope: Namespaced
  names:
    kind: ServerAuthorization
    plural: serverauthorizations
    singular: serverauthorization
    shortNames: [saz, serverauthz, srvauthz]
  versions:
    - name: v1alpha1
      served: true
      storage: false
      deprecated: true
      deprecationWarning: "policy.linkerd.io/v1alpha1 ServerAuthorization is deprecated; use policy.linkerd.io/v1beta1 ServerAuthorization"
      schema:
        openAPIV3Schema:
          type: object
          required: [spec]
          properties:
            spec:
              description: >-
                Authorizes clients to communicate with Linkerd-proxied servers.
              type: object
              required: [server, client]
              properties:
                server:
                  description: >-
                    Identifies servers in the same namespace for which this
                    authorization applies.

                    Only one of `name` or `selector` may be specified.
                  type: object
                  oneOf:
                    - required: [name]
                    - required: [selector]
                  properties:
                    name:
                      description: References a `Server` instance by name
                      type: string
                      pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
                    selector:
                      description: >-
                        A label query over servers on which this authorization applies.
                      type: object
                      properties:
                        matchLabels:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        matchExpressions:
                          type: array
                          items:
                            type: object
                            required: [key, operator]
                            properties:
                              key:
                                type: string
                              operator:
                                type: string
                                enum: [In, NotIn, Exists, DoesNotExist]
                              values:
                                type: array
                                items:
                                  type: string
                client:
                  description:  Describes clients authorized to access a server.
                  type: object
                  properties:
                    networks:
                      description: >-
                        Limits the client IP addresses to which this
                        authorization applies. If unset, the server chooses a
                        default (typically, all IPs or the cluster's pod
                        network).
                      type: array
                      items:
                        type: object
                        required: [cidr]
                        properties:
                          cidr:
                            type: string
                          except:
                            type: array
                            items:
                              type: string
                    unauthenticated:
                      description: >-
                        Authorizes unauthenticated clients to access a server.
                      type: boolean
                    meshTLS:
                      type: object
                      properties:
                        unauthenticatedTLS:
                          type: boolean
                          description: >-
                            Indicates that no client identity is required for
                            communication.

                            This is mostly important for the identity
                            controller, which must terminate TLS connections
                            from clients that do not yet have a certificate.
                        identities:
                          description: >-
                            Authorizes clients with the provided proxy identity
                            strings (as provided via MTLS)

                            The `*` prefix can be used to match all identities in
                            a domain. An identity string of `*` indicates that
                            all authentication clients are authorized.
                          type: array
                          items:
                            type: string
                            pattern: '^(\*|[a-z0-9]([-a-z0-9]*[a-z0-9])?)(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
                        serviceAccounts:
                          description: >-
                            Authorizes clients with the provided proxy identity
                            service accounts (as provided via MTLS)
                          type: array
                          items:
                            type: object
                            required: [name]
                            properties:
                              name:
                                description: The ServiceAccount's name.
                                type: string
                                pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
                              namespace:
                                description: >-
                                  The ServiceAccount's namespace. If unset, the
                                  authorization's namespace is used.
                                type: string
                                pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
    - name: v1beta1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          required: [spec]
          properties:
            spec:
              description: >-
                Authorizes clients to communicate with Linkerd-proxied servers.
              type: object
              required: [server, client]
              properties:
                server:
                  description: >-
                    Identifies servers in the same namespace for which this
                    authorization applies.

                    Only one of `name` or `selector` may be specified.
                  type: object
                  oneOf:
                    - required: [name]
                    - required: [selector]
                  properties:
                    name:
                      description: References a `Server` instance by name
                      type: string
                      pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
                    selector:
                      description: >-
                        A label query over servers on which this authorization applies.
                      type: object
                      properties:
                        matchLabels:
                          type: object
                          x-kubernetes-preserve-unknown-fields: true
                        matchExpressions:
                          type: array
                          items:
                            type: object
                            required: [key, operator]
                            properties:
                              key:
                                type: string
                              operator:
                                type: string
                                enum: [In, NotIn, Exists, DoesNotExist]
                              values:
                                type: array
                                items:
                                  type: string
                client:
                  description:  Describes clients authorized to access a server.
                  type: object
                  properties:
                    networks:
                      description: >-
                        Limits the client IP addresses to which this
                        authorization applies. If unset, the server chooses a
                        default (typically, all IPs or the cluster's pod
                        network).
                      type: array
                      items:
                        type: object
                        required: [cidr]
                        properties:
                          cidr:
                            type: string
                          except:
                            type: array
                            items:
                              type: string
                    unauthenticated:
                      description: >-
                        Authorizes unauthenticated clients to access a server.
                      type: boolean
                    meshTLS:
                      type: object
                      properties:
                        unauthenticatedTLS:
                          type: boolean
                          description: >-
                            Indicates that no client identity is required for
                            communication.

                            This is mostly important for the identity
                            controller, which must terminate TLS connections
                            from clients that do not yet have a certificate.
                        identities:
                          description: >-
                            Authorizes clients with the provided proxy identity
                            strings (as provided via MTLS)

                            The `*` prefix can be used to match all identities in
                            a domain. An identity string of `*` indicates that
                            all authentication clients are authorized.
                          type: array
                          items:
                            type: string
                            pattern: '^(\*|[a-z0-9]([-a-z0-9]*[a-z0-9])?)(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$'
                        serviceAccounts:
                          description: >-
                            Authorizes clients with the provided proxy identity
                            service accounts (as provided via MTLS)
                          type: array
                          items:
                            type: object
                            required: [name]
                            properties:
                              name:
                                description: The ServiceAccount's name.
                                type: string
                                pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
                              namespace:
                                description: >-
                                  The ServiceAccount's namespace. If unset, the
                                  authorization's namespace is used.
                                type: string
                                pattern: '^[a-z0-9]([-a-z0-9]*[a-z0-9])?$'
      additionalPrinterColumns:
      - name: Server
        type: string
        description: The server that this grants access to
        jsonPath: .spec.server.name
---
# Source: linkerd-crds/templates/policy/server.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: servers.policy.linkerd.io
  annotations:
    linkerd.io/created-by: linkerd/helm %!s(<nil>)
  labels:
    helm.sh/chart: linkerd-crds-2025.5.4
    linkerd.io/control-plane-ns: linkerd
spec:
  group: policy.linkerd.io
  names:
    kind: Server
    plural: servers
    singular: server
    shortNames: [srv]
  scope: Namespaced
  versions:
    - name: v1alpha1
      served: true
      storage: false
      deprecated: true
      deprecationWarning: "policy.linkerd.io/v1alpha1 Server is deprecated; use policy.linkerd.io/v1beta1 Server"
      schema:
        openAPIV3Schema:
          type: object
          required: [spec]
          properties:
            spec:
              type: object
              required:
                - podSelector
                - port
              properties:
                podSelector:
                  type: object
                  description: >-
                    Selects pods in the same namespace.
                  oneOf:
                    - required: [matchExpressions]
                    - required: [matchLabels]
                  properties:
                    matchLabels:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    matchExpressions:
                      type: array
                      items:
                        type: object
                        required: [key, operator]
                        properties:
                          key:
                            type: string
                          operator:
                            type: string
                            enum: [In, NotIn, Exists, DoesNotExist]
                          values:
                            type: array
                            items:
                              type: string
                port:
                  description: >-
                    A port name or number. Must exist in a pod spec.
                  x-kubernetes-int-or-string: true
                proxyProtocol:
                  description: >-
                    Configures protocol discovery for inbound connections.

                    Supersedes the `config.linkerd.io/opaque-ports` annotation.
                  type: string
                  default: unknown
    - name: v1beta1
      served: true
      storage: false
      deprecated: true
      deprecationWarning: "policy.linkerd.io/v1beta1 Server is deprecated; use policy.linkerd.io/v1beta3 Server"
      schema:
        openAPIV3Schema:
          type: object
          required: [spec]
          properties:
            spec:
              type: object
              required:
                - podSelector
                - port
              properties:
                podSelector:
                  type: object
                  description: >-
                    Selects pods in the same namespace.

                    The result of matchLabels and matchExpressions are ANDed.
                    Selects all if empty.
                  properties:
                    matchLabels:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    matchExpressions:
                      type: array
                      items:
                        type: object
                        required: [key, operator]
                        properties:
                          key:
                            type: string
                          operator:
                            type: string
                            enum: [In, NotIn, Exists, DoesNotExist]
                          values:
                            type: array
                            items:
                              type: string
                port:
                  description: >-
                    A port name or number. Must exist in a pod spec.
                  x-kubernetes-int-or-string: true
                proxyProtocol:
                  description: >-
                    Configures protocol discovery for inbound connections.

                    Supersedes the `config.linkerd.io/opaque-ports` annotation.
                  type: string
                  default: unknown
      additionalPrinterColumns:
      - name: Port
        type: string
        description: The port the server is listening on
        jsonPath: .spec.port
      - name: Protocol
        type: string
        description: The protocol of the server
        jsonPath: .spec.proxyProtocol
    - name: v1beta2
      served: true
      storage: false
      schema:
        openAPIV3Schema:
          type: object
          required: [spec]
          properties:
            spec:
              type: object
              required:
                - port
              oneOf:
                - required: [podSelector]
                - required: [externalWorkloadSelector]
              properties:
                podSelector:
                  type: object
                  description: >-
                    Selects pods in the same namespace.

                    The result of matchLabels and matchExpressions are ANDed.
                    Selects all if empty.
                  properties:
                    matchLabels:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    matchExpressions:
                      type: array
                      items:
                        type: object
                        required: [key, operator]
                        properties:
                          key:
                            type: string
                          operator:
                            type: string
                            enum: [In, NotIn, Exists, DoesNotExist]
                          values:
                            type: array
                            items:
                              type: string
                externalWorkloadSelector:
                  type: object
                  description: >-
                    Selects ExternalWorkloads in the same namespace.

                    The result of matchLabels and matchExpressions are ANDed.
                    Selects all if empty.
                  properties:
                    matchLabels:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    matchExpressions:
                      type: array
                      items:
                        type: object
                        required: [key, operator]
                        properties:
                          key:
                            type: string
                          operator:
                            type: string
                            enum: [In, NotIn, Exists, DoesNotExist]
                          values:
                            type: array
                            items:
                              type: string
                port:
                  description: >-
                    A port name or number. Must exist in a pod spec.
                  x-kubernetes-int-or-string: true
                proxyProtocol:
                  description: >-
                    Configures protocol discovery for inbound connections.

                    Supersedes the `config.linkerd.io/opaque-ports` annotation.
                  type: string
                  default: unknown
      additionalPrinterColumns:
      - name: Port
        type: string
        description: The port the server is listening on
        jsonPath: .spec.port
      - name: Protocol
        type: string
        description: The protocol of the server
        jsonPath: .spec.proxyProtocol
    - name: v1beta3
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          required: [spec]
          properties:
            spec:
              type: object
              required:
                - port
              oneOf:
                - required: [podSelector]
                - required: [externalWorkloadSelector]
              properties:
                accessPolicy:
                  type: string
                  default: deny
                  description: >-
                    Default access policy to apply when the traffic doesn't match any of the policy rules.
                podSelector:
                  type: object
                  description: >-
                    Selects pods in the same namespace.

                    The result of matchLabels and matchExpressions are ANDed.
                    Selects all if empty.
                  properties:
                    matchLabels:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    matchExpressions:
                      type: array
                      items:
                        type: object
                        required: [key, operator]
                        properties:
                          key:
                            type: string
                          operator:
                            type: string
                            enum: [In, NotIn, Exists, DoesNotExist]
                          values:
                            type: array
                            items:
                              type: string
                externalWorkloadSelector:
                  type: object
                  description: >-
                    Selects ExternalWorkloads in the same namespace.

                    The result of matchLabels and matchExpressions are ANDed.
                    Selects all if empty.
                  properties:
                    matchLabels:
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    matchExpressions:
                      type: array
                      items:
                        type: object
                        required: [key, operator]
                        properties:
                          key:
                            type: string
                          operator:
                            type: string
                            enum: [In, NotIn, Exists, DoesNotExist]
                          values:
                            type: array
                            items:
                              type: string
                port:
                  description: >-
                    A port name or number. Must exist in a pod spec.
                  x-kubernetes-int-or-string: true
                proxyProtocol:
                  description: >-
                    Configures protocol discovery for inbound connections.

                    Supersedes the `config.linkerd.io/opaque-ports` annotation.
                  type: string
                  default: unknown
      additionalPrinterColumns:
      - name: Port
        type: string
        description: The port the server is listening on
        jsonPath: .spec.port
      - name: Protocol
        type: string
        description: The protocol of the server
        jsonPath: .spec.proxyProtocol
      - name: Access Policy
        type: string
        description: The default access policy applied when the traffic doesn't match any of the policy rules
        jsonPath: .spec.accessPolicy
---
# Source: linkerd-crds/templates/serviceprofile.yaml
###
### Service Profile CRD
###
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: serviceprofiles.linkerd.io
  annotations:
    linkerd.io/created-by: linkerd/helm %!s(<nil>)
  labels:
    helm.sh/chart: linkerd-crds-2025.5.4
    linkerd.io/control-plane-ns: linkerd
spec:
  group: linkerd.io
  versions:
  - name: v1alpha1
    served: true
    storage: false
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            description: Spec is the custom resource spec
            required:
            - routes
            properties:
              dstOverrides:
                type: array
                required:
                - authority
                - weight
                items:
                  type: object
                  description: WeightedDst is a weighted alternate destination.
                  properties:
                    authority:
                      type: string
                    weight:
                      x-kubernetes-int-or-string: true
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
              opaquePorts:
                type: array
                items:
                  type: string
              retryBudget:
                type: object
                required:
                - minRetriesPerSecond
                - retryRatio
                - ttl
                description: RetryBudget describes the maximum number of retries that should be issued to this service.
                properties:
                  minRetriesPerSecond:
                    format: int32
                    type: integer
                  retryRatio:
                    type: number
                    format: float
                  ttl:
                    type: string
              routes:
                type: array
                items:
                  type: object
                  description: RouteSpec specifies a Route resource.
                  required:
                  - condition
                  - name
                  properties:
                    condition:
                      type: object
                      description: RequestMatch describes the conditions under which to match a Route.
                      properties:
                        pathRegex:
                          type: string
                        method:
                          type: string
                        all:
                          type: array
                          items:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                        any:
                          type: array
                          items:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                        not:
                          type: array
                          items:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                    isRetryable:
                      type: boolean
                    name:
                      type: string
                    timeout:
                      type: string
                    responseClasses:
                      type: array
                      items:
                        type: object
                        required:
                        - condition
                        description: ResponseClass describes how to classify a response (e.g. success or failures).
                        properties:
                          condition:
                            type: object
                            description: ResponseMatch describes the conditions under
                              which to classify a response.
                            properties:
                              all:
                                type: array
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              any:
                                type: array
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              not:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              status:
                                type: object
                                description: Range describes a range of integers (e.g. status codes).
                                properties:
                                  max:
                                    format: int32
                                    type: integer
                                  min:
                                    format: int32
                                    type: integer
                          isFailure:
                            type: boolean
  - name: v1alpha2
    served: true
    storage: true
    schema:
      openAPIV3Schema:
        type: object
        properties:
          spec:
            type: object
            description: Spec is the custom resource spec
            properties:
              dstOverrides:
                type: array
                required:
                - authority
                - weight
                items:
                  type: object
                  description: WeightedDst is a weighted alternate destination.
                  properties:
                    authority:
                      type: string
                    weight:
                      x-kubernetes-int-or-string: true
                      anyOf:
                      - type: integer
                      - type: string
                      pattern: ^(\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))(([KMGTPE]i)|[numkMGTPE]|([eE](\+|-)?(([0-9]+(\.[0-9]*)?)|(\.[0-9]+))))?$
              opaquePorts:
                type: array
                items:
                  type: string
              retryBudget:
                type: object
                required:
                - minRetriesPerSecond
                - retryRatio
                - ttl
                description: RetryBudget describes the maximum number of retries that should be issued to this service.
                properties:
                  minRetriesPerSecond:
                    format: int32
                    type: integer
                  retryRatio:
                    type: number
                    format: float
                  ttl:
                    type: string
              routes:
                type: array
                items:
                  type: object
                  description: RouteSpec specifies a Route resource.
                  required:
                  - condition
                  - name
                  properties:
                    condition:
                      type: object
                      description: RequestMatch describes the conditions under which to match a Route.
                      properties:
                        pathRegex:
                          type: string
                        method:
                          type: string
                        all:
                          type: array
                          items:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                        any:
                          type: array
                          items:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                        not:
                          type: array
                          items:
                            type: object
                            x-kubernetes-preserve-unknown-fields: true
                    isRetryable:
                      type: boolean
                    name:
                      type: string
                    timeout:
                      type: string
                    responseClasses:
                      type: array
                      items:
                        type: object
                        required:
                        - condition
                        description: ResponseClass describes how to classify a response (e.g. success or failures).
                        properties:
                          condition:
                            type: object
                            description: ResponseMatch describes the conditions under
                              which to classify a response.
                            properties:
                              all:
                                type: array
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              any:
                                type: array
                                items:
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                              not:
                                type: object
                                x-kubernetes-preserve-unknown-fields: true
                              status:
                                type: object
                                description: Range describes a range of integers (e.g. status codes).
                                properties:
                                  max:
                                    format: int32
                                    type: integer
                                  min:
                                    format: int32
                                    type: integer
                          isFailure:
                            type: boolean
  scope: Namespaced
  preserveUnknownFields: false
  names:
    plural: serviceprofiles
    singular: serviceprofile
    kind: ServiceProfile
    shortNames:
    - sp
---
# Source: linkerd-crds/templates/workload/external-workload.yaml
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: externalworkloads.workload.linkerd.io
  annotations:
    linkerd.io/created-by: linkerd/helm %!s(<nil>)
  labels:
    helm.sh/chart: linkerd-crds-2025.5.4
    linkerd.io/control-plane-ns: linkerd
spec:
  group: workload.linkerd.io
  names:
    categories:
    - external
    kind: ExternalWorkload
    listKind: ExternalWorkloadList
    plural: externalworkloads
    singular: externalworkload
  scope: Namespaced
  versions:
  - name: v1alpha1
    served: true
    storage: false
    schema:
      openAPIV3Schema:
        description: >-
          An ExternalWorkload describes a single workload (i.e. a deployable unit) external
          to the cluster that should be enrolled in the mesh.
        type: object
        required: [spec]
        properties:
          apiVerson:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            properties:
              meshTls:
                description: meshTls describes TLS settings associated with an
                  external workload.
                properties:
                  identity:
                    type: string
                    description: identity of the workload. Corresponds to the
                      identity used in the workload's certificate. It is used
                      by peers to perform verification in the mTLS handshake.
                    minLength: 1
                    maxLength: 253
                  serverName:
                    type: string
                    description: serverName is the name of the workload in DNS
                      format. It is used by the workload to terminate TLS using
                      SNI.
                    minLength: 1
                    maxLength: 253
                type: object
                required:
                - identity
                - serverName
              ports:
                type: array
                description: ports describes a list of ports exposed by the
                  workload
                items:
                  properties:
                    name:
                      type: string
                      description: name must be an IANA_SVC_NAME and unique
                        within the ports set. Each named port can be referred
                        to by services.
                    port:
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    protocol:
                      description: protocol exposed by the port. Must be UDP or
                        TCP. Defaults to TCP.
                      type: string
                      default: "TCP"
                  type: object
                  required:
                  - port
              workloadIPs:
                type: array
                description: workloadIPs contains a list of IP addresses that
                  can be used to send traffic to the workload.
                items:
                  type: object
                  properties:
                    ip:
                      type: string
                # TODO: relax this in the future when ipv6 is supported
                # an external workload (like a pod) should only
                # support 2 interfaces
                maxItems: 1
            type: object
            required:
            - meshTls
          status:
            type: object
            properties:
              conditions:
                type: array
                items:
                  type: object
                  properties:
                    lastProbeTime:
                      description: lastProbeTime is the last time the
                        healthcheck endpoint was probed.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the
                        condition transitioned from one status to another.
                      format: date-time
                      type: string
                    status:
                      description: status of the condition (one of True, False, Unknown)
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of the condition in CamelCase or in
                        foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                    reason:
                      description: reason contains a programmatic identifier
                        indicating the reason for the condition's last
                        transition. Producers of specific condition types may
                        define expected values and meanings for this field, and
                        whether the values are considered a guaranteed API. The
                        value should be a CamelCase string. This field may not
                        be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    message:
                      description: message is a human readable message
                        indicating details about the transition. This may be an
                        empty string.
                      maxLength: 32768
                      type: string
                required:
                - status
                - type
    additionalPrinterColumns:
    - jsonPath: .spec.meshTls.identity
      name: Identity
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
  - name: v1beta1
    served: true
    storage: true
    subresources:
      status: {}
    schema:
      openAPIV3Schema:
        description: >-
          An ExternalWorkload describes a single workload (i.e. a deployable unit) external
          to the cluster that should be enrolled in the mesh.
        type: object
        required: [spec]
        properties:
          apiVerson:
            type: string
          kind:
            type: string
          metadata:
            type: object
          spec:
            properties:
              meshTLS:
                description: meshTLS describes TLS settings associated with an
                  external workload.
                properties:
                  identity:
                    type: string
                    description: identity of the workload. Corresponds to the
                      identity used in the workload's certificate. It is used
                      by peers to perform verification in the mTLS handshake.
                    minLength: 1
                    maxLength: 253
                  serverName:
                    type: string
                    description: serverName is the name of the workload in DNS
                      format. It is used by the workload to terminate TLS using
                      SNI.
                    minLength: 1
                    maxLength: 253
                type: object
                required:
                - identity
                - serverName
              ports:
                type: array
                description: ports describes a list of ports exposed by the
                  workload
                items:
                  properties:
                    name:
                      type: string
                      description: name must be an IANA_SVC_NAME and unique
                        within the ports set. Each named port can be referred
                        to by services.
                    port:
                      format: int32
                      maximum: 65535
                      minimum: 1
                      type: integer
                    protocol:
                      description: protocol exposed by the port. Must be UDP or
                        TCP. Defaults to TCP.
                      type: string
                      default: "TCP"
                  type: object
                  required:
                  - port
              workloadIPs:
                type: array
                description: workloadIPs contains a list of IP addresses that
                  can be used to send traffic to the workload. This field may
                  hold a maximum of two entries. If one entry, it can be an
                  IPv4 or IPv6 address; if two entries it should contain one
                  IPv4 address and one IPv6 address.
                items:
                  type: object
                  properties:
                    ip:
                      type: string
                maxItems: 2
            type: object
            required:
            - meshTLS
          status:
            type: object
            properties:
              conditions:
                type: array
                items:
                  type: object
                  properties:
                    lastProbeTime:
                      description: lastProbeTime is the last time the
                        healthcheck endpoint was probed.
                      format: date-time
                      type: string
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the
                        condition transitioned from one status to another.
                      format: date-time
                      type: string
                    status:
                      description: status of the condition (one of True, False, Unknown)
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of the condition in CamelCase or in
                        foo.example.com/CamelCase.
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                    reason:
                      description: reason contains a programmatic identifier
                        indicating the reason for the condition's last
                        transition. Producers of specific condition types may
                        define expected values and meanings for this field, and
                        whether the values are considered a guaranteed API. The
                        value should be a CamelCase string. This field may not
                        be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    message:
                      description: message is a human readable message
                        indicating details about the transition. This may be an
                        empty string.
                      maxLength: 32768
                      type: string
                required:
                - status
                - type
    additionalPrinterColumns:
    - jsonPath: .spec.meshTLS.identity
      name: Identity
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date

Templating release=linkerd-control-plane, chart=linkerd-edge/linkerd-control-plane
---
# Source: linkerd-control-plane/templates/destination-rbac.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-destination
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
---
# Source: linkerd-control-plane/templates/heartbeat-rbac.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
---
# Source: linkerd-control-plane/templates/identity-rbac.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
---
# Source: linkerd-control-plane/templates/proxy-injector-rbac.yaml
kind: ServiceAccount
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
---
# Source: linkerd-control-plane/templates/destination-rbac.yaml
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-sp-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm edge-25.5.4
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQU9XeXdnVHZpL28wTHZrRlR2d0hpa1F3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNalV3TmpFd01EUTBNREk0V2hjTk1qWXdOakV3TURRME1ESTRXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQUppQU5Qam5YRWM2SExnMTVaazZoMGI1V3BtQ1R3OXJ1WkVMdEdMVjdNYXNUaFllTE9yOQprckIzOGpCY2xjdVcybHZOSExXSUJBbkhBbSszOXgrRlhQc2ZFVG1LOTJWTWJGd3diMTB0Njd5eWwyZWtYTGQ5CjhrN1RRMHhhS1VhRCtLS2NBd2YwTndiTllDbTFVWlZsYzhXaTdNcThmUnQ1dHAyTDVuY2ZIYTdwazl3VWUrZEIKRUV1c05QZ0U2RmtheW5pSUxWaUpJMDJJTGVEb094SlByV1h2Yzl4TElmNForbThLUndsc21WYm02OVRudmhGZwpOYUxCMlAzbUt4bGkzN0JyTlYwakx6aUZkZ1ZSMWdoT0pSWDEyc0YvTlN1K0NoejlDWXo1blZiYzN4Rnl4U1FiCmlqcW13d0I0eXJlVE90WHk0UkpRWnNTTFpORVhHc0wzS05jQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBZmtCQjFubzlybWVsN3k3S2U5ZWtLODFndlVyak14elRCcEYwaGt0OHgKT3VvbDJuZHpFbndNdTl6L0VqTEpGQ1F2dWNSNys5dkRMeDVZN1M4SzE2NWQ3SDBUaEZoVGViR0pRbWY0SlprSQpPR0FXUzZJWjlHRWlQNW1nWXFOZHllWm8rajhVeW1BYU5IWUdrdG9ZUHlNMHQrRjJjc1N4UU1XRE9zOGsxTHo4Ckk5a0FtUksreXA3ekVrUyt3QXg3cGxJa01zSHU5N29EMmRCUlBOSWM1VUJGWkdzWHVwT09JcEpwWGtkd2ExdXMKNnpkQmdZUyt2WGJwdURybFRkeG1nUjJDQTZWWjFsYjRvbWVDVEJmVmtaS25Tcm5KRTl1UEZybjFzeWE2NGhhTQphaDhQeEpxTzBnSmNXbStKKzk0bkpCSGR6R0hwS25oQjh2Y0EzQmdIdXArbwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbUlBMCtPZGNSem9jdURYbG1UcUhSdmxhbVlKUEQydTVrUXUwWXRYc3hxeE9GaDRzCjZ2MlNzSGZ5TUZ5Vnk1YmFXODBjdFlnRUNjY0NiN2YzSDRWYyt4OFJPWXIzWlV4c1hEQnZYUzNydkxLWFo2UmMKdDMzeVR0TkRURm9wUm9QNG9wd0RCL1EzQnMxZ0tiVlJsV1Z6eGFMc3lyeDlHM20ybll2bWR4OGRydW1UM0JSNwo1MEVRUzZ3MCtBVG9XUnJLZUlndFdJa2pUWWd0NE9nN0VrK3RaZTl6M0VzaC9objZid3BIQ1d5WlZ1YnIxT2UrCkVXQTFvc0hZL2VZckdXTGZzR3MxWFNNdk9JVjJCVkhXQ0U0bEZmWGF3WDgxSzc0S0hQMEpqUG1kVnR6ZkVYTEYKSkJ1S09xYkRBSGpLdDVNNjFmTGhFbEJteEl0azBSY2F3dmNvMXdJREFRQUJBb0lCQUNIQ0U3ZmJvMUpERzNOdAp2dWNXRFRjWllNUmxrN0hDczMvWHV2VThETitINmZzOGI4NFBGdWRJamd6Rm1nVkkzZ3AvVTdFZHJHTXJzaTdmCjV1MEwzU0xiNURpOE9mcXJHYnVvbnlaZDBYYmlnK0NXQWs0K0s2TG1ZbG5uQlljT0ZMNk9VWjl6b0xDNVN1WEEKdFJBZ3RxbVQ0TjRhTG9tai9saE96VlFtUjdCZHZmb0VPMGlVOWtaYjV5SFF3Q3hMc0lxRTFJSFY0UnJ1Y24wawpkQkd6MHlJWVl6M0xyaEJHeEpqZVNFWWhndzErQTBmQmhyVk9JT1J0NVkrQS9pOTlWOGhlZG9LVXVnY3JQOUZ6Ck5mUllRK0lDaUlhRDVNaXBHL21QaUFDQzFpalU5YUk3d25HTTVjNWVGZXZuV0YycEY1WlhObnY0MTQ5bTNPQUMKVS8xQWtRMENnWUVBeHdLcjMxd01sVWtKc3M5RFNxZEZwRkdOSzJHZEhCb3Nna1N2eldSRTE4djIvZDlTOGRGeQp0UlY4MW55dkRwTGM3Z09aWkxTNVY5RzlUWkx5MmNDYmkvQ1BZSWpRbkdFNTJpY2w5SGljTDBueTQzdlcyMUdLClVKSEl6TXZrT1E4VS9YYU5ScGJGQkFCTUlmVW9pODdXcFVxUjRrd3p0b3YydXQvb1p2NUJ5S3NDZ1lFQXhDdngKd0ZNTkMwdmMzVE03TnhCL1M0cGlDSjA2cVBLV1hNMHBxZTMxU3AwZytxWGNkYnhrYVlvWlVUMEhOZ2VHY2JpTgpWQlIwdG9KR3A5c3Jad0h6WkxIYUxMMi93L0ZsMU1PV1RsdGxzSjZjRzBLbWdHODVpNnQ4eFRGVk9TaklqV3ZUCjJGMXd5d0h1eFhjLzVwY3ZxdE9tMiticlMraGp2bjVDVEZXdHVJVUNnWUJXaHp2UnB3VTFsNGNtL3VVa1BXeVQKVUg0UDRhWmRCS2hiajUvY3J2OGIwT3c0WC9TQmZlN2crMUhITkhrczNnQS9ZTU0rUFRIbEZDVzU1KzI5YmZoegp0UW15RUdxYnc4NVNvdmptdmRZeTNYVkZJYUEreGNwYzA3WTZEV0RTeWxMM0RhZkpqRjVuS2ZYd1FkYjZTdG1iCkRydzFaNnFJY1h5NnJnWXZXZGVpZHdLQmdRQ2lTQlFpWE5IeW9WeGhwTXI4bjJvZXpLaVNwYmJzSWxwZkJOM04KbEd1UndQQ1NTUGxhY0hIRW1SaWVpdFRYVGx4YTRTZ1JBU2NZQUNlQkhwOEdCS2diaWNHSnQ2TFc3bkNtRlBMWAplV1pqT0tLOUxtTGM1cVg5TSt6d21BSC9XZ3ltYVNnRDJqQy96Nlo5dGt1bmJ6UmdwZHhvRjl4WW5ETS9WK1Z5CmpvSTZuUUtCZ0NrdDRrUVBKTU1xQnh3SzEzeFhTVFRSSElIdkpRTkdQZDIwTzRacTVESGVkcmxYUno0Q2dkRDAKWmpFQ3pMTjREVXNKNE4xV1ZFU0IvbldPYUd6NHdJZS9nZ2c5VWU2U3BBOWMrSktaNlE4OWkzUjlVa0svTFc4bgpXTEFuMWoycHdmR2VvdEVlVlM5SmlBNU1zRkZTeWZFUTZnUTR0Q0RVUWpETnZ2ZTVMUXFCCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
# Source: linkerd-control-plane/templates/destination-rbac.yaml
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-policy-validator-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm edge-25.5.4
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRQzhXZC91VHpUSW9UM01Va2k4MUZaREFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpVd05qRXdNRFEwTURJNFdoY05Nall3TmpFd01EUTBNREk0V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURMZ2tIbms5K2dJSDFFVVVqUkh3dzRhNXdDc0V2dUNKa1ArTGhvTlMvOApMZlMvaUw2NWxRUkVKazRiL3R6UWhha1dQVGcvUTBzNWdHejhzY1JmSDc0eXdLK05WOHZPNEVHMHZIMWFJbGhXCmxZZlRNUzc4TU5ZcXI1emFsQy9TTHVnVjhQdWlqOEEwajQxaVV0MWk3UzNrRVFTK1NndUp6R0RFSld6dVB4eW8KYndsMjNyUDFBM2tvUEUrclhVbWNsY09CVkJmWVl3blc5aDJ6Vm9XT1pXR0lwRW9WeEhxc0N1MXdDazZjUVNBUQpCNFFuZzhCYk5DbzNZaldkSFhaeXprYURkUWRnd01EWWNUV1NnaXI3N2NpWHR5Q3ZsOTYrd1pKaEovaC9UM0xlClJUOW9xNGJkemJWRFU2MG04RmZvUS9RQVNKcTBBd0lQTlNZOUVreVdqS1p0QWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGVDVhU1RpdnhlMnh2NE5WVjc3cVkzcklITncKQVdMMGx4bk4vOEVERGhobm81K2trdWRja2dJWUk1RTVDMEErNGxRWWhMSEZWcnFPOGpISE1WYTcrSzBld3duSwpGMHRHdEZGeFZoTEJqdDBLL1djTVhWeElwZ2toOUx4ZmtER0hmTk8rZytvRmVQSDFNb0IzYm9mZCtpSkFTVTl1CnFaa211VTFITnh2NWh6bkxGc3ZZUUlCa0VzaUhpak8va05JWlB3ZlF3dGRrZUdXRXNEMHZVZDQyVnM5a0tIZFUKelp6WkNKd3ZQVkxDdnNzRW4waE9lelBnTWw5OW9ZNVRFVDdBVm84QlZxV2p6UVEwVGMrMUpuVHlRMC95YlQ1bgpQNURaSDc3V0c2enhWU1hxamh0RTdYd1NTV2RTSktJNUkyeFdYWUVqQ2pNSnBXbW00QVI5cklWWW9Ddz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBeTRKQjU1UGZvQ0I5UkZGSTBSOE1PR3VjQXJCTDdnaVpEL2k0YURVdi9DMzB2NGkrCnVaVUVSQ1pPRy83YzBJV3BGajA0UDBOTE9ZQnMvTEhFWHgrK01zQ3ZqVmZMenVCQnRMeDlXaUpZVnBXSDB6RXUKL0REV0txK2MycFF2MGk3b0ZmRDdvby9BTkkrTllsTGRZdTB0NUJFRXZrb0xpY3hneENWczdqOGNxRzhKZHQ2ego5UU41S0R4UHExMUpuSlhEZ1ZRWDJHTUoxdllkczFhRmptVmhpS1JLRmNSNnJBcnRjQXBPbkVFZ0VBZUVKNFBBCld6UXFOMkkxblIxMmNzNUdnM1VIWU1EQTJIRTFrb0lxKyszSWw3Y2dyNWZldnNHU1lTZjRmMDl5M2tVL2FLdUcKM2MyMVExT3RKdkJYNkVQMEFFaWF0QU1DRHpVbVBSSk1sb3ltYlFJREFRQUJBb0lCQUJIYXkrNXdpUUpTL0xxSwozblp6eTJPREtXMExvUFhHMTZyN2p0anhzRlBuTWtocTltb2JlcTdYVDRDMjg3endaUjB0ak5XY0VWUlZBZnJmCm05TjBCUUM0bFdPellXUmY3MzZCdWx1M1AxbmFyNlVsOVFjczZsLy9YVkJ6WE40TGFIMmkvQk41NzRxTS9RSUoKM3N1SVNlcEVXMDZ0K2crQ2JndWlIdlJUZHRwZUQzRHNWK0tXUXlrMTdoeUlCanNmbEh4K20zQ1o2RUh5aE14dQprMW9RdFcvU1FSbm90K2FRR09TaURNaGEvZnlHb0VqMkdheWZueEVjNnpCK1dwQ1RDdWNIYzhTak16cTRpT2tSCmRpZHdXbHJwdEdsL1BDZWk3eXJadURsMkRvcys0dHJ1ZlVZVGpoYjI3M1N4SWR1bFpuZVhBeHFsUnBtTG9GTVAKTFJ6bDV5OENnWUVBMTk2b1U1Yi9sdzZTTSsraWpFYll4YThzQkx0VzRhT21pOHVxZlk3ek5EUFQ1OXJqRjk5SApTbXh3MCtNS1dSZk8xY3lRUERVTDJnYXZ5MHJ4SHN5bFQ4bGZhQnRGRHFwNlRZNkJ3K2NXdWFEd1hYRjl3L0JVCmhIRFI3bDByelV2bVNWeUN4Q0s5MzI3MnhwTnB0MXhyV2J0UTR4UnhaTlVHczQ0WUYzN3hDTjhDZ1lFQThWZFcKVFBHSE90MlRuQi9tZFBwNWRjTTh0c2tpeENReW9rVDE5TjV4dnlESHc3aUNtdGxvcWREYWJXcFNYNnIvcGVnbgpXWTJFOVFxSXJ3dlRMTXlCSUxsSU4zM2RsOTYxaW1pbXpoVWJYYThHWHlHSXJhWW1wSURHR2NoV3IwMHB1cmE5CnhTV1pKdGlDaE00eUpsNi9ZOTdBU082YVA0V01namlnc1k5NlhqTUNnWUE2d3pHdkQzdWo4eU41WDlJdnZWbGsKOXJwVXoycG5JZFZFV0x5Z1VUbURERml5MUxMYzNMcmJWNG1mSkQ2ODRlNDc1T09lZ0JJcDE0Z2pIdE5rUHZFQgpOeC94aHZyVmN6SzN5Z01wQU03KzJRQ1Ziejk5QnY3NnpudFhGNlhFek5SelErdVUyS0EzSWsycTRKWDJoQUgwCit6aVptQWNHRzdjblNaYmxUbmp1b1FLQmdDUGRNYkx2ZFlRVzUxZWRHZmNxUGFCMWFmRlR4SG5YVXpyditvancKQVlGQWtzOFAvVUNickVVSUIxMlpIaktmUzZ4UTZvQVJXcis3V0FLRFJGZDA4SDkzYVRidDJsODJOazRpTFIrVQozV00zbmovRzBQUFZMQXJvSkFneTBFYnV0WlBNa2pqWTFJQ0VUaWtFSjBteWJNaWZrbjJFRDZIKzY1bHladGJjCkZuZ25Bb0dCQUlyY1NHY3ZLZEQ1cExUN2htNnFKbzU0S3FLSU5zemxadG5wL0oxdW1naGFkdGpRRjJCUkIvQ0EKb2M3N09sZUtuVHV4TDR5M1pGZ0dRSWlDNkdiL3dYdHd6NExnekZ3RVVYUkZPNi93NGJYNzFNOXc5Q3dJRTJzTwpoRmN6YmlpR25xdTQ0Z3F1bU5EaGkvQnhVTFBMMy9aNWZHb2RubDVteU81empJQnp1WC9nCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
# Source: linkerd-control-plane/templates/identity.yaml
###
### Identity Controller Service
###
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-identity-issuer
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm edge-25.5.4
data:
  crt.pem: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUJzekNDQVZpZ0F3SUJBZ0lRZUh4T1YxS2txZjBjK2J6UGxWQW9qakFLQmdncWhrak9QUVFEQWpBbE1TTXcKSVFZRFZRUURFeHB5YjI5MExteHBibXRsY21RdVkyeDFjM1JsY2k1c2IyTmhiREFlRncweU5UQTFNamN4TlRFNQpNemhhRncweU5qQTFNamN4TlRFNU16aGFNQ2t4SnpBbEJnTlZCQU1USG1sa1pXNTBhWFI1TG14cGJtdGxjbVF1ClkyeDFjM1JsY2k1c2IyTmhiREJaTUJNR0J5cUdTTTQ5QWdFR0NDcUdTTTQ5QXdFSEEwSUFCR09SK3orbm9pYVUKNXJjRDlFUnNBTVNRV2diWUlpUXZacFU1TjR1Z0Nwc21hem9ZN3Z4UUFQaVBXSW9WZUdadCtXZGhQNzRoSlFTRApMTTM0ZnJHNnpuK2paakJrTUE0R0ExVWREd0VCL3dRRUF3SUJCakFTQmdOVkhSTUJBZjhFQ0RBR0FRSC9BZ0VBCk1CMEdBMVVkRGdRV0JCVGZvZmZjeTFjaFJmNGpyWGM3VUdzYUVObHdMREFmQmdOVkhTTUVHREFXZ0JRNUlBVUgKKzBLakt5TmwxVFRBM0w5WmVpUWozakFLQmdncWhrak9QUVFEQWdOSkFEQkdBaUVBbU1QNk9oS1h0V2UzN3RRQwowSFVDNDZhVkZIdG1WVjBsM1FISkFxbjhoSk1DSVFDUjFhWUNNOHNiTExpZG82cnJuV0M3ZnhqT1pteENNcjdmCk0wSTF1ZzhQb1E9PQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  key.pem: LS0tLS1CRUdJTiBFQyBQUklWQVRFIEtFWS0tLS0tCk1IY0NBUUVFSUVmVTlVNGZaN1lOZnBoU2pzam1ZUUsva2Fvc2ZwWForUkhjUDJicHN0TERvQW9HQ0NxR1NNNDkKQXdFSG9VUURRZ0FFWTVIN1A2ZWlKcFRtdHdQMFJHd0F4SkJhQnRnaUpDOW1sVGszaTZBS215WnJPaGp1L0ZBQQorSTlZaWhWNFptMzVaMkUvdmlFbEJJTXN6Zmgrc2JyT2Z3PT0KLS0tLS1FTkQgRUMgUFJJVkFURSBLRVktLS0tLQ==
---
# Source: linkerd-control-plane/templates/proxy-injector-rbac.yaml
kind: Secret
apiVersion: v1
metadata:
  name: linkerd-proxy-injector-k8s-tls
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm edge-25.5.4
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRRXEyYUJuUzQvbmRVMWk2YjRTd1paVEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEkxTURZeE1EQTBOREF5TjFvWERUSTJNRFl4TURBME5EQXlOMW93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMTWdUQzEvbVZwa0E5OFBWbzF0c1BmaTB2RVBhOFdTWUVvb21RbUFCVVp2aitlVQpwWHVzYmdPRDYyVURFdEg4UTg4UTZsZjlNd29IWElxdWIvY0pMUDIzUm5wdy94a3gvS0llbXhUUHdadWlId2ZqCm5CK0NJWGF3SE9Pd0NFTFpXSVRCaUpBa2t3ay85RWpOY2UwQVA1ZjlTU0dEV24wRTRpNFZJUExTTE5idjM1MGwKNU9lNCtwZVUvVGtqWFMvMG13V2RYY0t3cFgzTU44VnVsTXdZK2lEVXlyUWlxdmU2MFRJTkhpZVhaRm9UWGhXagpXYlNCUE0vVzQ2UStkSzA0dHBTNE5vQ2VwOGtQbHBoc1dQMFJyMTlpOTZDUFQwb1ZQTmJxd1RBR0tYeTZHbE5WClRFQU9JMGRnVWl5U1NLWHpwczNJd0Z5ZTRJUEJ2ZVhyQ0JZMzVmMENBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRVJveS9CYXBZL3lDNWR2MWdtNU90Ym1hZXVOdHBsN2I2d1YKaDVZYzhxSjhTNzFJVEFQQzRYSEZCeGJ5RlcvL2srV2dRVE1oRHUwblRPdndVYUtPNzk5dGxBekoyRmUvMTQ1VApFZ3lFdkV0bWc5ZXBaSEN1QWY5LzZ4dktadStDa0tCK1ZoUDBvZGUyWXZOQ2Z2VEloTU54N2tib0djL0M3TWR4ClJsM2JXd3JZVmFmbGpTaGFYMGxkcHc2VTJtNForQzV1cTAwY2tKODYzcTFhbFR1RnJZNEdsSXlaaTZHWUZ0bUsKeFFJU0dRd1l3cnV4NnhsZXd6MXFMQU1PQVI5eGtrdW1EK3RrVnB1RjJqUmlueXhKbkU2UEd5cjhBWThDanViVwpLekl0WldFS2VBYkM4Q3o0Qnl2ZzhXaEYrYlNlZ2ptV1pQdWpwWnM3cFBQajk5VUNZYkE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBc3lCTUxYK1pXbVFEM3c5V2pXMnc5K0xTOFE5cnhaSmdTaWlaQ1lBRlJtK1A1NVNsCmU2eHVBNFByWlFNUzBmeER6eERxVi8wekNnZGNpcTV2OXdrcy9iZEdlbkQvR1RIOG9oNmJGTS9CbTZJZkIrT2MKSDRJaGRyQWM0N0FJUXRsWWhNR0lrQ1NUQ1QvMFNNMXg3UUEvbC8xSklZTmFmUVRpTGhVZzh0SXMxdS9mblNYawo1N2o2bDVUOU9TTmRML1NiQloxZHdyQ2xmY3czeFc2VXpCajZJTlRLdENLcTk3clJNZzBlSjVka1doTmVGYU5aCnRJRTh6OWJqcEQ1MHJUaTJsTGcyZ0o2bnlRK1dtR3hZL1JHdlgyTDNvSTlQU2hVODF1ckJNQVlwZkxvYVUxVk0KUUE0alIyQlNMSkpJcGZPbXpjakFYSjdnZzhHOTVlc0lGamZsL1FJREFRQUJBb0lCQUJnNjJUTWFYSU1XbmxOdwovck00MEVSbndVTHNaQmFnbXpmTTBBNng2NFRBbUlXcDNNeWk0V3JHVUhRa2UwbytSbW5mRHVRQ0V3SmJScEJYCjBqdG5XVmVrai9zR0IrdS9rRDNaeC82RHI5dStqVllDMnQ2RU9zU1VSQVFranFtRVB1NE9ROHZEdHNQOGk2M0IKWkpTN2dONnRXMVFXTVlwUnU4cWgvd2Y1bUNrbXBWKzJ5RXNxMHhiU2hUS1hENE1mQUkwN0h5MGVORXVzeHJiRQowTVBQTGs3bFdsZHZhaTI5SGhBNFEyamNxNmVjQnNaSk5nZTRzMjF5U2VOaDJaTWF6eXRYU2dpTVhHY1cwNmRPClB2ODRlWTUyU0l3QUNRcU5rMXFKWENzOCtZVkdwQi9YQWRzd3FERUgxZVlXN1M1UGk5OXBBSzRCSjhqRVNTa2cKbVNLSHViMENnWUVBeWdNUCtDNnRwUHFQcklRZHcyVUgwdUUxNCtYNG51SEEwVnBvWUppeTRwY3UvOVhRdUEzUApSRURzVVNkT0FkZ0pNY0Y0eUR0aFZyaHV2OGdQdWtneFJsTVFkVXpxWjNmNERnT2VOOHdVUmdHQzJWbHZJSitPClhmMFh5OWN5N1Bld09BSW50SmZtUmYraVI2TzJBeFRpdlB3aGF5TE93NXMxQk9xVEdDTUVvUzhDZ1lFQTR2OTQKYlE1dWxGRWM0UG41WWZBcGhWZHd1K1g2UWxUNWczdHBVMGl1NDVXcnBkTVlBSzhXZjAxTHlBZlNSMU40S0NsUAo5S1FMWkRJWkVFTCtqNzVrNkV2ZFhwNVdkVXRQVGJtUnZPTE4rTnlDSm5pTUlDY080d0dKL2tDOHNLRWFYSkl0Cmc3bkJtUVhJL09DdXFvdDR3SDhST1hsbi9JS05UVjgxa0x5Z0tKTUNnWUJ0MUZKblhZRjg4OWtQTTFrM05ZT1cKYkdrdk9ZWDlZOEhBVU1YMDFyQlRMMTBYTFBsb1IrSExPdjBBZGowY0ZZZVNMSnp0U0JONDRaY2MzN2xsVHdDegpPay8xWmxiKzRDUFdBck9QcEgzVlBkY1ZNbUdQdkEvY0c5RkhPdjN1QmhBaHMxSkJCbURrNThJajd1YnpML1RDClNOWW1lR3N2di8rSVo3eUhYK3FSY3dLQmdDSkphancyd05jZ1JWZHFDcFFUZllJSmlocW5peHgzejFSZjBMSG0KdVp2Z29KT2toZXljaGE1bTAzcDhTL1BBRk5ja0hsS2FjS29Lc3lSMHFoUzJNbkd2KzlqdDI2dE4yOFdtc08reAo1bUNmbGYwUG1rTEZBNGVnVk9LVmpxcXpPdE1ldFVjL1NKRy9nUE5KVUxpcjVtcFZCeG9DVDRXaGhveFlSRFAvCmVjV0hBb0dBVk1XNkpPald4RlphVEcwUHZiZWkyb1pOTDB5R2hUS1JENlJvU0lQYXlKOE9qOWRhSGtmUFlab1EKNFhUdDlOM1lJN3ZRZW0zcjh0a2h0dmdyMDgwZmJxd0ExWFFObjV2OXRtcGEwSm9rdGNwbXZ3ZVA3ZExjZjRpNgpock10MlJsT2lGdXp4OUNRM2dETlFxS0JxN29KcGxjQVdVdDI2N2xGbjE5RmR2R3J3UDA9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0t
---
# Source: linkerd-control-plane/templates/config.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-config
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: controller
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm edge-25.5.4
data:
  linkerd-crds-chart-version: linkerd-crds-1.0.0-edge
  values: |
    clusterDomain: cluster.local
    clusterNetworks: 10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8
    cniEnabled: false
    commonLabels: {}
    controlPlaneTracing: false
    controlPlaneTracingNamespace: linkerd-jaeger
    controller:
      podDisruptionBudget:
        maxUnavailable: 1
    controllerGID: -1
    controllerImage: cr.l5d.io/linkerd/controller
    controllerImageVersion: ""
    controllerLogFormat: plain
    controllerLogLevel: info
    controllerReplicas: 1
    controllerUID: 2103
    debugContainer:
      image:
        name: cr.l5d.io/linkerd/debug
        pullPolicy: ""
        version: ""
    deploymentStrategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
    destinationController:
      livenessProbe:
        timeoutSeconds: 1
      meshedHttp2ClientProtobuf:
        keep_alive:
          interval:
            seconds: 10
          timeout:
            seconds: 3
          while_idle: true
      podAnnotations: {}
      readinessProbe:
        timeoutSeconds: 1
    disableHeartBeat: false
    disableIPv6: true
    egress:
      globalEgressNetworkNamespace: linkerd-egress
    enableEndpointSlices: true
    enableH2Upgrade: true
    enablePSP: false
    enablePodAntiAffinity: false
    enablePodDisruptionBudget: false
    enablePprof: false
    identity:
      externalCA: false
      issuer:
        clockSkewAllowance: 20s
        issuanceLifetime: 24h0m0s
        scheme: linkerd.io/tls
        tls:
          crtPEM: |
            -----BEGIN CERTIFICATE-----
            MIIBszCCAVigAwIBAgIQeHxOV1Kkqf0c+bzPlVAojjAKBggqhkjOPQQDAjAlMSMw
            IQYDVQQDExpyb290LmxpbmtlcmQuY2x1c3Rlci5sb2NhbDAeFw0yNTA1MjcxNTE5
            MzhaFw0yNjA1MjcxNTE5MzhaMCkxJzAlBgNVBAMTHmlkZW50aXR5LmxpbmtlcmQu
            Y2x1c3Rlci5sb2NhbDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABGOR+z+noiaU
            5rcD9ERsAMSQWgbYIiQvZpU5N4ugCpsmazoY7vxQAPiPWIoVeGZt+WdhP74hJQSD
            LM34frG6zn+jZjBkMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEA
            MB0GA1UdDgQWBBTfoffcy1chRf4jrXc7UGsaENlwLDAfBgNVHSMEGDAWgBQ5IAUH
            +0KjKyNl1TTA3L9ZeiQj3jAKBggqhkjOPQQDAgNJADBGAiEAmMP6OhKXtWe37tQC
            0HUC46aVFHtmVV0l3QHJAqn8hJMCIQCR1aYCM8sbLLido6rrnWC7fxjOZmxCMr7f
            M0I1ug8PoQ==
            -----END CERTIFICATE-----
      kubeAPI:
        clientBurst: 200
        clientQPS: 100
      livenessProbe:
        timeoutSeconds: 1
      podAnnotations: {}
      readinessProbe:
        timeoutSeconds: 1
      serviceAccountTokenProjection: true
    identityTrustAnchorsPEM: |
      -----BEGIN CERTIFICATE-----
      MIIBjjCCATSgAwIBAgIRAMx2oOSvBtfEOEYQuiX9F3QwCgYIKoZIzj0EAwIwJTEj
      MCEGA1UEAxMacm9vdC5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjUwNTI3MTUx
      NzA5WhcNMzUwNTI1MTUxNzA5WjAlMSMwIQYDVQQDExpyb290LmxpbmtlcmQuY2x1
      c3Rlci5sb2NhbDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABH11odv3GXlVMJjI
      I+1aR2Zh8DYMK0vzgu2hj/EbmQM/u7Z465/yNINaf3D8SQD274QWVliH51dNF1Om
      oiOeEA6jRTBDMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEBMB0G
      A1UdDgQWBBQ5IAUH+0KjKyNl1TTA3L9ZeiQj3jAKBggqhkjOPQQDAgNIADBFAiBV
      Fyw1BP9E1eQFyiIQjI1yNHI13CN9bQ33OeaGSsabSgIhAMTMramsXLju8GaZobJF
      CDTOAOuk0WDYGlYD4sommVZS
      -----END CERTIFICATE-----
    identityTrustDomain: cluster.local
    imagePullPolicy: IfNotPresent
    imagePullSecrets: []
    kubeAPI:
      clientBurst: 200
      clientQPS: 100
    linkerdVersion: edge-25.5.4
    networkValidator:
      connectAddr: ""
      enableSecurityContext: true
      listenAddr: ""
      logFormat: plain
      logLevel: debug
      timeout: 10s
    nodeSelector:
      kubernetes.io/os: linux
    podAnnotations: {}
    podLabels: {}
    podMonitor:
      controller:
        enabled: true
        namespaceSelector: |
          matchNames:
            - {{ .Release.Namespace }}
            - linkerd-viz
            - linkerd-jaeger
      enabled: false
      labels: {}
      proxy:
        enabled: true
      scrapeInterval: 10s
      scrapeTimeout: 10s
      serviceMirror:
        enabled: true
    policyController:
      image:
        name: cr.l5d.io/linkerd/policy-controller
        pullPolicy: ""
        version: ""
      livenessProbe:
        timeoutSeconds: 1
      logLevel: info
      probeNetworks:
      - 0.0.0.0/0
      - ::/0
      readinessProbe:
        timeoutSeconds: 1
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
    policyValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    priorityClassName: ""
    profileValidator:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
    prometheusUrl: ""
    proxy:
      await: true
      control:
        streams:
          idleTimeout: 5m
          initialTimeout: 3s
          lifetime: 1h
      cores: null
      defaultInboundPolicy: all-unauthenticated
      disableInboundProtocolDetectTimeout: false
      disableOutboundProtocolDetectTimeout: false
      enableExternalProfiles: false
      enableShutdownEndpoint: false
      gid: -1
      image:
        name: cr.l5d.io/linkerd/proxy
        pullPolicy: ""
        version: ""
      inbound:
        server:
          http2:
            keepAliveInterval: 10s
            keepAliveTimeout: 3s
      inboundConnectTimeout: 100ms
      inboundDiscoveryCacheUnusedTimeout: 90s
      livenessProbe:
        initialDelaySeconds: 10
        timeoutSeconds: 1
      logFormat: plain
      logHTTPHeaders: "off"
      logLevel: warn,linkerd=info,hickory=error
      metrics:
        hostnameLabels: false
      nativeSidecar: false
      opaquePorts: 25,587,3306,4444,5432,6379,9300,11211
      outbound:
        server:
          http2:
            keepAliveInterval: 10s
            keepAliveTimeout: 3s
      outboundConnectTimeout: 1000ms
      outboundDiscoveryCacheUnusedTimeout: 5s
      outboundTransportMode: transport-header
      ports:
        admin: 4191
        control: 4190
        inbound: 4143
        outbound: 4140
      readinessProbe:
        initialDelaySeconds: 2
        timeoutSeconds: 1
      requireIdentityOnInboundPorts: ""
      resources:
        cpu:
          limit: ""
          request: ""
        ephemeral-storage:
          limit: ""
          request: ""
        memory:
          limit: ""
          request: ""
      runtime:
        workers:
          maximumCPURatio: null
          minimum: 1
      shutdownGracePeriod: ""
      startupProbe:
        failureThreshold: 120
        initialDelaySeconds: 0
        periodSeconds: 1
      uid: 2102
      waitBeforeExitSeconds: 0
    proxyInit:
      closeWaitTimeoutSecs: 0
      ignoreInboundPorts: 4567,4568
      ignoreOutboundPorts: 4567,4568
      image:
        name: cr.l5d.io/linkerd/proxy-init
        pullPolicy: ""
        version: v2.4.2
      iptablesMode: legacy
      kubeAPIServerPorts: 443,6443
      logFormat: ""
      logLevel: ""
      privileged: false
      runAsGroup: 65534
      runAsRoot: true
      runAsUser: 65534
      skipSubnets: ""
      xtMountPath:
        mountPath: /run
        name: linkerd-proxy-init-xtables-lock
    proxyInjector:
      caBundle: ""
      crtPEM: ""
      externalSecret: false
      injectCaFrom: ""
      injectCaFromSecret: ""
      livenessProbe:
        timeoutSeconds: 1
      namespaceSelector:
        matchExpressions:
        - key: config.linkerd.io/admission-webhooks
          operator: NotIn
          values:
          - disabled
        - key: kubernetes.io/metadata.name
          operator: NotIn
          values:
          - kube-system
          - cert-manager
      objectSelector:
        matchExpressions:
        - key: linkerd.io/control-plane-component
          operator: DoesNotExist
        - key: linkerd.io/cni-resource
          operator: DoesNotExist
      podAnnotations: {}
      readinessProbe:
        timeoutSeconds: 1
      timeoutSeconds: 10
    revisionHistoryLimit: 10
    runtimeClassName: ""
    spValidator:
      livenessProbe:
        timeoutSeconds: 1
      readinessProbe:
        timeoutSeconds: 1
    webhookFailurePolicy: Ignore
---
# Source: linkerd-control-plane/templates/identity.yaml
kind: ConfigMap
apiVersion: v1
metadata:
  name: linkerd-identity-trust-roots
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm edge-25.5.4
data:
  ca-bundle.crt: |-
    -----BEGIN CERTIFICATE-----
    MIIBjjCCATSgAwIBAgIRAMx2oOSvBtfEOEYQuiX9F3QwCgYIKoZIzj0EAwIwJTEj
    MCEGA1UEAxMacm9vdC5saW5rZXJkLmNsdXN0ZXIubG9jYWwwHhcNMjUwNTI3MTUx
    NzA5WhcNMzUwNTI1MTUxNzA5WjAlMSMwIQYDVQQDExpyb290LmxpbmtlcmQuY2x1
    c3Rlci5sb2NhbDBZMBMGByqGSM49AgEGCCqGSM49AwEHA0IABH11odv3GXlVMJjI
    I+1aR2Zh8DYMK0vzgu2hj/EbmQM/u7Z465/yNINaf3D8SQD274QWVliH51dNF1Om
    oiOeEA6jRTBDMA4GA1UdDwEB/wQEAwIBBjASBgNVHRMBAf8ECDAGAQH/AgEBMB0G
    A1UdDgQWBBQ5IAUH+0KjKyNl1TTA3L9ZeiQj3jAKBggqhkjOPQQDAgNIADBFAiBV
    Fyw1BP9E1eQFyiIQjI1yNHI13CN9bQ33OeaGSsabSgIhAMTMramsXLju8GaZobJF
    CDTOAOuk0WDYGlYD4sommVZS
    -----END CERTIFICATE-----
---
# Source: linkerd-control-plane/templates/destination-rbac.yaml
###
### Destination Controller Service
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["apps"]
  resources: ["replicasets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["batch"]
  resources: ["jobs"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods", "endpoints", "services", "nodes"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["workload.linkerd.io"]
  resources: ["externalworkloads"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["coordination.k8s.io"]
  resources: ["leases"]
  verbs: ["create", "get", "update", "patch"]
- apiGroups: ["discovery.k8s.io"]
  resources: ["endpointslices"]
  verbs: ["list", "get", "watch", "create", "update", "patch", "delete"]
---
# Source: linkerd-control-plane/templates/destination-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apps
    resources:
      - deployments
    verbs:
      - get
  - apiGroups:
      - policy.linkerd.io
    resources:
      - authorizationpolicies
      - httplocalratelimitpolicies
      - httproutes
      - meshtlsauthentications
      - networkauthentications
      - servers
      - serverauthorizations
      - egressnetworks
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes
      - grpcroutes
      - tlsroutes
      - tcproutes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - policy.linkerd.io
    resources:
      - httproutes/status
      - httplocalratelimitpolicies/status
      - egressnetworks/status
    verbs:
      - patch
  - apiGroups:
      - gateway.networking.k8s.io
    resources:
      - httproutes/status
      - grpcroutes/status
      - tlsroutes/status
      - tcproutes/status
    verbs:
      - patch
  - apiGroups:
      - workload.linkerd.io
    resources:
      - externalworkloads
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - patch
---
# Source: linkerd-control-plane/templates/heartbeat-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["namespaces"]
  verbs: ["list"]
- apiGroups: ["linkerd.io"]
  resources: ["serviceprofiles"]
  verbs: ["list"]
---
# Source: linkerd-control-plane/templates/identity-rbac.yaml
###
### Identity Controller Service RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: ["authentication.k8s.io"]
  resources: ["tokenreviews"]
  verbs: ["create"]
# TODO(ver) Restrict this to the Linkerd namespace. See
# https://github.com/linkerd/linkerd2/issues/9367
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
---
# Source: linkerd-control-plane/templates/proxy-injector-rbac.yaml
###
### Proxy Injector RBAC
###
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["events"]
  verbs: ["create", "patch"]
- apiGroups: [""]
  resources: ["namespaces", "replicationcontrollers"]
  verbs: ["list", "get", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["list", "watch"]
- apiGroups: ["extensions", "apps"]
  resources: ["deployments", "replicasets", "daemonsets", "statefulsets"]
  verbs: ["list", "get", "watch"]
- apiGroups: ["extensions", "batch"]
  resources: ["cronjobs", "jobs"]
  verbs: ["list", "get", "watch"]
---
# Source: linkerd-control-plane/templates/destination-rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-destination
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-destination
subjects:
- kind: ServiceAccount
  name: linkerd-destination
  namespace: linkerd
---
# Source: linkerd-control-plane/templates/destination-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-destination-policy
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-policy
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
# Source: linkerd-control-plane/templates/heartbeat-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: linkerd-heartbeat
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: ClusterRole
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
# Source: linkerd-control-plane/templates/identity-rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-identity
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: linkerd-linkerd-identity
subjects:
- kind: ServiceAccount
  name: linkerd-identity
  namespace: linkerd
---
# Source: linkerd-control-plane/templates/proxy-injector-rbac.yaml
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: linkerd-linkerd-proxy-injector
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
subjects:
- kind: ServiceAccount
  name: linkerd-proxy-injector
  namespace: linkerd
  apiGroup: ""
roleRef:
  kind: ClusterRole
  name: linkerd-linkerd-proxy-injector
  apiGroup: rbac.authorization.k8s.io
---
# Source: linkerd-control-plane/templates/config-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm edge-25.5.4
  name: ext-namespace-metadata-linkerd-config
  namespace: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
# Source: linkerd-control-plane/templates/destination-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
---
# Source: linkerd-control-plane/templates/heartbeat-rbac.yaml
###
### Heartbeat RBAC
###
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
rules:
- apiGroups: [""]
  resources: ["configmaps"]
  verbs: ["get"]
  resourceNames: ["linkerd-config"]
---
# Source: linkerd-control-plane/templates/destination-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-destination-remote-discovery
  namespace: linkerd
  labels:
    app.kubernetes.io/part-of: Linkerd
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: remote-discovery
subjects:
  - kind: ServiceAccount
    name: linkerd-destination
    namespace: linkerd
---
# Source: linkerd-control-plane/templates/heartbeat-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    linkerd.io/control-plane-ns: linkerd
roleRef:
  kind: Role
  name: linkerd-heartbeat
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: linkerd-heartbeat
  namespace: linkerd
---
# Source: linkerd-control-plane/templates/destination.yaml
###
### Destination Controller Service
###
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm edge-25.5.4
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
# Source: linkerd-control-plane/templates/destination.yaml
kind: Service
apiVersion: v1
metadata:
  name: linkerd-dst-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm edge-25.5.4
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8086
    targetPort: 8086
---
# Source: linkerd-control-plane/templates/destination.yaml
kind: Service
apiVersion: v1
metadata:
  name: linkerd-sp-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm edge-25.5.4
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: sp-validator
    port: 443
    targetPort: sp-validator
---
# Source: linkerd-control-plane/templates/destination.yaml
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm edge-25.5.4
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: grpc
    port: 8090
    targetPort: 8090
---
# Source: linkerd-control-plane/templates/destination.yaml
kind: Service
apiVersion: v1
metadata:
  name: linkerd-policy-validator
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm edge-25.5.4
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: destination
  ports:
  - name: policy-https
    port: 443
    targetPort: policy-https
---
# Source: linkerd-control-plane/templates/identity.yaml
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm edge-25.5.4
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
# Source: linkerd-control-plane/templates/identity.yaml
kind: Service
apiVersion: v1
metadata:
  name: linkerd-identity-headless
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm edge-25.5.4
spec:
  clusterIP: None
  selector:
    linkerd.io/control-plane-component: identity
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
---
# Source: linkerd-control-plane/templates/proxy-injector.yaml
kind: Service
apiVersion: v1
metadata:
  name: linkerd-proxy-injector
  namespace: linkerd
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm edge-25.5.4
    config.linkerd.io/opaque-ports: "443"
spec:
  type: ClusterIP
  selector:
    linkerd.io/control-plane-component: proxy-injector
  ports:
  - name: proxy-injector
    port: 443
    targetPort: proxy-injector
---
# Source: linkerd-control-plane/templates/destination.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/helm edge-25.5.4
  labels:
    app.kubernetes.io/name: destination
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-25.5.4
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-destination
  namespace: linkerd
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      linkerd.io/control-plane-component: destination
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-destination
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        checksum/config: 7d3902e02b7faadfb20d4224d9ec7d3d4aae1f4ea6bfce24b8aefaf58b0420f7
        linkerd.io/created-by: linkerd/helm edge-25.5.4
        linkerd.io/proxy-version: edge-25.5.4
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 7ee67dcdb5cd9a84f0a2de0a34921c98c5f19990e216489baf7f82686c73907c
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: destination
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-destination
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      automountServiceAccountToken: false
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_uid
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: _pod_containerName
          value: &containerName linkerd-proxy
        - name: LINKERD2_PROXY_CORES
          value: "1"
        - name: LINKERD2_PROXY_CORES_MIN
          value: "1"
        - name: LINKERD2_PROXY_SHUTDOWN_ENDPOINT_ENABLED
          value: "false"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,hickory=error,[{headers}]=off,[{request}]=off"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: localhost.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: localhost.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: |
            {"ns":"$(_pod_ns)", "pod":"$(_pod_name)"}
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_CONTROL_STREAM_INITIAL_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_CONTROL_STREAM_IDLE_TIMEOUT
          value: "5m"
        - name: LINKERD2_PROXY_CONTROL_STREAM_LIFETIME
          value: "1h"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: "0.0.0.0:4190"
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: "0.0.0.0:4191"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDRS
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: "0.0.0.0:4143"
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8086,8090,8443,9443,9990,9996,9997"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_USER_TIMEOUT
          value: 30s
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_USER_TIMEOUT
          value: 30s
        - name: LINKERD2_PROXY_OUTBOUND_METRICS_HOSTNAME_LABELS
          value: "false"
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:edge-25.5.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
          timeoutSeconds: 1
        name: *containerName
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
          timeoutSeconds: 1
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
                - --port=4191
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - destination
        - -addr=:8086
        - -controller-namespace=linkerd
        - -outbound-transport-mode=transport-header
        - -enable-h2-upgrade=true
        - -log-level=info
        - -log-format=plain
        - -enable-endpoint-slices=true
        - -cluster-domain=cluster.local
        - -identity-trust-domain=cluster.local
        - -default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - -enable-ipv6=false
        - -enable-pprof=false
        - --meshed-http2-client-params={"keep_alive":{"interval":{"seconds":10},"timeout":{"seconds":3},"while_idle":true}}
        image: cr.l5d.io/linkerd/controller:edge-25.5.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9996
          initialDelaySeconds: 10
          timeoutSeconds: 1
        name: destination
        ports:
        - containerPort: 8086
          name: grpc
        - containerPort: 9996
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9996
          timeoutSeconds: 1
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      - args:
        - sp-validator
        - -log-level=info
        - -log-format=plain
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:edge-25.5.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9997
          initialDelaySeconds: 10
          timeoutSeconds: 1
        name: sp-validator
        ports:
        - containerPort: 8443
          name: sp-validator
        - containerPort: 9997
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9997
          timeoutSeconds: 1
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: sp-tls
          readOnly: true
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      - args:
        - --admin-addr=0.0.0.0:9990
        - --control-plane-namespace=linkerd
        - --grpc-addr=0.0.0.0:8090
        - --server-addr=0.0.0.0:9443
        - --server-tls-key=/var/run/linkerd/tls/tls.key
        - --server-tls-certs=/var/run/linkerd/tls/tls.crt
        - --cluster-networks=10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8
        - --identity-domain=cluster.local
        - --cluster-domain=cluster.local
        - --default-policy=all-unauthenticated
        - --log-level=info
        - --log-format=plain
        - --default-opaque-ports=25,587,3306,4444,5432,6379,9300,11211
        - --global-egress-network-namespace=linkerd-egress
        - --probe-networks=0.0.0.0/0,::/0
        image: cr.l5d.io/linkerd/policy-controller:edge-25.5.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: admin-http
          initialDelaySeconds: 10
          timeoutSeconds: 1
        name: policy
        ports:
        - containerPort: 8090
          name: grpc
        - containerPort: 9990
          name: admin-http
        - containerPort: 9443
          name: policy-https
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: admin-http
          timeoutSeconds: 1
        resources:
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/tls
          name: policy-tls
          readOnly: true
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      initContainers:
      - args:
        - --ipv6=false
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.4.2
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-destination
      volumes:
      - name: sp-tls
        secret:
          secretName: linkerd-sp-validator-k8s-tls
      - name: policy-tls
        secret:
          secretName: linkerd-policy-validator-k8s-tls
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
# Source: linkerd-control-plane/templates/identity.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/helm edge-25.5.4
  labels:
    app.kubernetes.io/name: identity
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-25.5.4
    linkerd.io/control-plane-component: identity
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-identity
  namespace: linkerd
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      linkerd.io/control-plane-component: identity
      linkerd.io/control-plane-ns: linkerd
      linkerd.io/proxy-deployment: linkerd-identity
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        linkerd.io/created-by: linkerd/helm edge-25.5.4
        linkerd.io/proxy-version: edge-25.5.4
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 7ee67dcdb5cd9a84f0a2de0a34921c98c5f19990e216489baf7f82686c73907c
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: identity
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-identity
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      automountServiceAccountToken: false
      containers:
      - args:
        - identity
        - -log-level=info
        - -log-format=plain
        - -controller-namespace=linkerd
        - -identity-trust-domain=cluster.local
        - -identity-issuance-lifetime=24h0m0s
        - -identity-clock-skew-allowance=20s
        - -identity-scheme=linkerd.io/tls
        - -enable-pprof=false
        - -kube-apiclient-qps=100
        - -kube-apiclient-burst=200
        env:
        - name: LINKERD_DISABLED
          value: "linkerd-await cannot block the identity controller"
        image: cr.l5d.io/linkerd/controller:edge-25.5.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9990
          initialDelaySeconds: 10
          timeoutSeconds: 1
        name: identity
        ports:
        - containerPort: 8080
          name: grpc
        - containerPort: 9990
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9990
          timeoutSeconds: 1
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/issuer
          name: identity-issuer
        - mountPath: /var/run/linkerd/identity/trust-roots/
          name: trust-roots
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_uid
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: _pod_containerName
          value: &containerName linkerd-proxy
        - name: LINKERD2_PROXY_CORES
          value: "1"
        - name: LINKERD2_PROXY_CORES_MIN
          value: "1"
        - name: LINKERD2_PROXY_INBOUND_PORTS_REQUIRE_TLS
          value: "8080"
        - name: LINKERD2_PROXY_SHUTDOWN_ENDPOINT_ENABLED
          value: "false"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,hickory=error,[{headers}]=off,[{request}]=off"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: |
            {"ns":"$(_pod_ns)", "pod":"$(_pod_name)"}
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_CONTROL_STREAM_INITIAL_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_CONTROL_STREAM_IDLE_TIMEOUT
          value: "5m"
        - name: LINKERD2_PROXY_CONTROL_STREAM_LIFETIME
          value: "1h"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: "0.0.0.0:4190"
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: "0.0.0.0:4191"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDRS
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: "0.0.0.0:4143"
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8080,9990"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_USER_TIMEOUT
          value: 30s
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_USER_TIMEOUT
          value: 30s
        - name: LINKERD2_PROXY_OUTBOUND_METRICS_HOSTNAME_LABELS
          value: "false"
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: localhost.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:edge-25.5.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
          timeoutSeconds: 1
        name: *containerName
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
          timeoutSeconds: 1
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      initContainers:
      - args:
        - --ipv6=false
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.4.2
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-identity
      volumes:
      - name: identity-issuer
        secret:
          secretName: linkerd-identity-issuer
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
# Source: linkerd-control-plane/templates/proxy-injector.yaml
###
### Proxy Injector
###

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    linkerd.io/created-by: linkerd/helm edge-25.5.4
  labels:
    app.kubernetes.io/name: proxy-injector
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-25.5.4
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
  name: linkerd-proxy-injector
  namespace: linkerd
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      linkerd.io/control-plane-component: proxy-injector
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
  template:
    metadata:
      annotations:
        checksum/config: e198d9c56d39dd835bd476f32a4b51a87e16bd1e6ffd3b6c929703804d84938b
        linkerd.io/created-by: linkerd/helm edge-25.5.4
        linkerd.io/proxy-version: edge-25.5.4
        cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        linkerd.io/trust-root-sha256: 7ee67dcdb5cd9a84f0a2de0a34921c98c5f19990e216489baf7f82686c73907c
        config.linkerd.io/opaque-ports: "8443"
        config.linkerd.io/default-inbound-policy: "all-unauthenticated"
      labels:
        linkerd.io/control-plane-component: proxy-injector
        linkerd.io/control-plane-ns: linkerd
        linkerd.io/workload-ns: linkerd
        linkerd.io/proxy-deployment: linkerd-proxy-injector
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      
      automountServiceAccountToken: false
      containers:
      - env:
        - name: _pod_name
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: _pod_ns
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: _pod_uid
          valueFrom:
            fieldRef:
              fieldPath: metadata.uid
        - name: _pod_nodeName
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: _pod_containerName
          value: &containerName linkerd-proxy
        - name: LINKERD2_PROXY_CORES
          value: "1"
        - name: LINKERD2_PROXY_CORES_MIN
          value: "1"
        - name: LINKERD2_PROXY_SHUTDOWN_ENDPOINT_ENABLED
          value: "false"
        - name: LINKERD2_PROXY_LOG
          value: "warn,linkerd=info,hickory=error,[{headers}]=off,[{request}]=off"
        - name: LINKERD2_PROXY_LOG_FORMAT
          value: "plain"
        - name: LINKERD2_PROXY_DESTINATION_SVC_ADDR
          value: linkerd-dst-headless.linkerd.svc.cluster.local.:8086
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_POLICY_SVC_ADDR
          value: linkerd-policy.linkerd.svc.cluster.local.:8090
        - name: LINKERD2_PROXY_POLICY_WORKLOAD
          value: |
            {"ns":"$(_pod_ns)", "pod":"$(_pod_name)"}
        - name: LINKERD2_PROXY_INBOUND_DEFAULT_POLICY
          value: all-unauthenticated
        - name: LINKERD2_PROXY_POLICY_CLUSTER_NETWORKS
          value: "10.0.0.0/8,100.64.0.0/10,172.16.0.0/12,192.168.0.0/16,fd00::/8"
        - name: LINKERD2_PROXY_CONTROL_STREAM_INITIAL_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_CONTROL_STREAM_IDLE_TIMEOUT
          value: "5m"
        - name: LINKERD2_PROXY_CONTROL_STREAM_LIFETIME
          value: "1h"
        - name: LINKERD2_PROXY_INBOUND_CONNECT_TIMEOUT
          value: "100ms"
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_TIMEOUT
          value: "1000ms"
        - name: LINKERD2_PROXY_OUTBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "5s"
        - name: LINKERD2_PROXY_INBOUND_DISCOVERY_IDLE_TIMEOUT
          value: "90s"
        - name: LINKERD2_PROXY_CONTROL_LISTEN_ADDR
          value: "0.0.0.0:4190"
        - name: LINKERD2_PROXY_ADMIN_LISTEN_ADDR
          value: "0.0.0.0:4191"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDR
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_OUTBOUND_LISTEN_ADDRS
          value: "127.0.0.1:4140"
        - name: LINKERD2_PROXY_INBOUND_LISTEN_ADDR
          value: "0.0.0.0:4143"
        - name: LINKERD2_PROXY_INBOUND_IPS
          valueFrom:
            fieldRef:
              fieldPath: status.podIPs
        - name: LINKERD2_PROXY_INBOUND_PORTS
          value: "8443,9995"
        - name: LINKERD2_PROXY_DESTINATION_PROFILE_SUFFIXES
          value: svc.cluster.local.
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_KEEPALIVE
          value: 10000ms
        - name: LINKERD2_PROXY_INBOUND_ACCEPT_USER_TIMEOUT
          value: 30s
        - name: LINKERD2_PROXY_OUTBOUND_CONNECT_USER_TIMEOUT
          value: 30s
        - name: LINKERD2_PROXY_OUTBOUND_METRICS_HOSTNAME_LABELS
          value: "false"
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_INBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_INTERVAL
          value: "10s"
        - name: LINKERD2_PROXY_OUTBOUND_SERVER_HTTP2_KEEP_ALIVE_TIMEOUT
          value: "3s"
        - name: LINKERD2_PROXY_INBOUND_PORTS_DISABLE_PROTOCOL_DETECTION
          value: "25,587,3306,4444,5432,6379,9300,11211"
        - name: LINKERD2_PROXY_DESTINATION_CONTEXT
          value: |
            {"ns":"$(_pod_ns)", "nodeName":"$(_pod_nodeName)", "pod":"$(_pod_name)"}
        - name: _pod_sa
          valueFrom:
            fieldRef:
              fieldPath: spec.serviceAccountName
        - name: _l5d_ns
          value: linkerd
        - name: _l5d_trustdomain
          value: cluster.local
        - name: LINKERD2_PROXY_IDENTITY_DIR
          value: /var/run/linkerd/identity/end-entity
        - name: LINKERD2_PROXY_IDENTITY_TRUST_ANCHORS
          valueFrom:
            configMapKeyRef:
              name: linkerd-identity-trust-roots
              key: ca-bundle.crt
        - name: LINKERD2_PROXY_IDENTITY_TOKEN_FILE
          value: /var/run/secrets/tokens/linkerd-identity-token
        - name: LINKERD2_PROXY_IDENTITY_SVC_ADDR
          value: linkerd-identity-headless.linkerd.svc.cluster.local.:8080
        - name: LINKERD2_PROXY_IDENTITY_LOCAL_NAME
          value: $(_pod_sa).$(_pod_ns).serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_IDENTITY_SVC_NAME
          value: linkerd-identity.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_DESTINATION_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        - name: LINKERD2_PROXY_POLICY_SVC_NAME
          value: linkerd-destination.linkerd.serviceaccount.identity.linkerd.cluster.local
        image: cr.l5d.io/linkerd/proxy:edge-25.5.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /live
            port: 4191
          initialDelaySeconds: 10
          timeoutSeconds: 1
        name: *containerName
        ports:
        - containerPort: 4143
          name: linkerd-proxy
        - containerPort: 4191
          name: linkerd-admin
        readinessProbe:
          httpGet:
            path: /ready
            port: 4191
          initialDelaySeconds: 2
          timeoutSeconds: 1
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2102
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        lifecycle:
          postStart:
            exec:
              command:
                - /usr/lib/linkerd/linkerd-await
                - --timeout=2m
                - --port=4191
        volumeMounts:
        - mountPath: /var/run/linkerd/identity/end-entity
          name: linkerd-identity-end-entity
        - mountPath: /var/run/secrets/tokens
          name: linkerd-identity-token
      - args:
        - proxy-injector
        - -log-level=info
        - -log-format=plain
        - -linkerd-namespace=linkerd
        - -enable-pprof=false
        image: cr.l5d.io/linkerd/controller:edge-25.5.4
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /ping
            port: 9995
          initialDelaySeconds: 10
          timeoutSeconds: 1
        name: proxy-injector
        ports:
        - containerPort: 8443
          name: proxy-injector
        - containerPort: 9995
          name: admin-http
        readinessProbe:
          failureThreshold: 7
          httpGet:
            path: /ready
            port: 9995
          timeoutSeconds: 1
        securityContext:
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 2103
          allowPrivilegeEscalation: false
          seccompProfile:
            type: RuntimeDefault
        volumeMounts:
        - mountPath: /var/run/linkerd/config
          name: config
        - mountPath: /var/run/linkerd/identity/trust-roots
          name: trust-roots
        - mountPath: /var/run/linkerd/tls
          name: tls
          readOnly: true
        - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          name: kube-api-access
          readOnly: true
      initContainers:
      - args:
        - --ipv6=false
        - --incoming-proxy-port
        - "4143"
        - --outgoing-proxy-port
        - "4140"
        - --proxy-uid
        - "2102"
        - --inbound-ports-to-ignore
        - "4190,4191,4567,4568"
        - --outbound-ports-to-ignore
        - "443,6443"
        image: cr.l5d.io/linkerd/proxy-init:v2.4.2
        imagePullPolicy: IfNotPresent
        name: linkerd-init
        resources:
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            add:
            - NET_ADMIN
            - NET_RAW
          privileged: false
          runAsGroup: 0
          runAsNonRoot: false
          runAsUser: 0
          readOnlyRootFilesystem: true
          seccompProfile:
            type: RuntimeDefault
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /run
          name: linkerd-proxy-init-xtables-lock
      securityContext:
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: linkerd-proxy-injector
      volumes:
      - configMap:
          name: linkerd-config
        name: config
      - configMap:
          name: linkerd-identity-trust-roots
        name: trust-roots
      - name: tls
        secret:
          secretName: linkerd-proxy-injector-k8s-tls
      - name: kube-api-access
        projected:
          defaultMode: 420
          sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              items:
              - key: ca.crt
                path: ca.crt
              name: kube-root-ca.crt
          - downwardAPI:
              items:
              - fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
                path: namespace
      - emptyDir: {}
        name: linkerd-proxy-init-xtables-lock
      - name: linkerd-identity-token
        projected:
          sources:
          - serviceAccountToken:
              path: linkerd-identity-token
              expirationSeconds: 86400
              audience: identity.l5d.io
      - emptyDir:
          medium: Memory
        name: linkerd-identity-end-entity
---
# Source: linkerd-control-plane/templates/heartbeat.yaml
###
### Heartbeat
###
apiVersion: batch/v1
kind: CronJob
metadata:
  name: linkerd-heartbeat
  namespace: linkerd
  labels:
    app.kubernetes.io/name: heartbeat
    app.kubernetes.io/part-of: Linkerd
    app.kubernetes.io/version: edge-25.5.4
    linkerd.io/control-plane-component: heartbeat
    linkerd.io/control-plane-ns: linkerd
  annotations:
    linkerd.io/created-by: linkerd/helm edge-25.5.4
spec:
  concurrencyPolicy: Replace
  schedule: "50 04 * * *"
  successfulJobsHistoryLimit: 0
  jobTemplate:
    spec:
      template:
        metadata:
          labels:
            linkerd.io/control-plane-component: heartbeat
            linkerd.io/workload-ns: linkerd
          annotations:
            linkerd.io/created-by: linkerd/helm edge-25.5.4
        spec:
          nodeSelector:
            kubernetes.io/os: linux
          securityContext:
            seccompProfile:
              type: RuntimeDefault
          serviceAccountName: linkerd-heartbeat
          restartPolicy: Never
          automountServiceAccountToken: false
          containers:
          - name: heartbeat
            image: cr.l5d.io/linkerd/controller:edge-25.5.4
            imagePullPolicy: IfNotPresent
            env:
            - name: LINKERD_DISABLED
              value: "the heartbeat controller does not use the proxy"
            args:
            - "heartbeat"
            - "-controller-namespace=linkerd"
            - "-log-level=info"
            - "-log-format=plain"
            - "-prometheus-url=http://prometheus.linkerd-viz.svc.cluster.local:9090"
            securityContext:
              capabilities:
                drop:
                - ALL
              readOnlyRootFilesystem: true
              runAsNonRoot: true
              runAsUser: 2103
              allowPrivilegeEscalation: false
              seccompProfile:
                type: RuntimeDefault
            volumeMounts:
            - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
              name: kube-api-access
              readOnly: true
          volumes:
          - name: kube-api-access
            projected:
              defaultMode: 420
              sources:
              - serviceAccountToken:
                  expirationSeconds: 3607
                  path: token
              - configMap:
                  items:
                  - key: ca.crt
                    path: ca.crt
                  name: kube-root-ca.crt
              - downwardAPI:
                  items:
                  - fieldRef:
                      apiVersion: v1
                      fieldPath: metadata.namespace
                    path: namespace
---
# Source: linkerd-control-plane/templates/proxy-injector-rbac.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  name: linkerd-proxy-injector-webhook-config
  labels:
    linkerd.io/control-plane-component: proxy-injector
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-proxy-injector.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
    - key: kubernetes.io/metadata.name
      operator: NotIn
      values:
      - kube-system
      - cert-manager
  objectSelector:
    matchExpressions:
    - key: linkerd.io/control-plane-component
      operator: DoesNotExist
    - key: linkerd.io/cni-resource
      operator: DoesNotExist
  clientConfig:
    service:
      name: linkerd-proxy-injector
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURVakNDQWpxZ0F3SUJBZ0lRRXEyYUJuUzQvbmRVMWk2YjRTd1paVEFOQmdrcWhraUc5dzBCQVFzRkFEQXQKTVNzd0tRWURWUVFERXlKc2FXNXJaWEprTFhCeWIzaDVMV2x1YW1WamRHOXlMbXhwYm10bGNtUXVjM1pqTUI0WApEVEkxTURZeE1EQTBOREF5TjFvWERUSTJNRFl4TURBME5EQXlOMW93TFRFck1Da0dBMVVFQXhNaWJHbHVhMlZ5ClpDMXdjbTk0ZVMxcGJtcGxZM1J2Y2k1c2FXNXJaWEprTG5OMll6Q0NBU0l3RFFZSktvWklodmNOQVFFQkJRQUQKZ2dFUEFEQ0NBUW9DZ2dFQkFMTWdUQzEvbVZwa0E5OFBWbzF0c1BmaTB2RVBhOFdTWUVvb21RbUFCVVp2aitlVQpwWHVzYmdPRDYyVURFdEg4UTg4UTZsZjlNd29IWElxdWIvY0pMUDIzUm5wdy94a3gvS0llbXhUUHdadWlId2ZqCm5CK0NJWGF3SE9Pd0NFTFpXSVRCaUpBa2t3ay85RWpOY2UwQVA1ZjlTU0dEV24wRTRpNFZJUExTTE5idjM1MGwKNU9lNCtwZVUvVGtqWFMvMG13V2RYY0t3cFgzTU44VnVsTXdZK2lEVXlyUWlxdmU2MFRJTkhpZVhaRm9UWGhXagpXYlNCUE0vVzQ2UStkSzA0dHBTNE5vQ2VwOGtQbHBoc1dQMFJyMTlpOTZDUFQwb1ZQTmJxd1RBR0tYeTZHbE5WClRFQU9JMGRnVWl5U1NLWHpwczNJd0Z5ZTRJUEJ2ZVhyQ0JZMzVmMENBd0VBQWFOdU1Hd3dEZ1lEVlIwUEFRSC8KQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUZCUWNEQWpBTUJnTlZIUk1CQWY4RQpBakFBTUMwR0ExVWRFUVFtTUNTQ0lteHBibXRsY21RdGNISnZlSGt0YVc1cVpXTjBiM0l1YkdsdWEyVnlaQzV6CmRtTXdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBRVJveS9CYXBZL3lDNWR2MWdtNU90Ym1hZXVOdHBsN2I2d1YKaDVZYzhxSjhTNzFJVEFQQzRYSEZCeGJ5RlcvL2srV2dRVE1oRHUwblRPdndVYUtPNzk5dGxBekoyRmUvMTQ1VApFZ3lFdkV0bWc5ZXBaSEN1QWY5LzZ4dktadStDa0tCK1ZoUDBvZGUyWXZOQ2Z2VEloTU54N2tib0djL0M3TWR4ClJsM2JXd3JZVmFmbGpTaGFYMGxkcHc2VTJtNForQzV1cTAwY2tKODYzcTFhbFR1RnJZNEdsSXlaaTZHWUZ0bUsKeFFJU0dRd1l3cnV4NnhsZXd6MXFMQU1PQVI5eGtrdW1EK3RrVnB1RjJqUmlueXhKbkU2UEd5cjhBWThDanViVwpLekl0WldFS2VBYkM4Q3o0Qnl2ZzhXaEYrYlNlZ2ptV1pQdWpwWnM3cFBQajk5VUNZYkE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0=
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: [ "CREATE" ]
    apiGroups: [""]
    apiVersions: ["v1"]
    resources: ["pods", "services"]
    scope: "Namespaced"
  sideEffects: None
  timeoutSeconds: 10
---
# Source: linkerd-control-plane/templates/destination-rbac.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-sp-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-sp-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-sp-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURUVENDQWpXZ0F3SUJBZ0lSQU9XeXdnVHZpL28wTHZrRlR2d0hpa1F3RFFZSktvWklodmNOQVFFTEJRQXcKS3pFcE1DY0dBMVVFQXhNZ2JHbHVhMlZ5WkMxemNDMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13SGhjTgpNalV3TmpFd01EUTBNREk0V2hjTk1qWXdOakV3TURRME1ESTRXakFyTVNrd0p3WURWUVFERXlCc2FXNXJaWEprCkxYTndMWFpoYkdsa1lYUnZjaTVzYVc1clpYSmtMbk4yWXpDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVAKQURDQ0FRb0NnZ0VCQUppQU5Qam5YRWM2SExnMTVaazZoMGI1V3BtQ1R3OXJ1WkVMdEdMVjdNYXNUaFllTE9yOQprckIzOGpCY2xjdVcybHZOSExXSUJBbkhBbSszOXgrRlhQc2ZFVG1LOTJWTWJGd3diMTB0Njd5eWwyZWtYTGQ5CjhrN1RRMHhhS1VhRCtLS2NBd2YwTndiTllDbTFVWlZsYzhXaTdNcThmUnQ1dHAyTDVuY2ZIYTdwazl3VWUrZEIKRUV1c05QZ0U2RmtheW5pSUxWaUpJMDJJTGVEb094SlByV1h2Yzl4TElmNForbThLUndsc21WYm02OVRudmhGZwpOYUxCMlAzbUt4bGkzN0JyTlYwakx6aUZkZ1ZSMWdoT0pSWDEyc0YvTlN1K0NoejlDWXo1blZiYzN4Rnl4U1FiCmlqcW13d0I0eXJlVE90WHk0UkpRWnNTTFpORVhHc0wzS05jQ0F3RUFBYU5zTUdvd0RnWURWUjBQQVFIL0JBUUQKQWdXZ01CMEdBMVVkSlFRV01CUUdDQ3NHQVFVRkJ3TUJCZ2dyQmdFRkJRY0RBakFNQmdOVkhSTUJBZjhFQWpBQQpNQ3NHQTFVZEVRUWtNQ0tDSUd4cGJtdGxjbVF0YzNBdGRtRnNhV1JoZEc5eUxteHBibXRsY21RdWMzWmpNQTBHCkNTcUdTSWIzRFFFQkN3VUFBNElCQVFBZmtCQjFubzlybWVsN3k3S2U5ZWtLODFndlVyak14elRCcEYwaGt0OHgKT3VvbDJuZHpFbndNdTl6L0VqTEpGQ1F2dWNSNys5dkRMeDVZN1M4SzE2NWQ3SDBUaEZoVGViR0pRbWY0SlprSQpPR0FXUzZJWjlHRWlQNW1nWXFOZHllWm8rajhVeW1BYU5IWUdrdG9ZUHlNMHQrRjJjc1N4UU1XRE9zOGsxTHo4Ckk5a0FtUksreXA3ekVrUyt3QXg3cGxJa01zSHU5N29EMmRCUlBOSWM1VUJGWkdzWHVwT09JcEpwWGtkd2ExdXMKNnpkQmdZUyt2WGJwdURybFRkeG1nUjJDQTZWWjFsYjRvbWVDVEJmVmtaS25Tcm5KRTl1UEZybjFzeWE2NGhhTQphaDhQeEpxTzBnSmNXbStKKzk0bkpCSGR6R0hwS25oQjh2Y0EzQmdIdXArbwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0t
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["linkerd.io"]
    apiVersions: ["v1alpha1", "v1alpha2"]
    resources: ["serviceprofiles"]
  sideEffects: None
---
# Source: linkerd-control-plane/templates/destination-rbac.yaml
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  name: linkerd-policy-validator-webhook-config
  labels:
    linkerd.io/control-plane-component: destination
    linkerd.io/control-plane-ns: linkerd
webhooks:
- name: linkerd-policy-validator.linkerd.io
  namespaceSelector:
    matchExpressions:
    - key: config.linkerd.io/admission-webhooks
      operator: NotIn
      values:
      - disabled
  clientConfig:
    service:
      name: linkerd-policy-validator
      namespace: linkerd
      path: "/"
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXRENDQWtDZ0F3SUJBZ0lRQzhXZC91VHpUSW9UM01Va2k4MUZaREFOQmdrcWhraUc5dzBCQVFzRkFEQXYKTVMwd0t3WURWUVFERXlSc2FXNXJaWEprTFhCdmJHbGplUzEyWVd4cFpHRjBiM0l1YkdsdWEyVnlaQzV6ZG1NdwpIaGNOTWpVd05qRXdNRFEwTURJNFdoY05Nall3TmpFd01EUTBNREk0V2pBdk1TMHdLd1lEVlFRREV5UnNhVzVyClpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1YTJWeVpDNXpkbU13Z2dFaU1BMEdDU3FHU0liM0RRRUIKQVFVQUE0SUJEd0F3Z2dFS0FvSUJBUURMZ2tIbms5K2dJSDFFVVVqUkh3dzRhNXdDc0V2dUNKa1ArTGhvTlMvOApMZlMvaUw2NWxRUkVKazRiL3R6UWhha1dQVGcvUTBzNWdHejhzY1JmSDc0eXdLK05WOHZPNEVHMHZIMWFJbGhXCmxZZlRNUzc4TU5ZcXI1emFsQy9TTHVnVjhQdWlqOEEwajQxaVV0MWk3UzNrRVFTK1NndUp6R0RFSld6dVB4eW8KYndsMjNyUDFBM2tvUEUrclhVbWNsY09CVkJmWVl3blc5aDJ6Vm9XT1pXR0lwRW9WeEhxc0N1MXdDazZjUVNBUQpCNFFuZzhCYk5DbzNZaldkSFhaeXprYURkUWRnd01EWWNUV1NnaXI3N2NpWHR5Q3ZsOTYrd1pKaEovaC9UM0xlClJUOW9xNGJkemJWRFU2MG04RmZvUS9RQVNKcTBBd0lQTlNZOUVreVdqS1p0QWdNQkFBR2pjREJ1TUE0R0ExVWQKRHdFQi93UUVBd0lGb0RBZEJnTlZIU1VFRmpBVUJnZ3JCZ0VGQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVApBUUgvQkFJd0FEQXZCZ05WSFJFRUtEQW1naVJzYVc1clpYSmtMWEJ2YkdsamVTMTJZV3hwWkdGMGIzSXViR2x1CmEyVnlaQzV6ZG1Nd0RRWUpLb1pJaHZjTkFRRUxCUUFEZ2dFQkFGVDVhU1RpdnhlMnh2NE5WVjc3cVkzcklITncKQVdMMGx4bk4vOEVERGhobm81K2trdWRja2dJWUk1RTVDMEErNGxRWWhMSEZWcnFPOGpISE1WYTcrSzBld3duSwpGMHRHdEZGeFZoTEJqdDBLL1djTVhWeElwZ2toOUx4ZmtER0hmTk8rZytvRmVQSDFNb0IzYm9mZCtpSkFTVTl1CnFaa211VTFITnh2NWh6bkxGc3ZZUUlCa0VzaUhpak8va05JWlB3ZlF3dGRrZUdXRXNEMHZVZDQyVnM5a0tIZFUKelp6WkNKd3ZQVkxDdnNzRW4waE9lelBnTWw5OW9ZNVRFVDdBVm84QlZxV2p6UVEwVGMrMUpuVHlRMC95YlQ1bgpQNURaSDc3V0c2enhWU1hxamh0RTdYd1NTV2RTSktJNUkyeFdYWUVqQ2pNSnBXbW00QVI5cklWWW9Ddz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQ==
  failurePolicy: Ignore
  admissionReviewVersions: ["v1", "v1beta1"]
  rules:
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["policy.linkerd.io"]
    apiVersions: ["*"]
    resources:
    - authorizationpolicies
    - httplocalratelimitpolicies
    - httproutes
    - networkauthentications
    - meshtlsauthentications
    - serverauthorizations
    - servers
    - egressnetworks
  - operations: ["CREATE", "UPDATE"]
    apiGroups: ["gateway.networking.k8s.io"]
    apiVersions: ["*"]
    resources:
    - httproutes
    - grpcroutes
    - tlsroutes
    - tcproutes
  sideEffects: None

Templating release=zipkin, chart=charts/zipkin
---
# Source: zipkin/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: zipkin
spec:
  selector:
    app: zipkin
  ports:
    - protocol: TCP
      port: 9411
      targetPort: 9411
  type: ClusterIP
---
# Source: zipkin/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: zipkin
  labels:
    app: zipkin
spec:
  replicas: 1
  selector:
    matchLabels:
      app: zipkin
  template:
    metadata:
      labels:
        app: zipkin
    spec:
      containers:
        - name: zipkin
          image: "openzipkin/zipkin:dev"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9411
          readinessProbe:
            httpGet:
              path: /health
              port: 9411
            initialDelaySeconds: 30
            periodSeconds: 10

