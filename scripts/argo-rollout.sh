#!/bin/bash

# --- Script para instalar y configurar Argo Rollouts y sus dependencias ---
#
# set -e: Salir inmediatamente si un comando falla.
# set -u: Tratar las variables no definidas como un error.
# set -o pipefail: El c√≥digo de salida de un pipeline es el del √∫ltimo comando que fall√≥.
set -euo pipefail

echo "‚û°Ô∏è  Paso 1: Creando el namespace 'argo-rollouts' (si no existe)..."
# El '|| true' asegura que el script no falle si el namespace ya existe.
kubectl create namespace argo-rollouts || true
echo "‚úÖ Namespace 'argo-rollouts' asegurado."
echo "" # L√≠nea en blanco para separar visualmente

echo "‚û°Ô∏è  Paso 2: Aplicando el manifiesto de instalaci√≥n principal de Argo Rollouts..."
# Este comando instala el controlador, los CRDs, el ServiceAccount, etc.
kubectl apply -n argo-rollouts -f https://github.com/argoproj/argo-rollouts/releases/latest/download/install.yaml
echo "‚úÖ Manifiesto principal de Argo Rollouts aplicado."
echo ""

echo "‚û°Ô∏è  Paso 3: Aplicando la configuraci√≥n del plugin Gateway API..."
# Este comando configura el ConfigMap para que el controlador pueda usar el plugin.
# Asume que el archivo est√° en la ruta relativa ./argo-rollouts/gateway-plugin.yaml
kubectl apply -n argo-rollouts -f ../argo-rollouts/gateway-plugin.yaml
echo "‚úÖ Configuraci√≥n del plugin aplicada."
echo ""

echo "‚û°Ô∏è  Paso 4: Aplicando los permisos RBAC para los namespaces de las aplicaciones..."
# ¬°IMPORTANTE! Este comando se ejecuta SIN el flag '-n argo-rollouts' a prop√≥sito.
# Esto es para que kubectl respete el 'namespace: default' que est√° definido dentro del archivo rbac.yaml.
kubectl apply -f ../argo-rollouts/rbac.yaml
echo "‚úÖ Permisos RBAC aplicados en el namespace 'default'."
echo ""

echo "üöÄ ¬°Instalaci√≥n y configuraci√≥n de Argo Rollouts completada!"